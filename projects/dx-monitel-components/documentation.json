{
    "pipes": [],
    "interfaces": [
        {
            "name": "Company",
            "id": "interface-Company-3414dc32a94f6a9775329f5db0eefc363c322057a6481dd925e510f576455a319724286a5f3a784d8d608e2d615bb754da5f43a00934c5f82f3341d6b354f4e5",
            "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { DxAccordionModule } from 'devextreme-angular';\nimport { MeAccordionDirective } from \"../../lib/directives/me-accordion/accordion.directive\";\nimport { Component, Input } from '@angular/core';\n\ninterface Company {\n  CompanyName: string;\n  Description: string;\n  City: string;\n  State: string;\n  Zipcode: string;\n  Address: string;\n  Phone: string;\n  Fax: string;\n  Website: string;\n}\n\ninterface MeAccordionProps {\n  size: 'small' | 'medium' | 'large';\n  customClass: string;\n  isCollapsible: boolean;\n  isMultiple: boolean;\n  animationDuration: number;\n  companies: Company[];\n  selectedItems: Company[];\n}\n\n@Component({\n  selector: 'accordion-demo',\n  template: `\n    <dx-accordion\n      meAccordion\n      [dataSource]=\"companies\"\n      [collapsible]=\"isCollapsible\"\n      [multiple]=\"isMultiple\"\n      [animationDuration]=\"animationDuration\"\n      [selectedItems]=\"selectedItems\"\n      [size]=\"size\"\n      [customClass]=\"customClass\"\n    >\n      <div *dxTemplate=\"let company of 'title'\">\n        <div class=\"accordion-header\">\n          <span class=\"accordion-title\">{{ company.CompanyName }}</span>\n          <span class=\"accordion-description\">{{ company.Description }}</span>\n        </div>\n      </div>\n      <div *dxTemplate=\"let company of 'item'\">\n        <div>\n          <p><b>{{ company.City }}</b> ({{ company.State }})</p>\n          <p>{{ company.Zipcode }} {{ company.Address }}</p>\n        </div>\n        <div>\n          <p>Phone: <b>{{ company.Phone }}</b></p>\n          <p>Fax: <b>{{ company.Fax }}</b></p>\n          <p>Website: <a href=\"{{ company.Website }}\" target=\"_blank\">{{ company.Website }}</a></p>\n        </div>\n      </div>\n    </dx-accordion>\n  `\n})\nclass AccordionDemoComponent {\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n  @Input() customClass: string = '';\n  @Input() isCollapsible: boolean = false;\n  @Input() isMultiple: boolean = false;\n  @Input() animationDuration: number = 300;\n  @Input() companies: Company[] = [];\n  @Input() selectedItems: Company[] = [];\n}\n\nconst meta: Meta<MeAccordionProps> = {\n  title: 'Components/MeAccordion',\n  component: MeAccordionDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeAccordionDirective, AccordionDemoComponent],\n      imports: [DxAccordionModule],\n    }),\n  ],\n  render: (args: MeAccordionProps) => ({\n    props: args,\n    template: '<accordion-demo [size]=\"size\" [customClass]=\"customClass\" [isCollapsible]=\"isCollapsible\" [isMultiple]=\"isMultiple\" [animationDuration]=\"animationDuration\" [companies]=\"companies\" [selectedItems]=\"selectedItems\"></accordion-demo>'\n  }),\n  argTypes: {\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    customClass: { control: 'text' },\n    isCollapsible: { control: 'boolean' },\n    isMultiple: { control: 'boolean' },\n    animationDuration: { control: { type: 'range', min: 0, max: 1000, step: 50 } },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MeAccordionProps>;\n\nconst defaultCompanies: Company[] = [\n  { CompanyName: 'Company A', Description: 'Description A', City: 'City A', State: 'State A', Zipcode: '12345', Address: 'Address A', Phone: '123-456-7890', Fax: '098-765-4321', Website: 'http://www.companya.com' },\n  { CompanyName: 'Company B', Description: 'Description B', City: 'City B', State: 'State B', Zipcode: '67890', Address: 'Address B', Phone: '234-567-8901', Fax: '109-876-5432', Website: 'http://www.companyb.com' },\n  { CompanyName: 'Company C', Description: 'Description C', City: 'City C', State: 'State C', Zipcode: '13579', Address: 'Address C', Phone: '345-678-9012', Fax: '210-987-6543', Website: 'http://www.companyc.com' },\n];\n\nexport const Default: Story = {\n  args: {\n    size: 'medium',\n    customClass: '',\n    isCollapsible: false,\n    isMultiple: false,\n    animationDuration: 300,\n    companies: defaultCompanies,\n    selectedItems: [defaultCompanies[0]],\n  },\n};\n\nexport const Small: Story = {\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n};\n\nexport const Large: Story = {\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n};\n\nexport const Collapsible: Story = {\n  args: {\n    ...Default.args,\n    isCollapsible: true,\n  },\n};\n\nexport const Multiple: Story = {\n  args: {\n    ...Default.args,\n    isMultiple: true,\n  },\n};\n\nexport const CustomAnimation: Story = {\n  args: {\n    ...Default.args,\n    animationDuration: 1000,\n  },\n};\n\nexport const CustomClass: Story = {\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-accordion',\n  },\n};\n",
            "properties": [
                {
                    "name": "Address",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "City",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "CompanyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "Description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "Fax",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Phone",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "State",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "Website",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "Zipcode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "MeAccordionProps",
            "id": "interface-MeAccordionProps-3414dc32a94f6a9775329f5db0eefc363c322057a6481dd925e510f576455a319724286a5f3a784d8d608e2d615bb754da5f43a00934c5f82f3341d6b354f4e5",
            "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { DxAccordionModule } from 'devextreme-angular';\nimport { MeAccordionDirective } from \"../../lib/directives/me-accordion/accordion.directive\";\nimport { Component, Input } from '@angular/core';\n\ninterface Company {\n  CompanyName: string;\n  Description: string;\n  City: string;\n  State: string;\n  Zipcode: string;\n  Address: string;\n  Phone: string;\n  Fax: string;\n  Website: string;\n}\n\ninterface MeAccordionProps {\n  size: 'small' | 'medium' | 'large';\n  customClass: string;\n  isCollapsible: boolean;\n  isMultiple: boolean;\n  animationDuration: number;\n  companies: Company[];\n  selectedItems: Company[];\n}\n\n@Component({\n  selector: 'accordion-demo',\n  template: `\n    <dx-accordion\n      meAccordion\n      [dataSource]=\"companies\"\n      [collapsible]=\"isCollapsible\"\n      [multiple]=\"isMultiple\"\n      [animationDuration]=\"animationDuration\"\n      [selectedItems]=\"selectedItems\"\n      [size]=\"size\"\n      [customClass]=\"customClass\"\n    >\n      <div *dxTemplate=\"let company of 'title'\">\n        <div class=\"accordion-header\">\n          <span class=\"accordion-title\">{{ company.CompanyName }}</span>\n          <span class=\"accordion-description\">{{ company.Description }}</span>\n        </div>\n      </div>\n      <div *dxTemplate=\"let company of 'item'\">\n        <div>\n          <p><b>{{ company.City }}</b> ({{ company.State }})</p>\n          <p>{{ company.Zipcode }} {{ company.Address }}</p>\n        </div>\n        <div>\n          <p>Phone: <b>{{ company.Phone }}</b></p>\n          <p>Fax: <b>{{ company.Fax }}</b></p>\n          <p>Website: <a href=\"{{ company.Website }}\" target=\"_blank\">{{ company.Website }}</a></p>\n        </div>\n      </div>\n    </dx-accordion>\n  `\n})\nclass AccordionDemoComponent {\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n  @Input() customClass: string = '';\n  @Input() isCollapsible: boolean = false;\n  @Input() isMultiple: boolean = false;\n  @Input() animationDuration: number = 300;\n  @Input() companies: Company[] = [];\n  @Input() selectedItems: Company[] = [];\n}\n\nconst meta: Meta<MeAccordionProps> = {\n  title: 'Components/MeAccordion',\n  component: MeAccordionDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeAccordionDirective, AccordionDemoComponent],\n      imports: [DxAccordionModule],\n    }),\n  ],\n  render: (args: MeAccordionProps) => ({\n    props: args,\n    template: '<accordion-demo [size]=\"size\" [customClass]=\"customClass\" [isCollapsible]=\"isCollapsible\" [isMultiple]=\"isMultiple\" [animationDuration]=\"animationDuration\" [companies]=\"companies\" [selectedItems]=\"selectedItems\"></accordion-demo>'\n  }),\n  argTypes: {\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    customClass: { control: 'text' },\n    isCollapsible: { control: 'boolean' },\n    isMultiple: { control: 'boolean' },\n    animationDuration: { control: { type: 'range', min: 0, max: 1000, step: 50 } },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MeAccordionProps>;\n\nconst defaultCompanies: Company[] = [\n  { CompanyName: 'Company A', Description: 'Description A', City: 'City A', State: 'State A', Zipcode: '12345', Address: 'Address A', Phone: '123-456-7890', Fax: '098-765-4321', Website: 'http://www.companya.com' },\n  { CompanyName: 'Company B', Description: 'Description B', City: 'City B', State: 'State B', Zipcode: '67890', Address: 'Address B', Phone: '234-567-8901', Fax: '109-876-5432', Website: 'http://www.companyb.com' },\n  { CompanyName: 'Company C', Description: 'Description C', City: 'City C', State: 'State C', Zipcode: '13579', Address: 'Address C', Phone: '345-678-9012', Fax: '210-987-6543', Website: 'http://www.companyc.com' },\n];\n\nexport const Default: Story = {\n  args: {\n    size: 'medium',\n    customClass: '',\n    isCollapsible: false,\n    isMultiple: false,\n    animationDuration: 300,\n    companies: defaultCompanies,\n    selectedItems: [defaultCompanies[0]],\n  },\n};\n\nexport const Small: Story = {\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n};\n\nexport const Large: Story = {\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n};\n\nexport const Collapsible: Story = {\n  args: {\n    ...Default.args,\n    isCollapsible: true,\n  },\n};\n\nexport const Multiple: Story = {\n  args: {\n    ...Default.args,\n    isMultiple: true,\n  },\n};\n\nexport const CustomAnimation: Story = {\n  args: {\n    ...Default.args,\n    animationDuration: 1000,\n  },\n};\n\nexport const CustomClass: Story = {\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-accordion',\n  },\n};\n",
            "properties": [
                {
                    "name": "animationDuration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "companies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Company[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "customClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "isCollapsible",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "isMultiple",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "selectedItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Company[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "MeCalendarProps",
            "id": "interface-MeCalendarProps-fd53ab681d5c5059d12b8ad6dd2779a4159fbffb0b27129d87b43063df9825d9ebd36115f5d106e79f274ac1980eb369d8d7d1464b77d7ffd071ec6177d0c638",
            "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { DxCalendarModule } from 'devextreme-angular';\nimport { MeCalendarDirective } from '../../public-api';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'calendar-demo',\n  template: `\n    <dx-calendar\n      meCalendar\n      [value]=\"currentValue\"\n      [showWeekNumbers]=\"showWeekNumbers\"\n      [disabled]=\"disabled\"\n      [firstDayOfWeek]=\"firstDayOfWeek\"\n      [zoomLevel]=\"zoomLevel\"\n      [weekNumberRule]=\"weekNumberRule\"\n      (onValueChanged)=\"onDateValueChanged($event)\"\n    ></dx-calendar>\n  `\n})\nclass CalendarDemoComponent {\n  @Input() currentValue: Date = new Date();\n  @Input() showWeekNumbers: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() firstDayOfWeek: number = 1;\n  @Input() zoomLevel: string = 'month';\n  @Input() weekNumberRule: string = 'firstDay';\n\n  onDateValueChanged(e: any) {\n    console.log('Date changed:', e.value);\n  }\n}\n\ninterface MeCalendarProps {\n  showWeekNumbers: boolean;\n  disabled: boolean;\n  firstDayOfWeek: number;\n  zoomLevel: string;\n  weekNumberRule: string;\n}\n\nconst meta: Meta<MeCalendarProps> = {\n  title: 'Components/MeCalendar',\n  component: MeCalendarDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeCalendarDirective, CalendarDemoComponent],\n      imports: [DxCalendarModule],\n    }),\n  ],\n  render: (args: MeCalendarProps) => ({\n    props: args,\n    template: `\n      <calendar-demo\n        [showWeekNumbers]=\"showWeekNumbers\"\n        [disabled]=\"disabled\"\n        [firstDayOfWeek]=\"firstDayOfWeek\"\n        [zoomLevel]=\"zoomLevel\"\n        [weekNumberRule]=\"weekNumberRule\"\n      ></calendar-demo>\n    `,\n  }),\n  argTypes: {\n    showWeekNumbers: {\n      control: 'boolean',\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    firstDayOfWeek: {\n      control: { type: 'select', options: [0, 1, 2, 3, 4, 5, 6] },\n    },\n    zoomLevel: {\n      control: { type: 'select', options: ['month', 'year', 'decade', 'century'] },\n    },\n    weekNumberRule: {\n      control: { type: 'select', options: ['auto', 'firstDay', 'firstFourDays', 'fullWeek'] },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MeCalendarProps>;\n\nexport const Default: Story = {\n  args: {\n    showWeekNumbers: true,\n    disabled: false,\n    firstDayOfWeek: 1,\n    zoomLevel: 'month',\n    weekNumberRule: 'firstDay',\n  },\n};\n\nexport const WithoutWeekNumbers: Story = {\n  args: {\n    ...Default.args,\n    showWeekNumbers: false,\n  },\n};\n\nexport const Disabled: Story = {\n  args: {\n    ...Default.args,\n    disabled: true,\n  },\n};\n\nexport const CustomFirstDay: Story = {\n  args: {\n    ...Default.args,\n    firstDayOfWeek: 0, // Sunday\n  },\n};\n\nexport const YearZoomLevel: Story = {\n  args: {\n    ...Default.args,\n    zoomLevel: 'year',\n  },\n};\n\nexport const CustomWeekNumberRule: Story = {\n  args: {\n    ...Default.args,\n    weekNumberRule: 'fullWeek',\n  },\n};\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "firstDayOfWeek",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "showWeekNumbers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "weekNumberRule",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "zoomLevel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "MeTabsProps",
            "id": "interface-MeTabsProps-3ce8931f7f273eb553804680f5fa39342c26797b5b138e8526ca2971ef8049e8188365a6836924af27c501cb9ca29daf50afa7f5497dca128518388d99159abd",
            "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { DxTabsModule } from 'devextreme-angular';\nimport {MeTabsDirective} from \"../../public-api\";\nimport {Tab} from \"../../lib/directives/me-tabs/tabs.directive\";\n\n\ninterface MeTabsProps {\n  customClass: string;\n  position: 'top' | 'bottom';\n  size: 'small' | 'medium' | 'large';\n  stylingMode: 'outside' | 'inside';\n  tabsData: Tab[];\n}\n\nconst meta: Meta<MeTabsProps> = {\n  title: 'Components/MeTabs',\n  component: MeTabsDirective,\n  // tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTabsDirective],\n      imports: [DxTabsModule],\n    }),\n  ],\n  render: (args: MeTabsProps) => ({\n    props: args,\n    template: `\n      <dx-tabs\n        meTabs\n        [customClass]=\"customClass\"\n        [position]=\"position\"\n        [size]=\"size\"\n        [stylingMode]=\"stylingMode\"\n        [dataSource]=\"tabsData\"\n        [selectedIndex]=\"0\"\n      ></dx-tabs>\n    `,\n  }),\n  argTypes: {\n    position: {\n      options: ['top', 'bottom'],\n      control: { type: 'radio' },\n    },\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    stylingMode: {\n      options: ['outside', 'inside'],\n      control: { type: 'radio' },\n    },\n    customClass: {\n      control: 'text',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MeTabsProps>;\n\nconst defaultTabsData: Tab[] = [\n  { id: 1, text: 'Tab 1' },\n  { id: 2, text: 'Tab 2' },\n  { id: 3, text: 'Tab 3' },\n];\n\nexport const Default: Story = {\n  args: {\n    position: 'top',\n    size: 'medium',\n    stylingMode: 'outside',\n    customClass: '',\n    tabsData: defaultTabsData,\n  },\n};\n\nexport const BottomPosition: Story = {\n  args: {\n    ...Default.args,\n    position: 'bottom',\n  },\n};\n\nexport const SmallSize: Story = {\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n};\n\nexport const LargeSize: Story = {\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n};\n\nexport const InsideStylingMode: Story = {\n  args: {\n    ...Default.args,\n    stylingMode: 'inside',\n  },\n};\n\nexport const WithCustomClass: Story = {\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-tabs-class',\n  },\n};\n\nexport const WithIcons: Story = {\n  args: {\n    ...Default.args,\n    tabsData: [\n      { id: 1, text: 'Tab 1', icon: 'user' },\n      { id: 2, text: 'Tab 2', icon: 'email' },\n      { id: 3, text: 'Tab 3', icon: 'chart' },\n    ],\n  },\n};\n",
            "properties": [
                {
                    "name": "customClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"top\" | \"bottom\"",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "stylingMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"outside\" | \"inside\"",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "tabsData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AccordionDemoComponent",
            "id": "component-AccordionDemoComponent-3414dc32a94f6a9775329f5db0eefc363c322057a6481dd925e510f576455a319724286a5f3a784d8d608e2d615bb754da5f43a00934c5f82f3341d6b354f4e5",
            "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "accordion-demo",
            "styleUrls": [],
            "styles": [],
            "template": "<dx-accordion\n  meAccordion\n  [dataSource]=\"companies\"\n  [collapsible]=\"isCollapsible\"\n  [multiple]=\"isMultiple\"\n  [animationDuration]=\"animationDuration\"\n  [selectedItems]=\"selectedItems\"\n  [size]=\"size\"\n  [customClass]=\"customClass\"\n>\n  <div *dxTemplate=\"let company of 'title'\">\n    <div class=\"accordion-header\">\n      <span class=\"accordion-title\">{{ company.CompanyName }}</span>\n      <span class=\"accordion-description\">{{ company.Description }}</span>\n    </div>\n  </div>\n  <div *dxTemplate=\"let company of 'item'\">\n    <div>\n      <p><b>{{ company.City }}</b> ({{ company.State }})</p>\n      <p>{{ company.Zipcode }} {{ company.Address }}</p>\n    </div>\n    <div>\n      <p>Phone: <b>{{ company.Phone }}</b></p>\n      <p>Fax: <b>{{ company.Fax }}</b></p>\n      <p>Website: <a href=\"{{ company.Website }}\" target=\"_blank\">{{ company.Website }}</a></p>\n    </div>\n  </div>\n</dx-accordion>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animationDuration",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "companies",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "Company[]",
                    "decorators": []
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "isCollapsible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isMultiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectedItems",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "Company[]",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { DxAccordionModule } from 'devextreme-angular';\nimport { MeAccordionDirective } from \"../../lib/directives/me-accordion/accordion.directive\";\nimport { Component, Input } from '@angular/core';\n\ninterface Company {\n  CompanyName: string;\n  Description: string;\n  City: string;\n  State: string;\n  Zipcode: string;\n  Address: string;\n  Phone: string;\n  Fax: string;\n  Website: string;\n}\n\ninterface MeAccordionProps {\n  size: 'small' | 'medium' | 'large';\n  customClass: string;\n  isCollapsible: boolean;\n  isMultiple: boolean;\n  animationDuration: number;\n  companies: Company[];\n  selectedItems: Company[];\n}\n\n@Component({\n  selector: 'accordion-demo',\n  template: `\n    <dx-accordion\n      meAccordion\n      [dataSource]=\"companies\"\n      [collapsible]=\"isCollapsible\"\n      [multiple]=\"isMultiple\"\n      [animationDuration]=\"animationDuration\"\n      [selectedItems]=\"selectedItems\"\n      [size]=\"size\"\n      [customClass]=\"customClass\"\n    >\n      <div *dxTemplate=\"let company of 'title'\">\n        <div class=\"accordion-header\">\n          <span class=\"accordion-title\">{{ company.CompanyName }}</span>\n          <span class=\"accordion-description\">{{ company.Description }}</span>\n        </div>\n      </div>\n      <div *dxTemplate=\"let company of 'item'\">\n        <div>\n          <p><b>{{ company.City }}</b> ({{ company.State }})</p>\n          <p>{{ company.Zipcode }} {{ company.Address }}</p>\n        </div>\n        <div>\n          <p>Phone: <b>{{ company.Phone }}</b></p>\n          <p>Fax: <b>{{ company.Fax }}</b></p>\n          <p>Website: <a href=\"{{ company.Website }}\" target=\"_blank\">{{ company.Website }}</a></p>\n        </div>\n      </div>\n    </dx-accordion>\n  `\n})\nclass AccordionDemoComponent {\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n  @Input() customClass: string = '';\n  @Input() isCollapsible: boolean = false;\n  @Input() isMultiple: boolean = false;\n  @Input() animationDuration: number = 300;\n  @Input() companies: Company[] = [];\n  @Input() selectedItems: Company[] = [];\n}\n\nconst meta: Meta<MeAccordionProps> = {\n  title: 'Components/MeAccordion',\n  component: MeAccordionDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeAccordionDirective, AccordionDemoComponent],\n      imports: [DxAccordionModule],\n    }),\n  ],\n  render: (args: MeAccordionProps) => ({\n    props: args,\n    template: '<accordion-demo [size]=\"size\" [customClass]=\"customClass\" [isCollapsible]=\"isCollapsible\" [isMultiple]=\"isMultiple\" [animationDuration]=\"animationDuration\" [companies]=\"companies\" [selectedItems]=\"selectedItems\"></accordion-demo>'\n  }),\n  argTypes: {\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    customClass: { control: 'text' },\n    isCollapsible: { control: 'boolean' },\n    isMultiple: { control: 'boolean' },\n    animationDuration: { control: { type: 'range', min: 0, max: 1000, step: 50 } },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MeAccordionProps>;\n\nconst defaultCompanies: Company[] = [\n  { CompanyName: 'Company A', Description: 'Description A', City: 'City A', State: 'State A', Zipcode: '12345', Address: 'Address A', Phone: '123-456-7890', Fax: '098-765-4321', Website: 'http://www.companya.com' },\n  { CompanyName: 'Company B', Description: 'Description B', City: 'City B', State: 'State B', Zipcode: '67890', Address: 'Address B', Phone: '234-567-8901', Fax: '109-876-5432', Website: 'http://www.companyb.com' },\n  { CompanyName: 'Company C', Description: 'Description C', City: 'City C', State: 'State C', Zipcode: '13579', Address: 'Address C', Phone: '345-678-9012', Fax: '210-987-6543', Website: 'http://www.companyc.com' },\n];\n\nexport const Default: Story = {\n  args: {\n    size: 'medium',\n    customClass: '',\n    isCollapsible: false,\n    isMultiple: false,\n    animationDuration: 300,\n    companies: defaultCompanies,\n    selectedItems: [defaultCompanies[0]],\n  },\n};\n\nexport const Small: Story = {\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n};\n\nexport const Large: Story = {\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n};\n\nexport const Collapsible: Story = {\n  args: {\n    ...Default.args,\n    isCollapsible: true,\n  },\n};\n\nexport const Multiple: Story = {\n  args: {\n    ...Default.args,\n    isMultiple: true,\n  },\n};\n\nexport const CustomAnimation: Story = {\n  args: {\n    ...Default.args,\n    animationDuration: 1000,\n  },\n};\n\nexport const CustomClass: Story = {\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-accordion',\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "CalendarDemoComponent",
            "id": "component-CalendarDemoComponent-fd53ab681d5c5059d12b8ad6dd2779a4159fbffb0b27129d87b43063df9825d9ebd36115f5d106e79f274ac1980eb369d8d7d1464b77d7ffd071ec6177d0c638",
            "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "calendar-demo",
            "styleUrls": [],
            "styles": [],
            "template": "<dx-calendar\n  meCalendar\n  [value]=\"currentValue\"\n  [showWeekNumbers]=\"showWeekNumbers\"\n  [disabled]=\"disabled\"\n  [firstDayOfWeek]=\"firstDayOfWeek\"\n  [zoomLevel]=\"zoomLevel\"\n  [weekNumberRule]=\"weekNumberRule\"\n  (onValueChanged)=\"onDateValueChanged($event)\"\n></dx-calendar>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "currentValue",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Date",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "firstDayOfWeek",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "showWeekNumbers",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "weekNumberRule",
                    "defaultValue": "'firstDay'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "zoomLevel",
                    "defaultValue": "'month'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onDateValueChanged",
                    "args": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "e",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { DxCalendarModule } from 'devextreme-angular';\nimport { MeCalendarDirective } from '../../public-api';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'calendar-demo',\n  template: `\n    <dx-calendar\n      meCalendar\n      [value]=\"currentValue\"\n      [showWeekNumbers]=\"showWeekNumbers\"\n      [disabled]=\"disabled\"\n      [firstDayOfWeek]=\"firstDayOfWeek\"\n      [zoomLevel]=\"zoomLevel\"\n      [weekNumberRule]=\"weekNumberRule\"\n      (onValueChanged)=\"onDateValueChanged($event)\"\n    ></dx-calendar>\n  `\n})\nclass CalendarDemoComponent {\n  @Input() currentValue: Date = new Date();\n  @Input() showWeekNumbers: boolean = true;\n  @Input() disabled: boolean = false;\n  @Input() firstDayOfWeek: number = 1;\n  @Input() zoomLevel: string = 'month';\n  @Input() weekNumberRule: string = 'firstDay';\n\n  onDateValueChanged(e: any) {\n    console.log('Date changed:', e.value);\n  }\n}\n\ninterface MeCalendarProps {\n  showWeekNumbers: boolean;\n  disabled: boolean;\n  firstDayOfWeek: number;\n  zoomLevel: string;\n  weekNumberRule: string;\n}\n\nconst meta: Meta<MeCalendarProps> = {\n  title: 'Components/MeCalendar',\n  component: MeCalendarDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeCalendarDirective, CalendarDemoComponent],\n      imports: [DxCalendarModule],\n    }),\n  ],\n  render: (args: MeCalendarProps) => ({\n    props: args,\n    template: `\n      <calendar-demo\n        [showWeekNumbers]=\"showWeekNumbers\"\n        [disabled]=\"disabled\"\n        [firstDayOfWeek]=\"firstDayOfWeek\"\n        [zoomLevel]=\"zoomLevel\"\n        [weekNumberRule]=\"weekNumberRule\"\n      ></calendar-demo>\n    `,\n  }),\n  argTypes: {\n    showWeekNumbers: {\n      control: 'boolean',\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    firstDayOfWeek: {\n      control: { type: 'select', options: [0, 1, 2, 3, 4, 5, 6] },\n    },\n    zoomLevel: {\n      control: { type: 'select', options: ['month', 'year', 'decade', 'century'] },\n    },\n    weekNumberRule: {\n      control: { type: 'select', options: ['auto', 'firstDay', 'firstFourDays', 'fullWeek'] },\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MeCalendarProps>;\n\nexport const Default: Story = {\n  args: {\n    showWeekNumbers: true,\n    disabled: false,\n    firstDayOfWeek: 1,\n    zoomLevel: 'month',\n    weekNumberRule: 'firstDay',\n  },\n};\n\nexport const WithoutWeekNumbers: Story = {\n  args: {\n    ...Default.args,\n    showWeekNumbers: false,\n  },\n};\n\nexport const Disabled: Story = {\n  args: {\n    ...Default.args,\n    disabled: true,\n  },\n};\n\nexport const CustomFirstDay: Story = {\n  args: {\n    ...Default.args,\n    firstDayOfWeek: 0, // Sunday\n  },\n};\n\nexport const YearZoomLevel: Story = {\n  args: {\n    ...Default.args,\n    zoomLevel: 'year',\n  },\n};\n\nexport const CustomWeekNumberRule: Story = {\n  args: {\n    ...Default.args,\n    weekNumberRule: 'fullWeek',\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "LoadPanelDemoComponent",
            "id": "component-LoadPanelDemoComponent-6e75ee797eee301c9aec1722cadb25ff894205e279046fe68211589424ed9dbd5d41bf4b9e8a6c5306a58d4a6a04f7f59df1b68341ea82636aefb3a43d1756a3",
            "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "load-panel-demo",
            "styleUrls": [],
            "styles": [
                "\n    .header {\n      font-size: 24px;\n      margin-bottom: 20px;\n    }\n    #employee {\n      margin: 20px 0;\n    }\n    .options {\n      margin-top: 20px;\n    }\n    .option {\n      margin-bottom: 10px;\n    }\n  "
            ],
            "template": "<dx-button text=\"Load Data\" (onClick)=\"showLoadPanel()\"> </dx-button>\n\n<dx-load-panel\n  #loadPanel\n  meLoadPanel\n  shadingColor=\"rgba(0,0,0,0.4)\"\n  [position]=\"{ of: '#employee' }\"\n  [(visible)]=\"loadingVisible\"\n  [showIndicator]=\"showIndicator\"\n  [showPane]=\"showPane\"\n  [shading]=\"shading\"\n  [hideOnOutsideClick]=\"hideOnOutsideClick\"\n  (onShown)=\"onShown()\"\n  (onHidden)=\"onHidden()\"\n  [size]=\"size\"\n  [customClass]=\"customClass\"\n></dx-load-panel>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "customClass",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hideOnOutsideClick",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "shading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showIndicator",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showPane",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "employeeInfo",
                    "defaultValue": "{\n    Birth_Date: '1985-01-15',\n    City: 'Los Angeles',\n    Zipcode: '90001',\n    Address: '1234 Main St',\n    Mobile_Phone: '555-1234',\n    Email: 'john.heart@example.com',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "loadingVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [
                {
                    "name": "onHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onShown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showLoadPanel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Meta, StoryObj } from '@storybook/angular';\nimport { DxButtonModule, DxLoadPanelModule, DxCheckBoxModule } from 'devextreme-angular';\nimport { MeLoadPanelDirective } from '../../public-api'\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'load-panel-demo',\n  template: `\n    <dx-button text=\"Load Data\" (onClick)=\"showLoadPanel()\"> </dx-button>\n\n    <dx-load-panel\n      #loadPanel\n      meLoadPanel\n      shadingColor=\"rgba(0,0,0,0.4)\"\n      [position]=\"{ of: '#employee' }\"\n      [(visible)]=\"loadingVisible\"\n      [showIndicator]=\"showIndicator\"\n      [showPane]=\"showPane\"\n      [shading]=\"shading\"\n      [hideOnOutsideClick]=\"hideOnOutsideClick\"\n      (onShown)=\"onShown()\"\n      (onHidden)=\"onHidden()\"\n      [size]=\"size\"\n      [customClass]=\"customClass\"\n    ></dx-load-panel>\n  `,\n  styles: [`\n    .header {\n      font-size: 24px;\n      margin-bottom: 20px;\n    }\n    #employee {\n      margin: 20px 0;\n    }\n    .options {\n      margin-top: 20px;\n    }\n    .option {\n      margin-bottom: 10px;\n    }\n  `]\n})\nexport class LoadPanelDemoComponent {\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n  @Input() customClass: boolean = false;\n  @Input() showIndicator: boolean = true;\n  @Input() showPane: boolean = true;\n  @Input() shading: boolean = true;\n  @Input() hideOnOutsideClick: boolean = false;\n\n  loadingVisible = false;\n  employeeInfo = {\n    Birth_Date: '1985-01-15',\n    City: 'Los Angeles',\n    Zipcode: '90001',\n    Address: '1234 Main St',\n    Mobile_Phone: '555-1234',\n    Email: 'john.heart@example.com',\n  };\n\n  showLoadPanel() {\n    this.loadingVisible = true;\n  }\n\n  onShown() {\n    setTimeout(() => {\n      this.loadingVisible = false;\n    }, 3000);\n  }\n\n  onHidden() {\n    // do something when hidden\n  }\n}\n\nconst meta: Meta<LoadPanelDemoComponent> = {\n  title: 'Components/MeLoadPanel',\n  component: LoadPanelDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeLoadPanelDirective, LoadPanelDemoComponent],\n      imports: [DxButtonModule, DxLoadPanelModule, DxCheckBoxModule],\n    }),\n  ],\n  argTypes: {\n    size: {\n      control: { type: 'select', options: ['small', 'medium', 'large'] },\n    },\n    customClass: { control: 'boolean' },\n    showIndicator: { control: 'boolean' },\n    showPane: { control: 'boolean' },\n    shading: { control: 'boolean' },\n    hideOnOutsideClick: { control: 'boolean' },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<LoadPanelDemoComponent>;\n\nexport const Default: Story = {\n  args: {\n    size: 'medium',\n    customClass: false,\n    showIndicator: true,\n    showPane: true,\n    shading: true,\n    hideOnOutsideClick: false,\n  },\n};\n\nexport const Small: Story = {\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n};\n\nexport const Large: Story = {\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n};\n\nexport const CustomClass: Story = {\n  args: {\n    ...Default.args,\n    customClass: true,\n  },\n};\n\nexport const HideOnOutsideClick: Story = {\n  args: {\n    ...Default.args,\n    hideOnOutsideClick: true,\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .header {\n      font-size: 24px;\n      margin-bottom: 20px;\n    }\n    #employee {\n      margin: 20px 0;\n    }\n    .options {\n      margin-top: 20px;\n    }\n    .option {\n      margin-bottom: 10px;\n    }\n  \n",
            "extends": []
        },
        {
            "name": "PopoverHostComponent",
            "id": "component-PopoverHostComponent-20e467e553945e8f10f0ccaecab5631f9370b984dfe78b83f3a06495a8768069d7472151f8dc5466badee1ad5dc67c3150081e0972ed7b4d0e847057ce9e78cb",
            "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "popover-host",
            "styleUrls": [],
            "styles": [],
            "template": "<div class=\"dx-fieldset form\">\n  <div class=\"dx-field\">\n    <div class=\"dx-field-label me-title-subheader1\">{{ label }}</div>\n    <div class=\"dx-field-value-static\">\n      <p>\n        <span id=\"subject\" class=\"me-text-body2\">{{ subject }}</span>\n        (<a class=\"test-details me-action-link1\" id=\"link\">details</a>)\n      </p>\n      <dx-popover\n        mePopover\n        target=\"#link\"\n        [showEvent]=\"showEvent\"\n        [hideEvent]=\"hideEvent\"\n        [position]=\"position\"\n        [width]=\"width\"\n        [maxWidth]=\"maxWidth\"\n        [showTitle]=\"showTitle\"\n        [title]=\"title\"\n        [shading]=\"shading\"\n        [shadingColor]=\"shadingColor\"\n      >\n        <dxo-animation *ngIf=\"animationEnabled\">\n          <dxo-show type=\"pop\" [from]=\"{ scale: 0 }\" [to]=\"{ scale: 1 }\"></dxo-show>\n          <dxo-hide type=\"fade\" [from]=\"1\" [to]=\"0\"></dxo-hide>\n        </dxo-animation>\n        <div *dxTemplate=\"let data of 'content'\">\n          {{ content }}\n        </div>\n      </dx-popover>\n    </div>\n  </div>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animationEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "content",
                    "defaultValue": "'Popover content'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "hideEvent",
                    "defaultValue": "'mouseleave'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Default mode'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "number | undefined",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "shading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "shadingColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showEvent",
                    "defaultValue": "'mouseenter'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showTitle",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "subject",
                    "defaultValue": "'Google AdWords Strategy'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "width",
                    "defaultValue": "300",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, moduleMetadata, StoryObj } from '@storybook/angular';\nimport { DxPopoverModule } from 'devextreme-angular/ui/popover';\nimport { MePopoverDirective } from '../../public-api';\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'popover-host',\n  template: `\n    <div class=\"dx-fieldset form\">\n      <div class=\"dx-field\">\n        <div class=\"dx-field-label me-title-subheader1\">{{ label }}</div>\n        <div class=\"dx-field-value-static\">\n          <p>\n            <span id=\"subject\" class=\"me-text-body2\">{{ subject }}</span>\n            (<a class=\"test-details me-action-link1\" id=\"link\">details</a>)\n          </p>\n          <dx-popover\n            mePopover\n            target=\"#link\"\n            [showEvent]=\"showEvent\"\n            [hideEvent]=\"hideEvent\"\n            [position]=\"position\"\n            [width]=\"width\"\n            [maxWidth]=\"maxWidth\"\n            [showTitle]=\"showTitle\"\n            [title]=\"title\"\n            [shading]=\"shading\"\n            [shadingColor]=\"shadingColor\"\n          >\n            <dxo-animation *ngIf=\"animationEnabled\">\n              <dxo-show type=\"pop\" [from]=\"{ scale: 0 }\" [to]=\"{ scale: 1 }\"></dxo-show>\n              <dxo-hide type=\"fade\" [from]=\"1\" [to]=\"0\"></dxo-hide>\n            </dxo-animation>\n            <div *dxTemplate=\"let data of 'content'\">\n              {{ content }}\n            </div>\n          </dx-popover>\n        </div>\n      </div>\n    </div>\n  `,\n})\nclass PopoverHostComponent {\n  @Input() label: string = 'Default mode';\n  @Input() subject: string = 'Google AdWords Strategy';\n  @Input() showEvent: string = 'mouseenter';\n  @Input() hideEvent: string = 'mouseleave';\n  @Input() position: string = 'top';\n  @Input() width: number = 300;\n  @Input() maxWidth: number | undefined;\n  @Input() showTitle: boolean = false;\n  @Input() title: string = '';\n  @Input() shading: boolean = false;\n  @Input() shadingColor: string = '';\n  @Input() content: string = 'Popover content';\n  @Input() animationEnabled: boolean = false;\n}\n\nconst meta: Meta<PopoverHostComponent> = {\n  title: 'Components/MePopover',\n  component: PopoverHostComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MePopoverDirective, PopoverHostComponent],\n      imports: [DxPopoverModule],\n    }),\n  ],\n  argTypes: {\n    label: { control: 'text' },\n    subject: { control: 'text' },\n    showEvent: { control: 'text' },\n    hideEvent: { control: 'text' },\n    position: { control: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    width: { control: 'number' },\n    maxWidth: { control: 'number' },\n    showTitle: { control: 'boolean' },\n    title: { control: 'text' },\n    shading: { control: 'boolean' },\n    shadingColor: { control: 'color' },\n    content: { control: 'text' },\n    animationEnabled: { control: 'boolean' },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<PopoverHostComponent>;\n\nexport const Default: Story = {\n  args: {\n    label: 'Default mode',\n    subject: 'Show Popover',\n    // showEvent: 'mouseenter',\n    // hideEvent: 'mouseleave',\n    position: 'top',\n    width: 300,\n    content: 'Make final decision on whether we are going to increase our Google AdWord spend based on our 2013 marketing plan.',\n  },\n};\n\nexport const WithTitle: Story = {\n  args: {\n    ...Default.args,\n    label: 'With title',\n    subject: 'Rollout of New Website and Marketing Brochures',\n    position: 'bottom',\n    showTitle: true,\n    title: 'Details',\n    maxWidth: 400,\n    content: 'The designs for new brochures and website have been approved. Launch date is set for Feb 28.',\n  },\n};\n\nexport const WithAnimation: Story = {\n  args: {\n    ...Default.args,\n    label: 'With animation',\n    subject: 'Create 2012 Sales Report',\n    animationEnabled: true,\n    content: '2012 Sales Report has to be completed so we can determine if major changes are required to sales strategy.',\n  },\n};\n\nexport const WithOverlay: Story = {\n  args: {\n    ...Default.args,\n    label: 'With overlay',\n    subject: 'Website Re-Design Plan',\n    showEvent: 'click',\n    shading: true,\n    shadingColor: 'rgba(0, 0, 0, 0.5)',\n    content: 'The changes in our brochure designs for 2013 require us to update key areas of our website.',\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "TabPanelHostComponent",
            "id": "component-TabPanelHostComponent-1c41098abafd2fd0449c3969973cbf52c03fd36248977d2a605c8585502f3b4682aabde123eb9f698a6ccb3c4de7a891c421d620c6e4a1250d1ee6173b764d79",
            "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tab-panel-host",
            "styleUrls": [],
            "styles": [],
            "template": "<dx-tab-panel\n  meTabPanel\n  [height]=\"height\"\n  width=\"400px\"\n  [selectedIndex]=\"selectedIndex\"\n  [animationEnabled]=\"animationEnabled\"\n  [swipeEnabled]=\"swipeEnabled\"\n  [customClass]=\"customClass\"\n  [hoverStateEnabled]=\"true\"\n>\n  <dxi-item title=\"Employee\" icon=\"floppy\">\n    <div class=\"tabpanel-content\">\n      <p>Content for Employee tab</p>\n    </div>\n  </dxi-item>\n  <dxi-item title=\"Notes\" icon=\"comment\">\n    <div class=\"tabpanel-content\">\n      <p>Content for Notes tab</p>\n    </div>\n  </dxi-item>\n  <dxi-item title=\"Role\" icon=\"isnotblank\">\n    <div class=\"tabpanel-content\">\n      <p>Content for Role tab</p>\n    </div>\n  </dxi-item>\n</dx-tab-panel>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "animationEnabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "height",
                    "defaultValue": "'300px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "selectedIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "swipeEnabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Meta, moduleMetadata, StoryObj } from '@storybook/angular';\nimport { DxTabPanelModule } from 'devextreme-angular';\nimport { MeTabPanelDirective } from \"../../public-api\";\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'tab-panel-host',\n  template: `\n    <dx-tab-panel\n      meTabPanel\n      [height]=\"height\"\n      width=\"400px\"\n      [selectedIndex]=\"selectedIndex\"\n      [animationEnabled]=\"animationEnabled\"\n      [swipeEnabled]=\"swipeEnabled\"\n      [customClass]=\"customClass\"\n      [hoverStateEnabled]=\"true\"\n    >\n      <dxi-item title=\"Employee\" icon=\"floppy\">\n        <div class=\"tabpanel-content\">\n          <p>Content for Employee tab</p>\n        </div>\n      </dxi-item>\n      <dxi-item title=\"Notes\" icon=\"comment\">\n        <div class=\"tabpanel-content\">\n          <p>Content for Notes tab</p>\n        </div>\n      </dxi-item>\n      <dxi-item title=\"Role\" icon=\"isnotblank\">\n        <div class=\"tabpanel-content\">\n          <p>Content for Role tab</p>\n        </div>\n      </dxi-item>\n    </dx-tab-panel>\n  `,\n})\nclass TabPanelHostComponent {\n  height: string = '300px';\n  selectedIndex: number = 0;\n  animationEnabled: boolean = true;\n  swipeEnabled: boolean = true;\n  customClass: string = '';\n}\n\nconst meta: Meta<TabPanelHostComponent> = {\n  title: 'Components/MeTabPanel',\n  component: TabPanelHostComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTabPanelDirective, TabPanelHostComponent],\n      imports: [DxTabPanelModule],\n    }),\n  ],\n  argTypes: {\n    customClass: { control: 'text' },\n    height: { control: 'text' },\n    selectedIndex: { control: 'number' },\n    animationEnabled: { control: 'boolean' },\n    swipeEnabled: { control: 'boolean' },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<TabPanelHostComponent>;\n\nexport const Default: Story = {\n  args: {\n    height: '300px',\n    selectedIndex: 0,\n    animationEnabled: true,\n    swipeEnabled: true,\n    customClass: '',\n  },\n};\n\nexport const WithCustomClass: Story = {\n  args: {\n    ...Default.args,\n    customClass: 'custom-class',\n  },\n};\n\nexport const WithoutAnimation: Story = {\n  args: {\n    ...Default.args,\n    animationEnabled: false,\n  },\n};\n\nexport const WithoutSwipe: Story = {\n  args: {\n    ...Default.args,\n    swipeEnabled: false,\n  },\n};\n\nexport const CustomHeight: Story = {\n  args: {\n    ...Default.args,\n    height: '500px',\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ToastDemoComponent",
            "id": "component-ToastDemoComponent-b5d9b20734ccd3fe40b520651412f76d15c4f6c307536e057e0862ad5f52e79f2f47f37afe4c9e876552b4c8557c144c2d14d4ca8659e8d91f243c6637b992b2",
            "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "toast-demo",
            "styleUrls": [],
            "styles": [],
            "template": "<dx-toast\n  meToast\n  #dxToast\n  [message]=\"message\"\n  [displayTime]=\"displayTime\"\n  [position]=\"position\"\n  [animation]=\"animation\"\n  [customClass]=\"customClass\"\n></dx-toast>\n\n<dx-button text=\"Show Toast\" (onClick)=\"showToast()\"> </dx-button>\n<button (click)=\"showToast()\">Show Toast</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animation",
                    "defaultValue": "{\n    show: { type: 'fade', duration: 400, from: 0, to: 1 },\n    hide: { type: 'fade', duration: 400, from: 1, to: 0 },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "displayTime",
                    "defaultValue": "2000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "'This is a toast message'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'bottom right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dxToast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DxToastComponent",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dxToast', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "showToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { moduleMetadata, type Meta, type StoryObj } from '@storybook/angular';\nimport { Component, Input, ViewChild } from '@angular/core';\nimport { DxToastModule, DxToastComponent } from 'devextreme-angular';\nimport { MeToastDirective } from \"../../lib/directives/me-toast/toast.directive\";\n\n@Component({\n  selector: 'toast-demo',\n  template: `\n    <dx-toast\n      meToast\n      #dxToast\n      [message]=\"message\"\n      [displayTime]=\"displayTime\"\n      [position]=\"position\"\n      [animation]=\"animation\"\n      [customClass]=\"customClass\"\n    ></dx-toast>\n\n    <dx-button text=\"Show Toast\" (onClick)=\"showToast()\"> </dx-button>\n    <button (click)=\"showToast()\">Show Toast</button>\n  `\n})\nclass ToastDemoComponent {\n  @ViewChild('dxToast', { static: false }) dxToast!: DxToastComponent;\n\n  @Input() message: string = 'This is a toast message';\n  @Input() displayTime: number = 2000;\n  @Input() position: any = 'bottom right';\n  @Input() animation: any = {\n    show: { type: 'fade', duration: 400, from: 0, to: 1 },\n    hide: { type: 'fade', duration: 400, from: 1, to: 0 },\n  };\n  @Input() customClass: string = '';\n\n  showToast() {\n    if (this.dxToast && this.dxToast.instance) {\n      this.dxToast.instance.show();\n    }\n  }\n}\n\nconst meta: Meta<ToastDemoComponent> = {\n  title: 'Components/meToast',\n  component: ToastDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeToastDirective, ToastDemoComponent],\n      imports: [DxToastModule],\n    }),\n  ],\n  argTypes: {\n    message: { control: 'text' },\n    displayTime: { control: 'number' },\n    position: {\n      control: 'select',\n      options: ['top left', 'top center', 'top right', 'bottom left', 'bottom center', 'bottom right'],\n    },\n    customClass: { control: 'text' },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<ToastDemoComponent>;\n\nexport const Default: Story = {\n  args: {\n    message: 'This is a toast message',\n    displayTime: 2000,\n    position: 'bottom right',\n    animation: {\n      show: { type: 'fade', duration: 400, from: 0, to: 1 },\n      hide: { type: 'fade', duration: 400, from: 1, to: 0 },\n    },\n    customClass: '',\n  },\n};\n\nexport const LongDuration: Story = {\n  args: {\n    ...Default.args,\n    displayTime: 5000,\n    message: 'This toast will be displayed for 5 seconds',\n  },\n};\n\nexport const CustomPosition: Story = {\n  args: {\n    ...Default.args,\n    position: 'top center',\n    message: 'This toast is positioned at the top center',\n  },\n};\n\nexport const CustomAnimation: Story = {\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom animation',\n    animation: {\n      show: { type: 'pop', duration: 400, from: { scale: 0 }, to: { scale: 1 } },\n      hide: { type: 'pop', duration: 400, to: { scale: 0 } },\n    },\n  },\n};\n\nexport const CustomClass: Story = {\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom CSS class',\n    customClass: 'my-custom-toast',\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "TooltipDemoComponent",
            "id": "component-TooltipDemoComponent-d043727c41ecd475d163018772cd9c1a6b9f46e675521e445d9fae8a98759ccfdc7a77cbaf8d4fcedf883f4181b20838762a18f398233d6617eeae17cf8f07bc",
            "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tooltip-demo",
            "styleUrls": [],
            "styles": [
                "\n    .tooltip-demo {\n      display: flex;\n      justify-content: space-around;\n      padding: 20px;\n      background-color: #f0f0f0;\n      border-radius: 10px;\n    }\n\n    .tooltip-group {\n      text-align: center;\n      margin-left: 20px;\n    }\n\n    .tooltip-controls {\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n    }\n\n    .tooltip-button {\n      padding: 10px;\n      border: none;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: background-color 0.3s;\n    }\n\n    .interactive-tooltip {\n      box-sizing: border-box;\n      padding: 4px;\n    }\n\n    .interactive-tooltip * {\n      text-wrap: balance;\n    }\n\n    .interactive-tooltip button {\n      margin-top: 8px;\n      margin-inline: 4px;\n      padding: 4px 8px;\n      border: none;\n      border-radius: 3px;\n      cursor: pointer;\n    }\n\n    .interactive-tooltip .accept-button {\n      background-color: #3257dc;\n      color: white;\n    }\n\n    .interactive-tooltip .decline-button {\n      background-color: #ecedf3;\n      color: #18181a;\n    }\n\n    .custom-tooltip {\n      background-color: #ff9800;\n      color: white;\n      border: 2px solid #e68a00;\n      border-radius: 10px;\n      padding: 10px;\n    }\n\n    .html-tooltip * {\n      text-wrap: balance;\n      text-align: start;\n      margin-top: 4px;\n    }\n  "
            ],
            "template": "<div class=\"tooltip-demo dx-widget\">\n  <div class=\"tooltip-group\">\n    <div class=\"tooltip-controls\">\n      <button\n        class=\"tooltip-button\"\n        [meTooltip]=\"simpleTooltip\"\n        [tooltipPosition]=\"simplePosition\"\n      >\n        {{ simpleButtonText }}\n      </button>\n\n      <button\n        class=\"tooltip-button\"\n        [meTooltip]=\"animatedTooltip\"\n        [tooltipPosition]=\"animatedPosition\"\n        [tooltipShowAnimation]=\"showAnimation\"\n        [tooltipHideAnimation]=\"hideAnimation\"\n      >\n        {{ animatedButtonText }}\n      </button>\n\n      <button\n        class=\"tooltip-button\"\n        [meTooltip]=\"positionedTooltip\"\n        [tooltipPosition]=\"positionedPosition\"\n      >\n        {{ positionedButtonText }}\n      </button>\n    </div>\n  </div>\n\n  <div class=\"tooltip-group\">\n    <div class=\"tooltip-controls\">\n      <button\n        class=\"tooltip-button\"\n        [meTooltip]=\"''\"\n        [tooltipTemplateRef]=\"interactiveTemplate\"\n        [tooltipPosition]=\"interactivePosition\"\n        [tooltipMaxWidth]=\"interactiveMaxWidth\"\n      >\n        {{ interactiveButtonText }}\n      </button>\n\n      <button\n        class=\"tooltip-button\"\n        [meTooltip]=\"''\"\n        [tooltipTemplateRef]=\"htmlTemplate\"\n        [tooltipPosition]=\"htmlPosition\"\n        [tooltipMaxWidth]=\"htmlMaxWidth\"\n      >\n        {{ htmlButtonText }}\n      </button>\n\n      <button\n        class=\"tooltip-button\"\n        [meTooltip]=\"''\"\n        [tooltipTemplateRef]=\"customStyleTemplate\"\n        [tooltipPosition]=\"customStylePosition\"\n        [tooltipClass]=\"customStyleClass\"\n      >\n        {{ customStyleButtonText }}\n      </button>\n    </div>\n  </div>\n</div>\n\n<ng-template #htmlTemplate>\n  <div class=\"html-tooltip\">\n    <h3>HTML в тултипе</h3>\n    <p>\n      Тултипы могут содержать <strong>форматированный текст</strong>, <em>списки</em> и другие\n      HTML-элементы:\n    </p>\n    <ul>\n      <li>Пункт 1</li>\n      <li>Пункт 2</li>\n    </ul>\n  </div>\n</ng-template>\n\n<ng-template #interactiveTemplate>\n  <div class=\"interactive-tooltip\">\n    <h3>Интерактивный тултип</h3>\n    <p>Тултипы могут содержать интерактивные элементы:</p>\n    <button class=\"accept-button\">Принять</button>\n    <button class=\"decline-button\">Отменить</button>\n  </div>\n</ng-template>\n\n<ng-template #customStyleTemplate>\n  <div class=\"custom-tooltip\">\n    <h3>Пользовательские стили</h3>\n    <p>Этот тултип имеет особое оформление, заданное через CSS-класс.</p>\n  </div>\n</ng-template>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animatedButtonText",
                    "defaultValue": "'Анимированный'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 182,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "animatedPosition",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 181,
                    "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "animatedTooltip",
                    "defaultValue": "'Тултип с анимацией'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 180,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customStyleButtonText",
                    "defaultValue": "'Пользовательские стили'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 208,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customStyleClass",
                    "defaultValue": "'custom-tooltip'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 207,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customStylePosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 206,
                    "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "hideAnimation",
                    "defaultValue": "{\n    type: 'pop',\n    from: { scale: 1, opacity: 1 },\n    to: { opacity: 0, scale: 0.1 },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 188,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "htmlButtonText",
                    "defaultValue": "'HTML-содержимое'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 204,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "htmlMaxWidth",
                    "defaultValue": "'300'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 203,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "htmlPosition",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 202,
                    "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "interactiveButtonText",
                    "defaultValue": "'Интерактивный тултип'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 200,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "interactiveMaxWidth",
                    "defaultValue": "'200'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 199,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "interactivePosition",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 198,
                    "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "positionedButtonText",
                    "defaultValue": "'Позиционирование'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 196,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "positionedPosition",
                    "defaultValue": "'bottom'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 195,
                    "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "positionedTooltip",
                    "defaultValue": "'Тултип снизу'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 194,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showAnimation",
                    "defaultValue": "{\n    type: 'slide',\n    from: { left: -100, opacity: 0 },\n    to: { opacity: 1, left: 0 },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 183,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "simpleButtonText",
                    "defaultValue": "'Простой тултип'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 178,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "simplePosition",
                    "defaultValue": "'top'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 177,
                    "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "simpleTooltip",
                    "defaultValue": "'Это простой текстовый тултип'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 176,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { moduleMetadata, Meta, StoryObj } from '@storybook/angular';\nimport { Component, Input } from '@angular/core';\nimport { MeTooltipDirective } from \"../../public-api\";\n\n@Component({\n  selector: 'tooltip-demo',\n  template: `\n    <div class=\"tooltip-demo dx-widget\">\n      <div class=\"tooltip-group\">\n        <div class=\"tooltip-controls\">\n          <button\n            class=\"tooltip-button\"\n            [meTooltip]=\"simpleTooltip\"\n            [tooltipPosition]=\"simplePosition\"\n          >\n            {{ simpleButtonText }}\n          </button>\n\n          <button\n            class=\"tooltip-button\"\n            [meTooltip]=\"animatedTooltip\"\n            [tooltipPosition]=\"animatedPosition\"\n            [tooltipShowAnimation]=\"showAnimation\"\n            [tooltipHideAnimation]=\"hideAnimation\"\n          >\n            {{ animatedButtonText }}\n          </button>\n\n          <button\n            class=\"tooltip-button\"\n            [meTooltip]=\"positionedTooltip\"\n            [tooltipPosition]=\"positionedPosition\"\n          >\n            {{ positionedButtonText }}\n          </button>\n        </div>\n      </div>\n\n      <div class=\"tooltip-group\">\n        <div class=\"tooltip-controls\">\n          <button\n            class=\"tooltip-button\"\n            [meTooltip]=\"''\"\n            [tooltipTemplateRef]=\"interactiveTemplate\"\n            [tooltipPosition]=\"interactivePosition\"\n            [tooltipMaxWidth]=\"interactiveMaxWidth\"\n          >\n            {{ interactiveButtonText }}\n          </button>\n\n          <button\n            class=\"tooltip-button\"\n            [meTooltip]=\"''\"\n            [tooltipTemplateRef]=\"htmlTemplate\"\n            [tooltipPosition]=\"htmlPosition\"\n            [tooltipMaxWidth]=\"htmlMaxWidth\"\n          >\n            {{ htmlButtonText }}\n          </button>\n\n          <button\n            class=\"tooltip-button\"\n            [meTooltip]=\"''\"\n            [tooltipTemplateRef]=\"customStyleTemplate\"\n            [tooltipPosition]=\"customStylePosition\"\n            [tooltipClass]=\"customStyleClass\"\n          >\n            {{ customStyleButtonText }}\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <ng-template #htmlTemplate>\n      <div class=\"html-tooltip\">\n        <h3>HTML в тултипе</h3>\n        <p>\n          Тултипы могут содержать <strong>форматированный текст</strong>, <em>списки</em> и другие\n          HTML-элементы:\n        </p>\n        <ul>\n          <li>Пункт 1</li>\n          <li>Пункт 2</li>\n        </ul>\n      </div>\n    </ng-template>\n\n    <ng-template #interactiveTemplate>\n      <div class=\"interactive-tooltip\">\n        <h3>Интерактивный тултип</h3>\n        <p>Тултипы могут содержать интерактивные элементы:</p>\n        <button class=\"accept-button\">Принять</button>\n        <button class=\"decline-button\">Отменить</button>\n      </div>\n    </ng-template>\n\n    <ng-template #customStyleTemplate>\n      <div class=\"custom-tooltip\">\n        <h3>Пользовательские стили</h3>\n        <p>Этот тултип имеет особое оформление, заданное через CSS-класс.</p>\n      </div>\n    </ng-template>\n  `,\n  styles: [`\n    .tooltip-demo {\n      display: flex;\n      justify-content: space-around;\n      padding: 20px;\n      background-color: #f0f0f0;\n      border-radius: 10px;\n    }\n\n    .tooltip-group {\n      text-align: center;\n      margin-left: 20px;\n    }\n\n    .tooltip-controls {\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n    }\n\n    .tooltip-button {\n      padding: 10px;\n      border: none;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: background-color 0.3s;\n    }\n\n    .interactive-tooltip {\n      box-sizing: border-box;\n      padding: 4px;\n    }\n\n    .interactive-tooltip * {\n      text-wrap: balance;\n    }\n\n    .interactive-tooltip button {\n      margin-top: 8px;\n      margin-inline: 4px;\n      padding: 4px 8px;\n      border: none;\n      border-radius: 3px;\n      cursor: pointer;\n    }\n\n    .interactive-tooltip .accept-button {\n      background-color: #3257dc;\n      color: white;\n    }\n\n    .interactive-tooltip .decline-button {\n      background-color: #ecedf3;\n      color: #18181a;\n    }\n\n    .custom-tooltip {\n      background-color: #ff9800;\n      color: white;\n      border: 2px solid #e68a00;\n      border-radius: 10px;\n      padding: 10px;\n    }\n\n    .html-tooltip * {\n      text-wrap: balance;\n      text-align: start;\n      margin-top: 4px;\n    }\n  `]\n})\nclass TooltipDemoComponent {\n  @Input() simpleTooltip: string = 'Это простой текстовый тултип';\n  @Input() simplePosition: 'top' | 'bottom' | 'left' | 'right' = 'top';\n  @Input() simpleButtonText: string = 'Простой тултип';\n\n  @Input() animatedTooltip: string = 'Тултип с анимацией';\n  @Input() animatedPosition: 'top' | 'bottom' | 'left' | 'right' = 'left';\n  @Input() animatedButtonText: string = 'Анимированный';\n  @Input() showAnimation: any = {\n    type: 'slide',\n    from: { left: -100, opacity: 0 },\n    to: { opacity: 1, left: 0 },\n  };\n  @Input() hideAnimation: any = {\n    type: 'pop',\n    from: { scale: 1, opacity: 1 },\n    to: { opacity: 0, scale: 0.1 },\n  };\n\n  @Input() positionedTooltip: string = 'Тултип снизу';\n  @Input() positionedPosition: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\n  @Input() positionedButtonText: string = 'Позиционирование';\n\n  @Input() interactivePosition: 'top' | 'bottom' | 'left' | 'right' = 'right';\n  @Input() interactiveMaxWidth: string = '200';\n  @Input() interactiveButtonText: string = 'Интерактивный тултип';\n\n  @Input() htmlPosition: 'top' | 'bottom' | 'left' | 'right' = 'right';\n  @Input() htmlMaxWidth: string = '300';\n  @Input() htmlButtonText: string = 'HTML-содержимое';\n\n  @Input() customStylePosition: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\n  @Input() customStyleClass: string = 'custom-tooltip';\n  @Input() customStyleButtonText: string = 'Пользовательские стили';\n}\n\nconst meta: Meta<TooltipDemoComponent> = {\n  title: 'Components/Tooltip',\n  component: TooltipDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTooltipDirective, TooltipDemoComponent],\n    }),\n  ],\n  argTypes: {\n    simpleTooltip: { control: 'text' },\n    simplePosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    simpleButtonText: { control: 'text' },\n\n    animatedTooltip: { control: 'text' },\n    animatedPosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    animatedButtonText: { control: 'text' },\n    showAnimation: { control: 'object' },\n    hideAnimation: { control: 'object' },\n\n    positionedTooltip: { control: 'text' },\n    positionedPosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    positionedButtonText: { control: 'text' },\n\n    interactivePosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    interactiveMaxWidth: { control: 'text' },\n    interactiveButtonText: { control: 'text' },\n\n    htmlPosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    htmlMaxWidth: { control: 'text' },\n    htmlButtonText: { control: 'text' },\n\n    customStylePosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    customStyleClass: { control: 'text' },\n    customStyleButtonText: { control: 'text' },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<TooltipDemoComponent>;\n\nexport const Default: Story = {\n  args: {\n    simpleTooltip: 'Это простой текстовый тултип',\n    simplePosition: 'top',\n    simpleButtonText: 'Простой тултип',\n\n    animatedTooltip: 'Тултип с анимацией',\n    animatedPosition: 'left',\n    animatedButtonText: 'Анимированный',\n\n    positionedTooltip: 'Тултип снизу',\n    positionedPosition: 'bottom',\n    positionedButtonText: 'Позиционирование',\n\n    interactivePosition: 'right',\n    interactiveMaxWidth: '200',\n    interactiveButtonText: 'Интерактивный тултип',\n\n    htmlPosition: 'right',\n    htmlMaxWidth: '300',\n    htmlButtonText: 'HTML-содержимое',\n\n    customStylePosition: 'bottom',\n    customStyleClass: 'custom-tooltip',\n    customStyleButtonText: 'Пользовательские стили',\n  },\n};\n\nexport const CustomPositions: Story = {\n  args: {\n    ...Default.args,\n    simplePosition: 'right',\n    animatedPosition: 'top',\n    positionedPosition: 'left',\n    interactivePosition: 'bottom',\n    htmlPosition: 'left',\n    customStylePosition: 'top',\n  },\n};\n\nexport const CustomContent: Story = {\n  args: {\n    ...Default.args,\n    simpleTooltip: 'Измененный простой тултип',\n    animatedTooltip: 'Новый анимированный тултип',\n    positionedTooltip: 'Позиционированный тултип сверху',\n  },\n};\n\nexport const CustomAnimations: Story = {\n  args: {\n    ...Default.args,\n    showAnimation: {\n      type: 'pop',\n      from: { scale: 0.5, opacity: 0 },\n      to: { scale: 1, opacity: 1 },\n    },\n    hideAnimation: {\n      type: 'slide',\n      from: { top: 0, opacity: 1 },\n      to: { top: -20, opacity: 0 },\n    },\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    .tooltip-demo {\n      display: flex;\n      justify-content: space-around;\n      padding: 20px;\n      background-color: #f0f0f0;\n      border-radius: 10px;\n    }\n\n    .tooltip-group {\n      text-align: center;\n      margin-left: 20px;\n    }\n\n    .tooltip-controls {\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n    }\n\n    .tooltip-button {\n      padding: 10px;\n      border: none;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: background-color 0.3s;\n    }\n\n    .interactive-tooltip {\n      box-sizing: border-box;\n      padding: 4px;\n    }\n\n    .interactive-tooltip * {\n      text-wrap: balance;\n    }\n\n    .interactive-tooltip button {\n      margin-top: 8px;\n      margin-inline: 4px;\n      padding: 4px 8px;\n      border: none;\n      border-radius: 3px;\n      cursor: pointer;\n    }\n\n    .interactive-tooltip .accept-button {\n      background-color: #3257dc;\n      color: white;\n    }\n\n    .interactive-tooltip .decline-button {\n      background-color: #ecedf3;\n      color: #18181a;\n    }\n\n    .custom-tooltip {\n      background-color: #ff9800;\n      color: white;\n      border: 2px solid #e68a00;\n      border-radius: 10px;\n      padding: 10px;\n    }\n\n    .html-tooltip * {\n      text-wrap: balance;\n      text-align: start;\n      margin-top: 4px;\n    }\n  \n",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "BottomPosition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    position: 'bottom',\n  },\n}"
            },
            {
                "name": "Collapsible",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    isCollapsible: true,\n  },\n}"
            },
            {
                "name": "CustomAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    animationDuration: 1000,\n  },\n}"
            },
            {
                "name": "CustomAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom animation',\n    animation: {\n      show: { type: 'pop', duration: 400, from: { scale: 0 }, to: { scale: 1 } },\n      hide: { type: 'pop', duration: 400, to: { scale: 0 } },\n    },\n  },\n}"
            },
            {
                "name": "CustomAnimations",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    showAnimation: {\n      type: 'pop',\n      from: { scale: 0.5, opacity: 0 },\n      to: { scale: 1, opacity: 1 },\n    },\n    hideAnimation: {\n      type: 'slide',\n      from: { top: 0, opacity: 1 },\n      to: { top: -20, opacity: 0 },\n    },\n  },\n}"
            },
            {
                "name": "CustomClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-accordion',\n  },\n}"
            },
            {
                "name": "CustomClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: true,\n  },\n}"
            },
            {
                "name": "CustomClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom CSS class',\n    customClass: 'my-custom-toast',\n  },\n}"
            },
            {
                "name": "CustomContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    simpleTooltip: 'Измененный простой тултип',\n    animatedTooltip: 'Новый анимированный тултип',\n    positionedTooltip: 'Позиционированный тултип сверху',\n  },\n}"
            },
            {
                "name": "CustomFirstDay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    firstDayOfWeek: 0, // Sunday\n  },\n}"
            },
            {
                "name": "CustomHeight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    height: '500px',\n  },\n}"
            },
            {
                "name": "CustomPosition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    position: 'top center',\n    message: 'This toast is positioned at the top center',\n  },\n}"
            },
            {
                "name": "CustomPositions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    simplePosition: 'right',\n    animatedPosition: 'top',\n    positionedPosition: 'left',\n    interactivePosition: 'bottom',\n    htmlPosition: 'left',\n    customStylePosition: 'top',\n  },\n}"
            },
            {
                "name": "CustomWeekNumberRule",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    weekNumberRule: 'fullWeek',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'medium',\n    customClass: '',\n    isCollapsible: false,\n    isMultiple: false,\n    animationDuration: 300,\n    companies: defaultCompanies,\n    selectedItems: [defaultCompanies[0]],\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: 'default',\n    text: 'Button',\n    size: 'medium',\n    stylingMode: 'contained',\n    isSelected: false,\n  },\n}",
                "rawdescription": "Дефолтная кнопка\n\nDescription, можно описывать story прямиком из stories",
                "description": "<p>Дефолтная кнопка</p>\n<p>Description, можно описывать story прямиком из stories</p>\n"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    showWeekNumbers: true,\n    disabled: false,\n    firstDayOfWeek: 1,\n    zoomLevel: 'month',\n    weekNumberRule: 'firstDay',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'medium',\n    customClass: false,\n    showIndicator: true,\n    showPane: true,\n    shading: true,\n    hideOnOutsideClick: false,\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  ...Template,\n  args: {\n    color: 'default',\n    indicatorSrc: '../../../assets/images/Spider web.gif',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Default mode',\n    subject: 'Show Popover',\n    // showEvent: 'mouseenter',\n    // hideEvent: 'mouseleave',\n    position: 'top',\n    width: 300,\n    content: 'Make final decision on whether we are going to increase our Google AdWord spend based on our 2013 marketing plan.',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'medium',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapper',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    container: '#myWrapper',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    height: '300px',\n    selectedIndex: 0,\n    animationEnabled: true,\n    swipeEnabled: true,\n    customClass: '',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    position: 'top',\n    size: 'medium',\n    stylingMode: 'outside',\n    customClass: '',\n    tabsData: defaultTabsData,\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    simpleTooltip: 'Это простой текстовый тултип',\n    simplePosition: 'top',\n    simpleButtonText: 'Простой тултип',\n\n    animatedTooltip: 'Тултип с анимацией',\n    animatedPosition: 'left',\n    animatedButtonText: 'Анимированный',\n\n    positionedTooltip: 'Тултип снизу',\n    positionedPosition: 'bottom',\n    positionedButtonText: 'Позиционирование',\n\n    interactivePosition: 'right',\n    interactiveMaxWidth: '200',\n    interactiveButtonText: 'Интерактивный тултип',\n\n    htmlPosition: 'right',\n    htmlMaxWidth: '300',\n    htmlButtonText: 'HTML-содержимое',\n\n    customStylePosition: 'bottom',\n    customStyleClass: 'custom-tooltip',\n    customStyleButtonText: 'Пользовательские стили',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    message: 'This is a toast message',\n    displayTime: 2000,\n    position: 'bottom right',\n    animation: {\n      show: { type: 'fade', duration: 400, from: 0, to: 1 },\n      hide: { type: 'fade', duration: 400, from: 1, to: 0 },\n    },\n    customClass: '',\n  },\n}"
            },
            {
                "name": "defaultCompanies",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Company[]",
                "defaultValue": "[\n  { CompanyName: 'Company A', Description: 'Description A', City: 'City A', State: 'State A', Zipcode: '12345', Address: 'Address A', Phone: '123-456-7890', Fax: '098-765-4321', Website: 'http://www.companya.com' },\n  { CompanyName: 'Company B', Description: 'Description B', City: 'City B', State: 'State B', Zipcode: '67890', Address: 'Address B', Phone: '234-567-8901', Fax: '109-876-5432', Website: 'http://www.companyb.com' },\n  { CompanyName: 'Company C', Description: 'Description C', City: 'City C', State: 'State C', Zipcode: '13579', Address: 'Address C', Phone: '345-678-9012', Fax: '210-987-6543', Website: 'http://www.companyc.com' },\n]"
            },
            {
                "name": "defaultTabsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Tab[]",
                "defaultValue": "[\n  { id: 1, text: 'Tab 1' },\n  { id: 2, text: 'Tab 2' },\n  { id: 3, text: 'Tab 3' },\n]"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    disabled: true,\n  },\n}"
            },
            {
                "name": "HideOnOutsideClick",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    hideOnOutsideClick: true,\n  },\n}"
            },
            {
                "name": "InsideStylingMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    stylingMode: 'inside',\n  },\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
            },
            {
                "name": "LargeSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
            },
            {
                "name": "LongDuration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    displayTime: 5000,\n    message: 'This toast will be displayed for 5 seconds',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MeAccordionProps>",
                "defaultValue": "{\n  title: 'Components/MeAccordion',\n  component: MeAccordionDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeAccordionDirective, AccordionDemoComponent],\n      imports: [DxAccordionModule],\n    }),\n  ],\n  render: (args: MeAccordionProps) => ({\n    props: args,\n    template: '<accordion-demo [size]=\"size\" [customClass]=\"customClass\" [isCollapsible]=\"isCollapsible\" [isMultiple]=\"isMultiple\" [animationDuration]=\"animationDuration\" [companies]=\"companies\" [selectedItems]=\"selectedItems\"></accordion-demo>'\n  }),\n  argTypes: {\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    customClass: { control: 'text' },\n    isCollapsible: { control: 'boolean' },\n    isMultiple: { control: 'boolean' },\n    animationDuration: { control: { type: 'range', min: 0, max: 1000, step: 50 } },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MeCalendarProps>",
                "defaultValue": "{\n  title: 'Components/MeCalendar',\n  component: MeCalendarDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeCalendarDirective, CalendarDemoComponent],\n      imports: [DxCalendarModule],\n    }),\n  ],\n  render: (args: MeCalendarProps) => ({\n    props: args,\n    template: `\n      <calendar-demo\n        [showWeekNumbers]=\"showWeekNumbers\"\n        [disabled]=\"disabled\"\n        [firstDayOfWeek]=\"firstDayOfWeek\"\n        [zoomLevel]=\"zoomLevel\"\n        [weekNumberRule]=\"weekNumberRule\"\n      ></calendar-demo>\n    `,\n  }),\n  argTypes: {\n    showWeekNumbers: {\n      control: 'boolean',\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    firstDayOfWeek: {\n      control: { type: 'select', options: [0, 1, 2, 3, 4, 5, 6] },\n    },\n    zoomLevel: {\n      control: { type: 'select', options: ['month', 'year', 'decade', 'century'] },\n    },\n    weekNumberRule: {\n      control: { type: 'select', options: ['auto', 'firstDay', 'firstFourDays', 'fullWeek'] },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LoadPanelDemoComponent>",
                "defaultValue": "{\n  title: 'Components/MeLoadPanel',\n  component: LoadPanelDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeLoadPanelDirective, LoadPanelDemoComponent],\n      imports: [DxButtonModule, DxLoadPanelModule, DxCheckBoxModule],\n    }),\n  ],\n  argTypes: {\n    size: {\n      control: { type: 'select', options: ['small', 'medium', 'large'] },\n    },\n    customClass: { control: 'boolean' },\n    showIndicator: { control: 'boolean' },\n    showPane: { control: 'boolean' },\n    shading: { control: 'boolean' },\n    hideOnOutsideClick: { control: 'boolean' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MeLoadIndicatorDirective>",
                "defaultValue": "{\n  title: 'Components/MeLoadIndicator',\n  component: MeLoadIndicatorDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeLoadIndicatorDirective],\n      imports: [DxLoadIndicatorModule],\n    }),\n  ],\n  argTypes: {\n    color: {\n      options: ['normal', 'default', 'accent'],\n      control: { type: 'select' },\n      defaultValue: 'default',\n    },\n    indicatorSrc: {\n      control: 'text',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PopoverHostComponent>",
                "defaultValue": "{\n  title: 'Components/MePopover',\n  component: PopoverHostComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MePopoverDirective, PopoverHostComponent],\n      imports: [DxPopoverModule],\n    }),\n  ],\n  argTypes: {\n    label: { control: 'text' },\n    subject: { control: 'text' },\n    showEvent: { control: 'text' },\n    hideEvent: { control: 'text' },\n    position: { control: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    width: { control: 'number' },\n    maxWidth: { control: 'number' },\n    showTitle: { control: 'boolean' },\n    title: { control: 'text' },\n    shading: { control: 'boolean' },\n    shadingColor: { control: 'color' },\n    content: { control: 'text' },\n    animationEnabled: { control: 'boolean' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabPanelHostComponent>",
                "defaultValue": "{\n  title: 'Components/MeTabPanel',\n  component: TabPanelHostComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTabPanelDirective, TabPanelHostComponent],\n      imports: [DxTabPanelModule],\n    }),\n  ],\n  argTypes: {\n    customClass: { control: 'text' },\n    height: { control: 'text' },\n    selectedIndex: { control: 'number' },\n    animationEnabled: { control: 'boolean' },\n    swipeEnabled: { control: 'boolean' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MeTabsProps>",
                "defaultValue": "{\n  title: 'Components/MeTabs',\n  component: MeTabsDirective,\n  // tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTabsDirective],\n      imports: [DxTabsModule],\n    }),\n  ],\n  render: (args: MeTabsProps) => ({\n    props: args,\n    template: `\n      <dx-tabs\n        meTabs\n        [customClass]=\"customClass\"\n        [position]=\"position\"\n        [size]=\"size\"\n        [stylingMode]=\"stylingMode\"\n        [dataSource]=\"tabsData\"\n        [selectedIndex]=\"0\"\n      ></dx-tabs>\n    `,\n  }),\n  argTypes: {\n    position: {\n      options: ['top', 'bottom'],\n      control: { type: 'radio' },\n    },\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    stylingMode: {\n      options: ['outside', 'inside'],\n      control: { type: 'radio' },\n    },\n    customClass: {\n      control: 'text',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TooltipDemoComponent>",
                "defaultValue": "{\n  title: 'Components/Tooltip',\n  component: TooltipDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTooltipDirective, TooltipDemoComponent],\n    }),\n  ],\n  argTypes: {\n    simpleTooltip: { control: 'text' },\n    simplePosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    simpleButtonText: { control: 'text' },\n\n    animatedTooltip: { control: 'text' },\n    animatedPosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    animatedButtonText: { control: 'text' },\n    showAnimation: { control: 'object' },\n    hideAnimation: { control: 'object' },\n\n    positionedTooltip: { control: 'text' },\n    positionedPosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    positionedButtonText: { control: 'text' },\n\n    interactivePosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    interactiveMaxWidth: { control: 'text' },\n    interactiveButtonText: { control: 'text' },\n\n    htmlPosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    htmlMaxWidth: { control: 'text' },\n    htmlButtonText: { control: 'text' },\n\n    customStylePosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    customStyleClass: { control: 'text' },\n    customStyleButtonText: { control: 'text' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToastDemoComponent>",
                "defaultValue": "{\n  title: 'Components/meToast',\n  component: ToastDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeToastDirective, ToastDemoComponent],\n      imports: [DxToastModule],\n    }),\n  ],\n  argTypes: {\n    message: { control: 'text' },\n    displayTime: { control: 'number' },\n    position: {\n      control: 'select',\n      options: ['top left', 'top center', 'top right', 'bottom left', 'bottom center', 'bottom right'],\n    },\n    customClass: { control: 'text' },\n  },\n}"
            },
            {
                "name": "Multiple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    isMultiple: true,\n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Scroll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'medium',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapperScroll',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    title: 'Заголовок',\n    container: '#myWrapperScroll',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [MePopupDirective, DxScrollViewComponent],\n      imports: [DxPopupModule, DxTemplateModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n    <div id=\"myWrapperScroll\" style=\"height: 300px; position: relative;\">\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\n        <div *dxTemplate=\"let data of 'content'\">\n          <dx-scroll-view width=\"100%\" height=\"100%\">\n          ${words}\n          </dx-scroll-view>\n        </div>\n      </dx-popup>\n    </div>`,\n  }),\n}"
            },
            {
                "name": "Size",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'large',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapperSize',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    title: 'Заголовок',\n    container: '#myWrapperSize',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        MePopupDirective,\n        DxScrollViewComponent,\n        DxButtonComponent,\n        MeButtonDirective,\n      ],\n      imports: [DxPopupModule, DxTemplateModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n    <div id=\"myWrapperSize\" style=\"height: 350px; position: relative;\">\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\n        <dxi-toolbar-item template=\"overflowButton\" toolbar=\"top\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"confirmButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"cancelButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"addButton\" toolbar=\"bottom\" location=\"before\">\n          </dxi-toolbar-item>\n\n        <div *dxTemplate=\"let data of 'content'\">\n          <dx-scroll-view width=\"100%\" height=\"100%\">\n            ${words}\n          </dx-scroll-view>\n        </div>\n        \n        <div *dxTemplate=\"let data of 'overflowButton'\">\n          <dx-button meButton iconOnly=\"overflow\" stylingMode=\"text\" iconSize=\"18px\" size=\"large\">\n            </dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'confirmButton'\">\n          <dx-button meButton text=\"Принять\" type=\"default\" size=\"large\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'cancelButton'\">\n          <dx-button meButton text=\"Отмена\" size=\"large\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'addButton'\">\n          <dx-button meButton text=\"Добавить\" size=\"large\"></dx-button>\n        </div>\n      </dx-popup>\n    </div>`,\n  }),\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
            },
            {
                "name": "SmallSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
            },
            {
                "name": "Success",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: 'success',\n    text: 'Button Success',\n    size: 'medium',\n  },\n}",
                "rawdescription": "Кнопка success Description",
                "description": "<p>Кнопка success Description</p>\n"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"indicators\">\n        <div\n          id=\"small-indicator\"\n          meLoadIndicator\n          [size]=\"'small'\"\n          [color]=\"'normal'\"\n        ></div>\n        <div\n          id=\"medium-indicator\"\n          meLoadIndicator\n          [size]=\"'medium'\"\n          [color]=\"color\"\n        ></div>\n        <div\n          id=\"large-indicator\"\n          meLoadIndicator\n          [size]=\"'large'\"\n          [color]=\"'accent'\"\n        ></div>\n      </div>\n      <div class=\"label me-title-header2\">Custom image</div>\n      <div\n        id=\"image-indicator\"\n        meLoadIndicator\n        [size]=\"'large'\"\n        [indicatorSrc]=\"indicatorSrc\"\n      ></div>\n    `,\n    styles: [\n      `\n      .indicators {\n        height: 80px;\n        width: 200px;\n        background-color: var(--button-normal-bg-color);\n        display: flex;\n        border: 1px solid #9747ff;\n        border-radius: 4px;\n        align-items: center;\n        justify-content: space-around;\n      }\n      .label {\n        margin-top: 20px;\n        margin-bottom: 10px;\n      }\n    `,\n    ],\n  }),\n}"
            },
            {
                "name": "Toolbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'medium',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapperTollbar',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    title: 'Заголовок',\n    container: '#myWrapperTollbar',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        MePopupDirective,\n        DxScrollViewComponent,\n        DxButtonComponent,\n        MeButtonDirective,\n      ],\n      imports: [DxPopupModule, DxTemplateModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n    <div id=\"myWrapperTollbar\" style=\"height: 300px; position: relative;\">\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\n        <dxi-toolbar-item template=\"overflowButton\" toolbar=\"top\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"confirmButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"cancelButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"addButton\" toolbar=\"bottom\" location=\"before\">\n          </dxi-toolbar-item>\n\n        <div *dxTemplate=\"let data of 'content'\">\n          <dx-scroll-view width=\"100%\" height=\"100%\">\n            ${words}\n          </dx-scroll-view>\n        </div>\n        \n        <div *dxTemplate=\"let data of 'overflowButton'\">\n        <dx-button meButton iconOnly=\"overflow\" stylingMode=\"text\" iconSize=\"12px\">\n          </dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'confirmButton'\">\n          <dx-button meButton text=\"Принять\" type=\"default\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'cancelButton'\">\n          <dx-button meButton text=\"Отмена\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'addButton'\">\n          <dx-button meButton text=\"Добавить\"></dx-button>\n        </div>\n      </dx-popup>\n    </div>`,\n  }),\n}"
            },
            {
                "name": "WithAccentColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  ...Template,\n  args: {\n    color: 'accent',\n    indicatorSrc: '../../../assets/images/Spider web.gif',\n  },\n}"
            },
            {
                "name": "WithAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    label: 'With animation',\n    subject: 'Create 2012 Sales Report',\n    animationEnabled: true,\n    content: '2012 Sales Report has to be completed so we can determine if major changes are required to sales strategy.',\n  },\n}"
            },
            {
                "name": "WithCustomClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: 'custom-class',\n  },\n}"
            },
            {
                "name": "WithCustomClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-tabs-class',\n  },\n}"
            },
            {
                "name": "WithCustomImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  ...Template,\n  args: {\n    color: 'default',\n    indicatorSrc: '../../../assets/images/custom-loader.gif',\n  },\n}"
            },
            {
                "name": "WithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    tabsData: [\n      { id: 1, text: 'Tab 1', icon: 'user' },\n      { id: 2, text: 'Tab 2', icon: 'email' },\n      { id: 3, text: 'Tab 3', icon: 'chart' },\n    ],\n  },\n}"
            },
            {
                "name": "WithoutAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    animationEnabled: false,\n  },\n}"
            },
            {
                "name": "WithoutSwipe",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    swipeEnabled: false,\n  },\n}"
            },
            {
                "name": "WithoutWeekNumbers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    showWeekNumbers: false,\n  },\n}"
            },
            {
                "name": "WithOverlay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    label: 'With overlay',\n    subject: 'Website Re-Design Plan',\n    showEvent: 'click',\n    shading: true,\n    shadingColor: 'rgba(0, 0, 0, 0.5)',\n    content: 'The changes in our brochure designs for 2013 require us to update key areas of our website.',\n  },\n}"
            },
            {
                "name": "WithTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    label: 'With title',\n    subject: 'Rollout of New Website and Marketing Brochures',\n    position: 'bottom',\n    showTitle: true,\n    title: 'Details',\n    maxWidth: 400,\n    content: 'The designs for new brochures and website have been approved. Launch date is set for Feb 28.',\n  },\n}"
            },
            {
                "name": "words",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Lorem ipsum dolor sit amet consectetur adipisicing elit. Cum enim, quos qui temporibus repellat architecto, ratione deleniti culpa adipisci beatae perferendis illo eum minima modi libero. Deleniti harum cum accusantium similique obcaecati quae, maxime dignissimos iusto repellat qui temporibus? Culpa quod eius officia pariatur soluta, deleniti tempore atque repellendus, non, eveniet ex repudiandae rerum distinctio autem eligendi consectetur quasi quia impedit ipsum inventore alias! Unde commodi ipsa, excepturi quibusdam nisi, quia vero nemo repudiandae blanditiis repellendus minus porro quasi dolores reiciendis placeat? Itaque commodi enim consectetur, recusandae blanditiis incidunt illum dolor quaerat, eum architecto possimus obcaecati omnis, nulla dignissimos corrupti.'"
            },
            {
                "name": "YearZoomLevel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    zoomLevel: 'year',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MeAccordionProps>",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MeButtonDirective | DxButtonComponent>",
                "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MeCalendarProps>",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LoadPanelDemoComponent>",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MeLoadIndicatorDirective>",
                "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PopoverHostComponent>",
                "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DxPopupModule | MePopupDirective>",
                "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabPanelHostComponent>",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MeTabsProps>",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TooltipDemoComponent>",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToastDemoComponent>",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts": [
                {
                    "name": "BottomPosition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    position: 'bottom',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    position: 'top',\n    size: 'medium',\n    stylingMode: 'outside',\n    customClass: '',\n    tabsData: defaultTabsData,\n  },\n}"
                },
                {
                    "name": "defaultTabsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab[]",
                    "defaultValue": "[\n  { id: 1, text: 'Tab 1' },\n  { id: 2, text: 'Tab 2' },\n  { id: 3, text: 'Tab 3' },\n]"
                },
                {
                    "name": "InsideStylingMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    stylingMode: 'inside',\n  },\n}"
                },
                {
                    "name": "LargeSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MeTabsProps>",
                    "defaultValue": "{\n  title: 'Components/MeTabs',\n  component: MeTabsDirective,\n  // tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTabsDirective],\n      imports: [DxTabsModule],\n    }),\n  ],\n  render: (args: MeTabsProps) => ({\n    props: args,\n    template: `\n      <dx-tabs\n        meTabs\n        [customClass]=\"customClass\"\n        [position]=\"position\"\n        [size]=\"size\"\n        [stylingMode]=\"stylingMode\"\n        [dataSource]=\"tabsData\"\n        [selectedIndex]=\"0\"\n      ></dx-tabs>\n    `,\n  }),\n  argTypes: {\n    position: {\n      options: ['top', 'bottom'],\n      control: { type: 'radio' },\n    },\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    stylingMode: {\n      options: ['outside', 'inside'],\n      control: { type: 'radio' },\n    },\n    customClass: {\n      control: 'text',\n    },\n  },\n}"
                },
                {
                    "name": "SmallSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
                },
                {
                    "name": "WithCustomClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-tabs-class',\n  },\n}"
                },
                {
                    "name": "WithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    tabsData: [\n      { id: 1, text: 'Tab 1', icon: 'user' },\n      { id: 2, text: 'Tab 2', icon: 'email' },\n      { id: 3, text: 'Tab 3', icon: 'chart' },\n    ],\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts": [
                {
                    "name": "Collapsible",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    isCollapsible: true,\n  },\n}"
                },
                {
                    "name": "CustomAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    animationDuration: 1000,\n  },\n}"
                },
                {
                    "name": "CustomClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-accordion',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'medium',\n    customClass: '',\n    isCollapsible: false,\n    isMultiple: false,\n    animationDuration: 300,\n    companies: defaultCompanies,\n    selectedItems: [defaultCompanies[0]],\n  },\n}"
                },
                {
                    "name": "defaultCompanies",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Company[]",
                    "defaultValue": "[\n  { CompanyName: 'Company A', Description: 'Description A', City: 'City A', State: 'State A', Zipcode: '12345', Address: 'Address A', Phone: '123-456-7890', Fax: '098-765-4321', Website: 'http://www.companya.com' },\n  { CompanyName: 'Company B', Description: 'Description B', City: 'City B', State: 'State B', Zipcode: '67890', Address: 'Address B', Phone: '234-567-8901', Fax: '109-876-5432', Website: 'http://www.companyb.com' },\n  { CompanyName: 'Company C', Description: 'Description C', City: 'City C', State: 'State C', Zipcode: '13579', Address: 'Address C', Phone: '345-678-9012', Fax: '210-987-6543', Website: 'http://www.companyc.com' },\n]"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MeAccordionProps>",
                    "defaultValue": "{\n  title: 'Components/MeAccordion',\n  component: MeAccordionDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeAccordionDirective, AccordionDemoComponent],\n      imports: [DxAccordionModule],\n    }),\n  ],\n  render: (args: MeAccordionProps) => ({\n    props: args,\n    template: '<accordion-demo [size]=\"size\" [customClass]=\"customClass\" [isCollapsible]=\"isCollapsible\" [isMultiple]=\"isMultiple\" [animationDuration]=\"animationDuration\" [companies]=\"companies\" [selectedItems]=\"selectedItems\"></accordion-demo>'\n  }),\n  argTypes: {\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    customClass: { control: 'text' },\n    isCollapsible: { control: 'boolean' },\n    isMultiple: { control: 'boolean' },\n    animationDuration: { control: { type: 'range', min: 0, max: 1000, step: 50 } },\n  },\n}"
                },
                {
                    "name": "Multiple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    isMultiple: true,\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts": [
                {
                    "name": "CustomAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom animation',\n    animation: {\n      show: { type: 'pop', duration: 400, from: { scale: 0 }, to: { scale: 1 } },\n      hide: { type: 'pop', duration: 400, to: { scale: 0 } },\n    },\n  },\n}"
                },
                {
                    "name": "CustomClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom CSS class',\n    customClass: 'my-custom-toast',\n  },\n}"
                },
                {
                    "name": "CustomPosition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    position: 'top center',\n    message: 'This toast is positioned at the top center',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    message: 'This is a toast message',\n    displayTime: 2000,\n    position: 'bottom right',\n    animation: {\n      show: { type: 'fade', duration: 400, from: 0, to: 1 },\n      hide: { type: 'fade', duration: 400, from: 1, to: 0 },\n    },\n    customClass: '',\n  },\n}"
                },
                {
                    "name": "LongDuration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    displayTime: 5000,\n    message: 'This toast will be displayed for 5 seconds',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToastDemoComponent>",
                    "defaultValue": "{\n  title: 'Components/meToast',\n  component: ToastDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeToastDirective, ToastDemoComponent],\n      imports: [DxToastModule],\n    }),\n  ],\n  argTypes: {\n    message: { control: 'text' },\n    displayTime: { control: 'number' },\n    position: {\n      control: 'select',\n      options: ['top left', 'top center', 'top right', 'bottom left', 'bottom center', 'bottom right'],\n    },\n    customClass: { control: 'text' },\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts": [
                {
                    "name": "CustomAnimations",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    showAnimation: {\n      type: 'pop',\n      from: { scale: 0.5, opacity: 0 },\n      to: { scale: 1, opacity: 1 },\n    },\n    hideAnimation: {\n      type: 'slide',\n      from: { top: 0, opacity: 1 },\n      to: { top: -20, opacity: 0 },\n    },\n  },\n}"
                },
                {
                    "name": "CustomContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    simpleTooltip: 'Измененный простой тултип',\n    animatedTooltip: 'Новый анимированный тултип',\n    positionedTooltip: 'Позиционированный тултип сверху',\n  },\n}"
                },
                {
                    "name": "CustomPositions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    simplePosition: 'right',\n    animatedPosition: 'top',\n    positionedPosition: 'left',\n    interactivePosition: 'bottom',\n    htmlPosition: 'left',\n    customStylePosition: 'top',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    simpleTooltip: 'Это простой текстовый тултип',\n    simplePosition: 'top',\n    simpleButtonText: 'Простой тултип',\n\n    animatedTooltip: 'Тултип с анимацией',\n    animatedPosition: 'left',\n    animatedButtonText: 'Анимированный',\n\n    positionedTooltip: 'Тултип снизу',\n    positionedPosition: 'bottom',\n    positionedButtonText: 'Позиционирование',\n\n    interactivePosition: 'right',\n    interactiveMaxWidth: '200',\n    interactiveButtonText: 'Интерактивный тултип',\n\n    htmlPosition: 'right',\n    htmlMaxWidth: '300',\n    htmlButtonText: 'HTML-содержимое',\n\n    customStylePosition: 'bottom',\n    customStyleClass: 'custom-tooltip',\n    customStyleButtonText: 'Пользовательские стили',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TooltipDemoComponent>",
                    "defaultValue": "{\n  title: 'Components/Tooltip',\n  component: TooltipDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTooltipDirective, TooltipDemoComponent],\n    }),\n  ],\n  argTypes: {\n    simpleTooltip: { control: 'text' },\n    simplePosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    simpleButtonText: { control: 'text' },\n\n    animatedTooltip: { control: 'text' },\n    animatedPosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    animatedButtonText: { control: 'text' },\n    showAnimation: { control: 'object' },\n    hideAnimation: { control: 'object' },\n\n    positionedTooltip: { control: 'text' },\n    positionedPosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    positionedButtonText: { control: 'text' },\n\n    interactivePosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    interactiveMaxWidth: { control: 'text' },\n    interactiveButtonText: { control: 'text' },\n\n    htmlPosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    htmlMaxWidth: { control: 'text' },\n    htmlButtonText: { control: 'text' },\n\n    customStylePosition: {\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    },\n    customStyleClass: { control: 'text' },\n    customStyleButtonText: { control: 'text' },\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts": [
                {
                    "name": "CustomClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: true,\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'medium',\n    customClass: false,\n    showIndicator: true,\n    showPane: true,\n    shading: true,\n    hideOnOutsideClick: false,\n  },\n}"
                },
                {
                    "name": "HideOnOutsideClick",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    hideOnOutsideClick: true,\n  },\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LoadPanelDemoComponent>",
                    "defaultValue": "{\n  title: 'Components/MeLoadPanel',\n  component: LoadPanelDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeLoadPanelDirective, LoadPanelDemoComponent],\n      imports: [DxButtonModule, DxLoadPanelModule, DxCheckBoxModule],\n    }),\n  ],\n  argTypes: {\n    size: {\n      control: { type: 'select', options: ['small', 'medium', 'large'] },\n    },\n    customClass: { control: 'boolean' },\n    showIndicator: { control: 'boolean' },\n    showPane: { control: 'boolean' },\n    shading: { control: 'boolean' },\n    hideOnOutsideClick: { control: 'boolean' },\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts": [
                {
                    "name": "CustomFirstDay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    firstDayOfWeek: 0, // Sunday\n  },\n}"
                },
                {
                    "name": "CustomWeekNumberRule",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    weekNumberRule: 'fullWeek',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    showWeekNumbers: true,\n    disabled: false,\n    firstDayOfWeek: 1,\n    zoomLevel: 'month',\n    weekNumberRule: 'firstDay',\n  },\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    disabled: true,\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MeCalendarProps>",
                    "defaultValue": "{\n  title: 'Components/MeCalendar',\n  component: MeCalendarDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeCalendarDirective, CalendarDemoComponent],\n      imports: [DxCalendarModule],\n    }),\n  ],\n  render: (args: MeCalendarProps) => ({\n    props: args,\n    template: `\n      <calendar-demo\n        [showWeekNumbers]=\"showWeekNumbers\"\n        [disabled]=\"disabled\"\n        [firstDayOfWeek]=\"firstDayOfWeek\"\n        [zoomLevel]=\"zoomLevel\"\n        [weekNumberRule]=\"weekNumberRule\"\n      ></calendar-demo>\n    `,\n  }),\n  argTypes: {\n    showWeekNumbers: {\n      control: 'boolean',\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    firstDayOfWeek: {\n      control: { type: 'select', options: [0, 1, 2, 3, 4, 5, 6] },\n    },\n    zoomLevel: {\n      control: { type: 'select', options: ['month', 'year', 'decade', 'century'] },\n    },\n    weekNumberRule: {\n      control: { type: 'select', options: ['auto', 'firstDay', 'firstFourDays', 'fullWeek'] },\n    },\n  },\n}"
                },
                {
                    "name": "WithoutWeekNumbers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    showWeekNumbers: false,\n  },\n}"
                },
                {
                    "name": "YearZoomLevel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    zoomLevel: 'year',\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts": [
                {
                    "name": "CustomHeight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    height: '500px',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    height: '300px',\n    selectedIndex: 0,\n    animationEnabled: true,\n    swipeEnabled: true,\n    customClass: '',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabPanelHostComponent>",
                    "defaultValue": "{\n  title: 'Components/MeTabPanel',\n  component: TabPanelHostComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTabPanelDirective, TabPanelHostComponent],\n      imports: [DxTabPanelModule],\n    }),\n  ],\n  argTypes: {\n    customClass: { control: 'text' },\n    height: { control: 'text' },\n    selectedIndex: { control: 'number' },\n    animationEnabled: { control: 'boolean' },\n    swipeEnabled: { control: 'boolean' },\n  },\n}"
                },
                {
                    "name": "WithCustomClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: 'custom-class',\n  },\n}"
                },
                {
                    "name": "WithoutAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    animationEnabled: false,\n  },\n}"
                },
                {
                    "name": "WithoutSwipe",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    swipeEnabled: false,\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: 'default',\n    text: 'Button',\n    size: 'medium',\n    stylingMode: 'contained',\n    isSelected: false,\n  },\n}",
                    "rawdescription": "Дефолтная кнопка\n\nDescription, можно описывать story прямиком из stories",
                    "description": "<p>Дефолтная кнопка</p>\n<p>Description, можно описывать story прямиком из stories</p>\n"
                },
                {
                    "name": "Success",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: 'success',\n    text: 'Button Success',\n    size: 'medium',\n  },\n}",
                    "rawdescription": "Кнопка success Description",
                    "description": "<p>Кнопка success Description</p>\n"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    color: 'default',\n    indicatorSrc: '../../../assets/images/Spider web.gif',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MeLoadIndicatorDirective>",
                    "defaultValue": "{\n  title: 'Components/MeLoadIndicator',\n  component: MeLoadIndicatorDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeLoadIndicatorDirective],\n      imports: [DxLoadIndicatorModule],\n    }),\n  ],\n  argTypes: {\n    color: {\n      options: ['normal', 'default', 'accent'],\n      control: { type: 'select' },\n      defaultValue: 'default',\n    },\n    indicatorSrc: {\n      control: 'text',\n    },\n  },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"indicators\">\n        <div\n          id=\"small-indicator\"\n          meLoadIndicator\n          [size]=\"'small'\"\n          [color]=\"'normal'\"\n        ></div>\n        <div\n          id=\"medium-indicator\"\n          meLoadIndicator\n          [size]=\"'medium'\"\n          [color]=\"color\"\n        ></div>\n        <div\n          id=\"large-indicator\"\n          meLoadIndicator\n          [size]=\"'large'\"\n          [color]=\"'accent'\"\n        ></div>\n      </div>\n      <div class=\"label me-title-header2\">Custom image</div>\n      <div\n        id=\"image-indicator\"\n        meLoadIndicator\n        [size]=\"'large'\"\n        [indicatorSrc]=\"indicatorSrc\"\n      ></div>\n    `,\n    styles: [\n      `\n      .indicators {\n        height: 80px;\n        width: 200px;\n        background-color: var(--button-normal-bg-color);\n        display: flex;\n        border: 1px solid #9747ff;\n        border-radius: 4px;\n        align-items: center;\n        justify-content: space-around;\n      }\n      .label {\n        margin-top: 20px;\n        margin-bottom: 10px;\n      }\n    `,\n    ],\n  }),\n}"
                },
                {
                    "name": "WithAccentColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    color: 'accent',\n    indicatorSrc: '../../../assets/images/Spider web.gif',\n  },\n}"
                },
                {
                    "name": "WithCustomImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    color: 'default',\n    indicatorSrc: '../../../assets/images/custom-loader.gif',\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Default mode',\n    subject: 'Show Popover',\n    // showEvent: 'mouseenter',\n    // hideEvent: 'mouseleave',\n    position: 'top',\n    width: 300,\n    content: 'Make final decision on whether we are going to increase our Google AdWord spend based on our 2013 marketing plan.',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PopoverHostComponent>",
                    "defaultValue": "{\n  title: 'Components/MePopover',\n  component: PopoverHostComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MePopoverDirective, PopoverHostComponent],\n      imports: [DxPopoverModule],\n    }),\n  ],\n  argTypes: {\n    label: { control: 'text' },\n    subject: { control: 'text' },\n    showEvent: { control: 'text' },\n    hideEvent: { control: 'text' },\n    position: { control: 'select', options: ['top', 'bottom', 'left', 'right'] },\n    width: { control: 'number' },\n    maxWidth: { control: 'number' },\n    showTitle: { control: 'boolean' },\n    title: { control: 'text' },\n    shading: { control: 'boolean' },\n    shadingColor: { control: 'color' },\n    content: { control: 'text' },\n    animationEnabled: { control: 'boolean' },\n  },\n}"
                },
                {
                    "name": "WithAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    label: 'With animation',\n    subject: 'Create 2012 Sales Report',\n    animationEnabled: true,\n    content: '2012 Sales Report has to be completed so we can determine if major changes are required to sales strategy.',\n  },\n}"
                },
                {
                    "name": "WithOverlay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    label: 'With overlay',\n    subject: 'Website Re-Design Plan',\n    showEvent: 'click',\n    shading: true,\n    shadingColor: 'rgba(0, 0, 0, 0.5)',\n    content: 'The changes in our brochure designs for 2013 require us to update key areas of our website.',\n  },\n}"
                },
                {
                    "name": "WithTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    label: 'With title',\n    subject: 'Rollout of New Website and Marketing Brochures',\n    position: 'bottom',\n    showTitle: true,\n    title: 'Details',\n    maxWidth: 400,\n    content: 'The designs for new brochures and website have been approved. Launch date is set for Feb 28.',\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'medium',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapper',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    container: '#myWrapper',\n  },\n}"
                },
                {
                    "name": "Scroll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'medium',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapperScroll',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    title: 'Заголовок',\n    container: '#myWrapperScroll',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [MePopupDirective, DxScrollViewComponent],\n      imports: [DxPopupModule, DxTemplateModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n    <div id=\"myWrapperScroll\" style=\"height: 300px; position: relative;\">\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\n        <div *dxTemplate=\"let data of 'content'\">\n          <dx-scroll-view width=\"100%\" height=\"100%\">\n          ${words}\n          </dx-scroll-view>\n        </div>\n      </dx-popup>\n    </div>`,\n  }),\n}"
                },
                {
                    "name": "Size",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'large',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapperSize',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    title: 'Заголовок',\n    container: '#myWrapperSize',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        MePopupDirective,\n        DxScrollViewComponent,\n        DxButtonComponent,\n        MeButtonDirective,\n      ],\n      imports: [DxPopupModule, DxTemplateModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n    <div id=\"myWrapperSize\" style=\"height: 350px; position: relative;\">\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\n        <dxi-toolbar-item template=\"overflowButton\" toolbar=\"top\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"confirmButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"cancelButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"addButton\" toolbar=\"bottom\" location=\"before\">\n          </dxi-toolbar-item>\n\n        <div *dxTemplate=\"let data of 'content'\">\n          <dx-scroll-view width=\"100%\" height=\"100%\">\n            ${words}\n          </dx-scroll-view>\n        </div>\n        \n        <div *dxTemplate=\"let data of 'overflowButton'\">\n          <dx-button meButton iconOnly=\"overflow\" stylingMode=\"text\" iconSize=\"18px\" size=\"large\">\n            </dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'confirmButton'\">\n          <dx-button meButton text=\"Принять\" type=\"default\" size=\"large\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'cancelButton'\">\n          <dx-button meButton text=\"Отмена\" size=\"large\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'addButton'\">\n          <dx-button meButton text=\"Добавить\" size=\"large\"></dx-button>\n        </div>\n      </dx-popup>\n    </div>`,\n  }),\n}"
                },
                {
                    "name": "Toolbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'medium',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapperTollbar',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    title: 'Заголовок',\n    container: '#myWrapperTollbar',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        MePopupDirective,\n        DxScrollViewComponent,\n        DxButtonComponent,\n        MeButtonDirective,\n      ],\n      imports: [DxPopupModule, DxTemplateModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n    <div id=\"myWrapperTollbar\" style=\"height: 300px; position: relative;\">\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\n        <dxi-toolbar-item template=\"overflowButton\" toolbar=\"top\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"confirmButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"cancelButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"addButton\" toolbar=\"bottom\" location=\"before\">\n          </dxi-toolbar-item>\n\n        <div *dxTemplate=\"let data of 'content'\">\n          <dx-scroll-view width=\"100%\" height=\"100%\">\n            ${words}\n          </dx-scroll-view>\n        </div>\n        \n        <div *dxTemplate=\"let data of 'overflowButton'\">\n        <dx-button meButton iconOnly=\"overflow\" stylingMode=\"text\" iconSize=\"12px\">\n          </dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'confirmButton'\">\n          <dx-button meButton text=\"Принять\" type=\"default\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'cancelButton'\">\n          <dx-button meButton text=\"Отмена\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'addButton'\">\n          <dx-button meButton text=\"Добавить\"></dx-button>\n        </div>\n      </dx-popup>\n    </div>`,\n  }),\n}"
                },
                {
                    "name": "words",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Lorem ipsum dolor sit amet consectetur adipisicing elit. Cum enim, quos qui temporibus repellat architecto, ratione deleniti culpa adipisci beatae perferendis illo eum minima modi libero. Deleniti harum cum accusantium similique obcaecati quae, maxime dignissimos iusto repellat qui temporibus? Culpa quod eius officia pariatur soluta, deleniti tempore atque repellendus, non, eveniet ex repudiandae rerum distinctio autem eligendi consectetur quasi quia impedit ipsum inventore alias! Unde commodi ipsa, excepturi quibusdam nisi, quia vero nemo repudiandae blanditiis repellendus minus porro quasi dolores reiciendis placeat? Itaque commodi enim consectetur, recusandae blanditiis incidunt illum dolor quaerat, eum architecto possimus obcaecati omnis, nulla dignissimos corrupti.'"
                }
            ],
            "projects/dx-monitel-components/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MeAccordionProps>",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MeButtonDirective | DxButtonComponent>",
                    "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MeCalendarProps>",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LoadPanelDemoComponent>",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MeLoadIndicatorDirective>",
                    "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PopoverHostComponent>",
                    "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DxPopupModule | MePopupDirective>",
                    "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabPanelHostComponent>",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MeTabsProps>",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TooltipDemoComponent>",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToastDemoComponent>",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "projects/dx-monitel-components/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "AccordionDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Company",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MeAccordionProps",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Collapsible",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultCompanies",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Multiple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Success",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "CalendarDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MeCalendarProps",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomFirstDay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomWeekNumberRule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutWeekNumbers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "YearZoomLevel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAccentColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithCustomImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadPanelDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HideOnOutsideClick",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "PopoverHostComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithOverlay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Scroll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Size",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Toolbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "words",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabPanelHostComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomHeight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithCustomClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutSwipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MeTabsProps",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomPosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultTabsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InsideStylingMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SmallSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithCustomClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomPosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LongDuration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "TooltipDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomAnimations",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomPositions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}