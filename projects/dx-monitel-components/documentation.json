{
  "pipes": [],
  "interfaces": [],
  "injectables": [],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [],
  "components": [],
  "modules": [],
  "miscellaneous": {
    "variables": [
      {
        "name": "CustomAnimation",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/MeToastComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom animation',\n    animation: {\n      show: { type: 'pop', duration: 400, from: { scale: 0 }, to: { scale: 1 } },\n      hide: { type: 'pop', duration: 400, to: { scale: 0 } },\n    },\n  },\n}"
      },
      {
        "name": "CustomClass",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/MeToastComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom CSS class',\n    customClass: 'my-custom-toast',\n  },\n}"
      },
      {
        "name": "CustomPosition",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/MeToastComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    position: 'top center',\n    message: 'This toast is positioned at the top center',\n  },\n}"
      },
      {
        "name": "CustomSize",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    height: 100,\n    width: 100,\n  },\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    type: 'default',\n    text: 'Button',\n    size: 'medium',\n  },\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    size: 'medium',\n    customClass: '',\n    height: undefined,\n    width: undefined,\n    indicatorSrc: undefined,\n    hint: undefined,\n    elementAttr: {},\n    rtlEnabled: false,\n    visible: true,\n  },\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/MeToastComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    message: 'This is a toast message',\n    displayTime: 2000,\n    position: 'bottom right',\n    animation: {\n      show: { type: 'fade', duration: 400, from: 0, to: 1 },\n      hide: { type: 'fade', duration: 400, from: 1, to: 0 },\n    },\n    customClass: '',\n  },\n}"
      },
      {
        "name": "Hidden",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    visible: false,\n  },\n}"
      },
      {
        "name": "Large",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
      },
      {
        "name": "LongDuration",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/MeToastComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    displayTime: 5000,\n    message: 'This toast will be displayed for 5 seconds',\n  },\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<MeButtonDirective>",
        "defaultValue": "{\n  title: 'Directives/meButton',\n  component: MeButtonDirective,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      declarations: [MeButtonDirective, DxButtonComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `<dx-button meButton ${argsToTemplate(args)}></dx-button>`,\n  }),\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<MeLoadIndicatorDirective>",
        "defaultValue": "{\n  title: 'Directives/meLoadIndicator',\n  component: MeLoadIndicatorDirective,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      declarations: [MeLoadIndicatorDirective],\n      imports: [DxLoadIndicatorModule],\n    }),\n  ],\n  render: (args: DxLoadIndicatorModule) => ({\n    props: args,\n    template: `\n      <dx-load-indicator\n        meLoadIndicator\n        [size]=\"size\"\n        [customClass]=\"customClass\"\n        [height]=\"height\"\n        [width]=\"width\"\n        [indicatorSrc]=\"indicatorSrc\"\n        [hint]=\"hint\"\n        [elementAttr]=\"elementAttr\"\n        [rtlEnabled]=\"rtlEnabled\"\n        [visible]=\"visible\"\n        (onContentReady)=\"onContentReady($event)\"\n        (onDisposing)=\"onDisposing($event)\"\n        (onInitialized)=\"onInitialized($event)\"\n        (onOptionChanged)=\"onOptionChanged($event)\"\n      ></dx-load-indicator>\n    `,\n  }),\n  argTypes: {\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    // visible: {\n    //   control: { type: 'boolean' },\n    // },\n    // rtlEnabled: {\n    //   control: { type: 'boolean' },\n    // },\n  },\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/MeToastComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<MeToastDirective>",
        "defaultValue": "{\n  title: 'Directives/meToast',\n  component: MeToastDirective,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      declarations: [MeToastDirective],\n      imports: [DxToastModule],\n    }),\n  ],\n  render: (args: DxToastModule) => ({\n    props: {\n      ...args,\n      onShowing: action('onShowing'),\n      onShown: action('onShown'),\n      onHiding: action('onHiding'),\n      onHidden: action('onHidden'),\n      showToast: function () {\n        this['meToastDirective'].showToast();\n      },\n    },\n    template: `\n      <div>\n        <dx-toast\n          meToast\n          [message]=\"message\"\n          [displayTime]=\"displayTime\"\n          [position]=\"position\"\n          [animation]=\"animation\"\n          [customClass]=\"customClass\"\n          (onShowing)=\"onShowing($event)\"\n          (onShown)=\"onShown($event)\"\n          (onHiding)=\"onHiding($event)\"\n          (onHidden)=\"onHidden($event)\"\n          #meToastDirective=\"meToastControl\"\n        ></dx-toast>\n        <button (click)=\"showToast()\">Show Toast</button>\n      </div>\n    `,\n  }),\n  argTypes: {\n    position: {\n      control: 'select',\n      options: [\n        'top left',\n        'top center',\n        'top right',\n        'bottom left',\n        'bottom center',\n        'bottom right',\n      ],\n    },\n  },\n}"
      },
      {
        "name": "preview",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/.storybook/preview.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Preview",
        "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
      },
      {
        "name": "RTLEnabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    rtlEnabled: true,\n  },\n}"
      },
      {
        "name": "Small",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
      },
      {
        "name": "WithHint",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\n  args: {\n    ...Default.args,\n    hint: 'Loading...',\n  },\n}"
      }
    ],
    "functions": [],
    "typealiases": [
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<MeButtonDirective>",
        "file": "projects/dx-monitel-components/src/stories/me-button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<DxLoadIndicatorModule>",
        "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<MeToastDirective>",
        "file": "src/stories/MeToastComponent.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      }
    ],
    "enumerations": [],
    "groupedVariables": {
      "src/stories/MeToastComponent.stories.ts": [
        {
          "name": "CustomAnimation",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/MeToastComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom animation',\n    animation: {\n      show: { type: 'pop', duration: 400, from: { scale: 0 }, to: { scale: 1 } },\n      hide: { type: 'pop', duration: 400, to: { scale: 0 } },\n    },\n  },\n}"
        },
        {
          "name": "CustomClass",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/MeToastComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom CSS class',\n    customClass: 'my-custom-toast',\n  },\n}"
        },
        {
          "name": "CustomPosition",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/MeToastComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    position: 'top center',\n    message: 'This toast is positioned at the top center',\n  },\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/MeToastComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    message: 'This is a toast message',\n    displayTime: 2000,\n    position: 'bottom right',\n    animation: {\n      show: { type: 'fade', duration: 400, from: 0, to: 1 },\n      hide: { type: 'fade', duration: 400, from: 1, to: 0 },\n    },\n    customClass: '',\n  },\n}"
        },
        {
          "name": "LongDuration",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/MeToastComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    displayTime: 5000,\n    message: 'This toast will be displayed for 5 seconds',\n  },\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/MeToastComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<MeToastDirective>",
          "defaultValue": "{\n  title: 'Directives/meToast',\n  component: MeToastDirective,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      declarations: [MeToastDirective],\n      imports: [DxToastModule],\n    }),\n  ],\n  render: (args: DxToastModule) => ({\n    props: {\n      ...args,\n      onShowing: action('onShowing'),\n      onShown: action('onShown'),\n      onHiding: action('onHiding'),\n      onHidden: action('onHidden'),\n      showToast: function () {\n        this['meToastDirective'].showToast();\n      },\n    },\n    template: `\n      <div>\n        <dx-toast\n          meToast\n          [message]=\"message\"\n          [displayTime]=\"displayTime\"\n          [position]=\"position\"\n          [animation]=\"animation\"\n          [customClass]=\"customClass\"\n          (onShowing)=\"onShowing($event)\"\n          (onShown)=\"onShown($event)\"\n          (onHiding)=\"onHiding($event)\"\n          (onHidden)=\"onHidden($event)\"\n          #meToastDirective=\"meToastControl\"\n        ></dx-toast>\n        <button (click)=\"showToast()\">Show Toast</button>\n      </div>\n    `,\n  }),\n  argTypes: {\n    position: {\n      control: 'select',\n      options: [\n        'top left',\n        'top center',\n        'top right',\n        'bottom left',\n        'bottom center',\n        'bottom right',\n      ],\n    },\n  },\n}"
        }
      ],
      "src/stories/LoadIndicatorDemoComponent.stories.ts": [
        {
          "name": "CustomSize",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    height: 100,\n    width: 100,\n  },\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    size: 'medium',\n    customClass: '',\n    height: undefined,\n    width: undefined,\n    indicatorSrc: undefined,\n    hint: undefined,\n    elementAttr: {},\n    rtlEnabled: false,\n    visible: true,\n  },\n}"
        },
        {
          "name": "Hidden",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    visible: false,\n  },\n}"
        },
        {
          "name": "Large",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<MeLoadIndicatorDirective>",
          "defaultValue": "{\n  title: 'Directives/meLoadIndicator',\n  component: MeLoadIndicatorDirective,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      declarations: [MeLoadIndicatorDirective],\n      imports: [DxLoadIndicatorModule],\n    }),\n  ],\n  render: (args: DxLoadIndicatorModule) => ({\n    props: args,\n    template: `\n      <dx-load-indicator\n        meLoadIndicator\n        [size]=\"size\"\n        [customClass]=\"customClass\"\n        [height]=\"height\"\n        [width]=\"width\"\n        [indicatorSrc]=\"indicatorSrc\"\n        [hint]=\"hint\"\n        [elementAttr]=\"elementAttr\"\n        [rtlEnabled]=\"rtlEnabled\"\n        [visible]=\"visible\"\n        (onContentReady)=\"onContentReady($event)\"\n        (onDisposing)=\"onDisposing($event)\"\n        (onInitialized)=\"onInitialized($event)\"\n        (onOptionChanged)=\"onOptionChanged($event)\"\n      ></dx-load-indicator>\n    `,\n  }),\n  argTypes: {\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    // visible: {\n    //   control: { type: 'boolean' },\n    // },\n    // rtlEnabled: {\n    //   control: { type: 'boolean' },\n    // },\n  },\n}"
        },
        {
          "name": "RTLEnabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    rtlEnabled: true,\n  },\n}"
        },
        {
          "name": "Small",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
        },
        {
          "name": "WithHint",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    ...Default.args,\n    hint: 'Loading...',\n  },\n}"
        }
      ],
      "projects/dx-monitel-components/src/stories/me-button.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\n  args: {\n    type: 'default',\n    text: 'Button',\n    size: 'medium',\n  },\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<MeButtonDirective>",
          "defaultValue": "{\n  title: 'Directives/meButton',\n  component: MeButtonDirective,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      declarations: [MeButtonDirective, DxButtonComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `<dx-button meButton ${argsToTemplate(args)}></dx-button>`,\n  }),\n}"
        }
      ],
      "projects/dx-monitel-components/.storybook/preview.ts": [
        {
          "name": "preview",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/.storybook/preview.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Preview",
          "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n  },\n}"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {},
    "groupedTypeAliases": {
      "projects/dx-monitel-components/src/stories/me-button.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<MeButtonDirective>",
          "file": "projects/dx-monitel-components/src/stories/me-button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/LoadIndicatorDemoComponent.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<DxLoadIndicatorModule>",
          "file": "src/stories/LoadIndicatorDemoComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "src/stories/MeToastComponent.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<MeToastDirective>",
          "file": "src/stories/MeToastComponent.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 0,
    "status": "low",
    "files": [
      {
        "filePath": "projects/dx-monitel-components/.storybook/preview.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "preview",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomSize",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Hidden",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Large",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "RTLEnabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Small",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/LoadIndicatorDemoComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithHint",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/MeToastComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomAnimation",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/MeToastComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomClass",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/MeToastComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomPosition",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/MeToastComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/MeToastComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LongDuration",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "src/stories/MeToastComponent.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
