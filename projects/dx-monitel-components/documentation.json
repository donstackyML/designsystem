{
    "pipes": [],
    "interfaces": [
        {
            "name": "MeTabsProps",
            "id": "interface-MeTabsProps-eb94b23bb7500b0488678b6da565f60c4ae4358ae6eefde188c8ab1bfc75fe4a2187377055b6e453feb639d78cf65bd4f24dd6d95b68a87ea305d4902ea1669a",
            "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { DxTabsModule } from 'devextreme-angular';\nimport { Tab } from '../../lib/directives/me-tabs/tabs.directive';\nimport { MeTabsDirective } from '../../public-api';\n\ninterface MeTabsProps {\n  customClass: string;\n  position: 'top' | 'bottom';\n  size: 'small' | 'medium' | 'large';\n  stylingMode: 'outside' | 'inside';\n  tabsData: Tab[];\n}\n\nconst meta: Meta<MeTabsProps> = {\n  title: 'Components/Tabs(RC)',\n  component: MeTabsDirective,\n  // tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTabsDirective],\n      imports: [DxTabsModule],\n    }),\n  ],\n  render: (args: MeTabsProps) => ({\n    props: args,\n    template: `\n      <dx-tabs\n        meTabs\n        [customClass]=\"customClass\"\n        [position]=\"position\"\n        [size]=\"size\"\n        [stylingMode]=\"stylingMode\"\n        [dataSource]=\"tabsData\"\n        [selectedIndex]=\"0\"\n      ></dx-tabs>\n    `,\n  }),\n  argTypes: {\n    position: {\n      options: ['top', 'bottom'],\n      control: { type: 'radio' },\n    },\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    stylingMode: {\n      options: ['outside', 'inside'],\n      control: { type: 'radio' },\n    },\n    customClass: {\n      control: 'text',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<MeTabsProps>;\n\nconst defaultTabsData: Tab[] = [\n  { id: 1, text: 'Tab 1' },\n  { id: 2, text: 'Tab 2' },\n  { id: 3, text: 'Tab 3' },\n];\n\nexport const Default: Story = {\n  args: {\n    position: 'top',\n    size: 'medium',\n    stylingMode: 'outside',\n    customClass: '',\n    tabsData: defaultTabsData,\n  },\n};\n\nexport const BottomPosition: Story = {\n  args: {\n    ...Default.args,\n    position: 'bottom',\n  },\n};\n\nexport const SmallSize: Story = {\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n};\n\nexport const LargeSize: Story = {\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n};\n\nexport const InsideStylingMode: Story = {\n  args: {\n    ...Default.args,\n    stylingMode: 'inside',\n  },\n};\n\nexport const WithCustomClass: Story = {\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-tabs-class',\n  },\n};\n\nexport const WithIcons: Story = {\n  args: {\n    ...Default.args,\n    tabsData: [\n      { id: 1, text: 'Tab 1', icon: 'user' },\n      { id: 2, text: 'Tab 2', icon: 'email' },\n      { id: 3, text: 'Tab 3', icon: 'chart' },\n    ],\n  },\n};\n",
            "properties": [
                {
                    "name": "customClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"top\" | \"bottom\"",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "stylingMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"outside\" | \"inside\"",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "tabsData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PopoverProps",
            "id": "interface-PopoverProps-abe78979f5ef8126c0cfcbce458f6c2cc6e4f82f4bffe9398e2a33dc18d62091931000b5aad802291b9eda5ed03f87f20d483cdc6e64da7596057b57811f6da8",
            "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport { DxPopoverModule } from 'devextreme-angular/ui/popover';\nimport { MePopoverDirective } from '../../public-api';\n\ninterface PopoverProps {\n  showEvent: string;\n  hideEvent: string;\n  position: string;\n  size: 'small' | 'medium' | 'large';\n  width: number;\n  maxWidth?: number;\n  showTitle: boolean;\n  title: string;\n  shading: boolean;\n  shadingColor: string;\n  content: string;\n}\n\nconst meta: Meta<PopoverProps> = {\n  title: 'Components/Popover(RC)',\n  component: MePopoverDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MePopoverDirective],\n      imports: [DxPopoverModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"padding: 20px;\">\n        <a id=\"popoverTarget\">Наведите для показа поповера</a>\n        <dx-popover\n          mePopover\n          target=\"#popoverTarget\"\n          [showEvent]=\"showEvent\"\n          [hideEvent]=\"hideEvent\"\n          [position]=\"position\"\n          [width]=\"width\"\n          [maxWidth]=\"maxWidth\"\n          [showTitle]=\"showTitle\"\n          [title]=\"title\"\n          [shading]=\"shading\"\n          [shadingColor]=\"shadingColor\"\n          [size]=\"size\"\n        >\n          <div *dxTemplate=\"let data of 'content'\">\n            {{ content }}\n          </div>\n        </dx-popover>\n      </div>\n    `,\n  }),\n  argTypes: {\n    showEvent: { control: 'text' },\n    hideEvent: { control: 'text' },\n    position: {\n      control: 'select',\n      options: ['top', 'bottom', 'left', 'right'],\n    },\n    size: {\n      control: 'select',\n      options: ['small', 'medium', 'large'],\n    },\n    width: { control: 'number' },\n    maxWidth: { control: 'number' },\n    showTitle: { control: 'boolean' },\n    title: { control: 'text' },\n    shading: { control: 'boolean' },\n    shadingColor: { control: 'color' },\n    content: { control: 'text' },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<PopoverProps>;\n\nexport const Default: Story = {\n  args: {\n    showEvent: 'mouseenter',\n    hideEvent: 'mouseleave',\n    position: 'top',\n    size: 'medium',\n    width: 300,\n    showTitle: false,\n    title: '',\n    shading: false,\n    shadingColor: '',\n    content: 'Это содержимое поповера по умолчанию.',\n  },\n};\n\nexport const WithTitle: Story = {\n  args: {\n    ...Default.args,\n    position: 'bottom',\n    showTitle: true,\n    title: 'Заголовок поповера',\n    maxWidth: 400,\n    content: 'Это поповер с заголовком и ограничением максимальной ширины.',\n  },\n};\n\nexport const WithOverlay: Story = {\n  args: {\n    ...Default.args,\n    showEvent: 'click',\n    hideEvent: 'click',\n    shading: true,\n    shadingColor: 'rgba(0, 0, 0, 0.5)',\n    content: 'Это поповер с затенением фона.',\n  },\n};\n",
            "properties": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "hideEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "maxWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "position",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "shading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "shadingColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "showEvent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "showTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "width",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "LoadPanelDemoComponent",
            "id": "component-LoadPanelDemoComponent-40641ccc4f951bf1ff8c9787a7fb79489746ed1fb7681db457c45ea0a03a7852c2b59b47414eefcd238ca91eea1304f97e53424a15c536db8d5b5e1aa50d2568",
            "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "load-panel-demo",
            "styleUrls": [],
            "styles": [
                "\n      .header {\n        font-size: 24px;\n        margin-bottom: 20px;\n      }\n      #employee {\n        margin: 20px 0;\n      }\n      .options {\n        margin-top: 20px;\n      }\n      .option {\n        margin-bottom: 10px;\n      }\n    "
            ],
            "template": "<dx-button text=\"Load Data\" (onClick)=\"showLoadPanel()\"> </dx-button>\n\n<dx-load-panel\n  #loadPanel\n  meLoadPanel\n  shadingColor=\"rgba(0,0,0,0.4)\"\n  [position]=\"{ of: '#employee' }\"\n  [(visible)]=\"loadingVisible\"\n  [showIndicator]=\"showIndicator\"\n  [showPane]=\"showPane\"\n  [shading]=\"shading\"\n  [hideOnOutsideClick]=\"hideOnOutsideClick\"\n  (onShown)=\"onShown()\"\n  (onHidden)=\"onHidden()\"\n  [size]=\"size\"\n  [customClass]=\"customClass\"\n></dx-load-panel>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "customClass",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hideOnOutsideClick",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "shading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showIndicator",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "showPane",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "employeeInfo",
                    "defaultValue": "{\n    Birth_Date: '1985-01-15',\n    City: 'Los Angeles',\n    Zipcode: '90001',\n    Address: '1234 Main St',\n    Mobile_Phone: '555-1234',\n    Email: 'john.heart@example.com',\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "loadingVisible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                }
            ],
            "methodsClass": [
                {
                    "name": "onHidden",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onShown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showLoadPanel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\nimport {\n  DxButtonModule,\n  DxCheckBoxModule,\n  DxLoadPanelModule,\n} from 'devextreme-angular';\nimport { MeLoadPanelDirective } from '../../public-api';\n\n@Component({\n  selector: 'load-panel-demo',\n  template: `\n    <dx-button text=\"Load Data\" (onClick)=\"showLoadPanel()\"> </dx-button>\n\n    <dx-load-panel\n      #loadPanel\n      meLoadPanel\n      shadingColor=\"rgba(0,0,0,0.4)\"\n      [position]=\"{ of: '#employee' }\"\n      [(visible)]=\"loadingVisible\"\n      [showIndicator]=\"showIndicator\"\n      [showPane]=\"showPane\"\n      [shading]=\"shading\"\n      [hideOnOutsideClick]=\"hideOnOutsideClick\"\n      (onShown)=\"onShown()\"\n      (onHidden)=\"onHidden()\"\n      [size]=\"size\"\n      [customClass]=\"customClass\"\n    ></dx-load-panel>\n  `,\n  styles: [\n    `\n      .header {\n        font-size: 24px;\n        margin-bottom: 20px;\n      }\n      #employee {\n        margin: 20px 0;\n      }\n      .options {\n        margin-top: 20px;\n      }\n      .option {\n        margin-bottom: 10px;\n      }\n    `,\n  ],\n})\nexport class LoadPanelDemoComponent {\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n  @Input() customClass: boolean = false;\n  @Input() showIndicator: boolean = true;\n  @Input() showPane: boolean = true;\n  @Input() shading: boolean = true;\n  @Input() hideOnOutsideClick: boolean = false;\n\n  loadingVisible = false;\n  employeeInfo = {\n    Birth_Date: '1985-01-15',\n    City: 'Los Angeles',\n    Zipcode: '90001',\n    Address: '1234 Main St',\n    Mobile_Phone: '555-1234',\n    Email: 'john.heart@example.com',\n  };\n\n  showLoadPanel() {\n    this.loadingVisible = true;\n  }\n\n  onShown() {\n    setTimeout(() => {\n      this.loadingVisible = false;\n    }, 300000);\n  }\n\n  onHidden() {\n    // do something when hidden\n  }\n}\n\nconst meta: Meta<LoadPanelDemoComponent> = {\n  title: 'Components/LoadPanel(RC)',\n  component: LoadPanelDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeLoadPanelDirective, LoadPanelDemoComponent],\n      imports: [DxButtonModule, DxLoadPanelModule, DxCheckBoxModule],\n    }),\n  ],\n  argTypes: {\n    size: {\n      control: { type: 'select', options: ['small', 'medium', 'large'] },\n    },\n    customClass: { control: 'boolean' },\n    showIndicator: { control: 'boolean' },\n    showPane: { control: 'boolean' },\n    shading: { control: 'boolean' },\n    hideOnOutsideClick: { control: 'boolean' },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<LoadPanelDemoComponent>;\n\nexport const Default: Story = {\n  args: {\n    size: 'medium',\n    customClass: false,\n    showIndicator: true,\n    showPane: true,\n    shading: true,\n    hideOnOutsideClick: false,\n  },\n};\n\nexport const Small: Story = {\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n};\n\nexport const Large: Story = {\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n};\n\nexport const CustomClass: Story = {\n  args: {\n    ...Default.args,\n    customClass: true,\n  },\n};\n\nexport const HideOnOutsideClick: Story = {\n  args: {\n    ...Default.args,\n    hideOnOutsideClick: true,\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n      .header {\n        font-size: 24px;\n        margin-bottom: 20px;\n      }\n      #employee {\n        margin: 20px 0;\n      }\n      .options {\n        margin-top: 20px;\n      }\n      .option {\n        margin-bottom: 10px;\n      }\n    \n",
            "extends": []
        },
        {
            "name": "TabPanelHostComponent",
            "id": "component-TabPanelHostComponent-22087fd49165f3c4fe531645c7d8a57bf951d0d806c627cc4f861d40b38c2be56dcfabc26dec40276ad43a53051bdeb66bc20827b98a4aa2181dffe67a4f85fa",
            "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tab-panel-host",
            "styleUrls": [],
            "styles": [],
            "template": "<dx-tab-panel\n  meTabPanel\n  [height]=\"height\"\n  width=\"400px\"\n  [selectedIndex]=\"selectedIndex\"\n  [animationEnabled]=\"animationEnabled\"\n  [swipeEnabled]=\"swipeEnabled\"\n  [customClass]=\"customClass\"\n  [hoverStateEnabled]=\"true\"\n>\n  <dxi-item title=\"Employee\" icon=\"floppy\">\n    <div class=\"tabpanel-content\">\n      <p>Content for Employee tab</p>\n    </div>\n  </dxi-item>\n  <dxi-item title=\"Notes\" icon=\"comment\">\n    <div class=\"tabpanel-content\">\n      <p>Content for Notes tab</p>\n    </div>\n  </dxi-item>\n  <dxi-item title=\"Role\" icon=\"isnotblank\">\n    <div class=\"tabpanel-content\">\n      <p>Content for Role tab</p>\n    </div>\n  </dxi-item>\n</dx-tab-panel>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "animationEnabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "height",
                    "defaultValue": "'300px'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "selectedIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "swipeEnabled",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { Meta, moduleMetadata, StoryObj } from '@storybook/angular';\nimport { DxTabPanelModule } from 'devextreme-angular';\nimport { MeTabPanelDirective } from '../../public-api';\n\n@Component({\n  selector: 'tab-panel-host',\n  template: `\n    <dx-tab-panel\n      meTabPanel\n      [height]=\"height\"\n      width=\"400px\"\n      [selectedIndex]=\"selectedIndex\"\n      [animationEnabled]=\"animationEnabled\"\n      [swipeEnabled]=\"swipeEnabled\"\n      [customClass]=\"customClass\"\n      [hoverStateEnabled]=\"true\"\n    >\n      <dxi-item title=\"Employee\" icon=\"floppy\">\n        <div class=\"tabpanel-content\">\n          <p>Content for Employee tab</p>\n        </div>\n      </dxi-item>\n      <dxi-item title=\"Notes\" icon=\"comment\">\n        <div class=\"tabpanel-content\">\n          <p>Content for Notes tab</p>\n        </div>\n      </dxi-item>\n      <dxi-item title=\"Role\" icon=\"isnotblank\">\n        <div class=\"tabpanel-content\">\n          <p>Content for Role tab</p>\n        </div>\n      </dxi-item>\n    </dx-tab-panel>\n  `,\n})\nclass TabPanelHostComponent {\n  height: string = '300px';\n  selectedIndex: number = 0;\n  animationEnabled: boolean = true;\n  swipeEnabled: boolean = true;\n  customClass: string = '';\n}\n\nconst meta: Meta<TabPanelHostComponent> = {\n  title: 'Components/TabPanel(RC)',\n  component: TabPanelHostComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTabPanelDirective, TabPanelHostComponent],\n      imports: [DxTabPanelModule],\n    }),\n  ],\n  argTypes: {\n    customClass: { control: 'text' },\n    height: { control: 'text' },\n    selectedIndex: { control: 'number' },\n    animationEnabled: { control: 'boolean' },\n    swipeEnabled: { control: 'boolean' },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<TabPanelHostComponent>;\n\nexport const Default: Story = {\n  args: {\n    height: '300px',\n    selectedIndex: 0,\n    animationEnabled: true,\n    swipeEnabled: true,\n    customClass: '',\n  },\n};\n\nexport const WithCustomClass: Story = {\n  args: {\n    ...Default.args,\n    customClass: 'custom-class',\n  },\n};\n\nexport const WithoutAnimation: Story = {\n  args: {\n    ...Default.args,\n    animationEnabled: false,\n  },\n};\n\nexport const WithoutSwipe: Story = {\n  args: {\n    ...Default.args,\n    swipeEnabled: false,\n  },\n};\n\nexport const CustomHeight: Story = {\n  args: {\n    ...Default.args,\n    height: '500px',\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "ToastDemoComponent",
            "id": "component-ToastDemoComponent-732bef9fe213eb58802fe817fbaf78deb0591e87871ac87b9cbeabaa25225211d0ee1841fe01154c84fc620a7e85ce09b6e81ddb72fb448241edf667dbf7f588",
            "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "toast-demo",
            "styleUrls": [],
            "styles": [],
            "template": "<dx-toast\n  meToast\n  #dxToast\n  [message]=\"message\"\n  [displayTime]=\"displayTime\"\n  [position]=\"position\"\n  [animation]=\"animation\"\n  [customClass]=\"customClass\"\n></dx-toast>\n\n<dx-button text=\"Show Toast\" (onClick)=\"showToast()\"> </dx-button>\n<button (click)=\"showToast()\">Show Toast</button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "animation",
                    "defaultValue": "{\n    show: { type: 'fade', duration: 400, from: 0, to: 1 },\n    hide: { type: 'fade', duration: 400, from: 1, to: 0 },\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "customClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "displayTime",
                    "defaultValue": "2000",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "message",
                    "defaultValue": "'This is a toast message'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "position",
                    "defaultValue": "'bottom right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dxToast",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DxToastComponent",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dxToast', {static: false}"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "showToast",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewChild } from '@angular/core';\nimport { moduleMetadata, type Meta, type StoryObj } from '@storybook/angular';\nimport { DxToastComponent, DxToastModule } from 'devextreme-angular';\nimport { MeToastDirective } from '../../lib/directives/me-toast/toast.directive';\n\n@Component({\n  selector: 'toast-demo',\n  template: `\n    <dx-toast\n      meToast\n      #dxToast\n      [message]=\"message\"\n      [displayTime]=\"displayTime\"\n      [position]=\"position\"\n      [animation]=\"animation\"\n      [customClass]=\"customClass\"\n    ></dx-toast>\n\n    <dx-button text=\"Show Toast\" (onClick)=\"showToast()\"> </dx-button>\n    <button (click)=\"showToast()\">Show Toast</button>\n  `,\n})\nclass ToastDemoComponent {\n  @ViewChild('dxToast', { static: false }) dxToast!: DxToastComponent;\n\n  @Input() message: string = 'This is a toast message';\n  @Input() displayTime: number = 2000;\n  @Input() position: any = 'bottom right';\n  @Input() animation: any = {\n    show: { type: 'fade', duration: 400, from: 0, to: 1 },\n    hide: { type: 'fade', duration: 400, from: 1, to: 0 },\n  };\n  @Input() customClass: string = '';\n\n  showToast() {\n    if (this.dxToast && this.dxToast.instance) {\n      this.dxToast.instance.show();\n    }\n  }\n}\n\nconst meta: Meta<ToastDemoComponent> = {\n  title: 'Components/Toast(RC)',\n  component: ToastDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeToastDirective, ToastDemoComponent],\n      imports: [DxToastModule],\n    }),\n  ],\n  argTypes: {\n    message: { control: 'text' },\n    displayTime: { control: 'number' },\n    position: {\n      control: 'select',\n      options: [\n        'top left',\n        'top center',\n        'top right',\n        'bottom left',\n        'bottom center',\n        'bottom right',\n      ],\n    },\n    customClass: { control: 'text' },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<ToastDemoComponent>;\n\nexport const Default: Story = {\n  args: {\n    message: 'This is a toast message',\n    displayTime: 2000,\n    position: 'bottom right',\n    animation: {\n      show: { type: 'fade', duration: 400, from: 0, to: 1 },\n      hide: { type: 'fade', duration: 400, from: 1, to: 0 },\n    },\n    customClass: '',\n  },\n};\n\nexport const LongDuration: Story = {\n  args: {\n    ...Default.args,\n    displayTime: 5000,\n    message: 'This toast will be displayed for 5 seconds',\n  },\n};\n\nexport const CustomPosition: Story = {\n  args: {\n    ...Default.args,\n    position: 'top center',\n    message: 'This toast is positioned at the top center',\n  },\n};\n\nexport const CustomAnimation: Story = {\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom animation',\n    animation: {\n      show: {\n        type: 'pop',\n        duration: 400,\n        from: { scale: 0 },\n        to: { scale: 1 },\n      },\n      hide: { type: 'pop', duration: 400, to: { scale: 0 } },\n    },\n  },\n};\n\nexport const CustomClass: Story = {\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom CSS class',\n    customClass: 'my-custom-toast',\n  },\n};\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Basic",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    meTooltip: 'Это базовый тултип',\n    tooltipPosition: 'top',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button [meTooltip]=\"meTooltip\" [tooltipPosition]=\"tooltipPosition\">\n        Наведите на меня\n      </button>\n    `,\n  }),\n}"
            },
            {
                "name": "BottomPosition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    position: 'bottom',\n  },\n}"
            },
            {
                "name": "Collapsible",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    collapsible: true,\n  },\n}"
            },
            {
                "name": "CustomAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    animationDuration: 1000,\n  },\n}"
            },
            {
                "name": "CustomAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom animation',\n    animation: {\n      show: {\n        type: 'pop',\n        duration: 400,\n        from: { scale: 0 },\n        to: { scale: 1 },\n      },\n      hide: { type: 'pop', duration: 400, to: { scale: 0 } },\n    },\n  },\n}"
            },
            {
                "name": "CustomClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-accordion',\n  },\n}"
            },
            {
                "name": "CustomClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    customClass: 'my-custom-class',\n  },\n}"
            },
            {
                "name": "CustomClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: true,\n  },\n}"
            },
            {
                "name": "CustomClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom CSS class',\n    customClass: 'my-custom-toast',\n  },\n}"
            },
            {
                "name": "CustomFirstDay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    firstDayOfWeek: 0,\n  },\n}"
            },
            {
                "name": "CustomHeader",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    dataSource: [\n      { id: 1, text: 'Accordion Item 1', description: 'Description for Item 1', icon: 'folder' },\n      { id: 2, text: 'Accordion Item 2', description: 'Description for Item 2', icon: 'folder' },\n      { id: 3, text: 'Accordion Item 3', description: 'Description for Item 3', icon: 'folder' },\n    ],\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <dx-accordion\n        meAccordion\n        [dataSource]=\"dataSource\"\n        [collapsible]=\"true\"\n        itemTitleTemplate=\"customTitle\"\n      >\n        <div *dxTemplate=\"let item of 'customTitle'\">\n           <div style=\"display: flex; align-items: flex-start;\">\n              <i class=\"dx-icon-{{item.icon}}\" style=\"margin-right: 10px; font-size: 18px; color: #000;\"></i>\n              <div>\n                <div style=\"font-weight: bold; font-size: 16px;\">{{item.text}}</div>\n                <div style=\"font-weight: inherit; color: gray; font-size: 14px;\">{{item.description}}</div>\n              </div>\n            </div>\n        </div>\n        <div *dxTemplate=\"let item of 'item'\">\n          <p>Content for {{item.text}}</p>\n        </div>\n      </dx-accordion>\n    `\n  }),\n}"
            },
            {
                "name": "CustomHeight",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    height: '500px',\n  },\n}"
            },
            {
                "name": "CustomPosition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    position: 'top center',\n    message: 'This toast is positioned at the top center',\n  },\n}"
            },
            {
                "name": "CustomStyles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    meTooltip: 'Стилизованный тултип',\n    tooltipPosition: 'left',\n    tooltipClass: 'custom-tooltip',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button [meTooltip]=\"meTooltip\" [tooltipPosition]=\"tooltipPosition\" [tooltipClass]=\"tooltipClass\">\n        Кастомный тултип\n      </button>\n    `,\n  }),\n}"
            },
            {
                "name": "CustomTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    tooltipPosition: 'right',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button [meTooltip]=\"tooltipTemplate\" [tooltipPosition]=\"tooltipPosition\">\n        Тултип с кастомным шаблоном\n      </button>\n      <ng-template #tooltipTemplate>\n        <div>\n          <h4>Заголовок тултипа</h4>\n          <p>Это пример тултипа с кастомной разметкой.</p>\n          <ul>\n            <li>Пункт 1</li>\n            <li>Пункт 2</li>\n          </ul>\n        </div>\n      </ng-template>\n    `,\n  }),\n}"
            },
            {
                "name": "CustomWeekNumberRule",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    weekNumberRule: 'fullWeek',\n  },\n}"
            },
            {
                "name": "decorators",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[themeWrapper]"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    dataSource: [\n      { title: 'Accordion Item 1', content: 'Content for Accordion Item 1' },\n      { title: 'Accordion Item 2', content: 'Content for Accordion Item 2' },\n      { title: 'Accordion Item 3', content: 'Content for Accordion Item 3' },\n    ],\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    showWeekNumbers: false,\n    disabled: false,\n    firstDayOfWeek: 1,\n    zoomLevel: 'month',\n    weekNumberRule: 'firstDay',\n    value: new Date(),\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isDisabled: false,\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    size: 'medium',\n    customClass: false,\n    showIndicator: true,\n    showPane: true,\n    shading: true,\n    hideOnOutsideClick: false,\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    showEvent: 'mouseenter',\n    hideEvent: 'mouseleave',\n    position: 'top',\n    size: 'medium',\n    width: 300,\n    showTitle: false,\n    title: '',\n    shading: false,\n    shadingColor: '',\n    content: 'Это содержимое поповера по умолчанию.',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  ...Template,\n  args: {\n    color: 'default',\n    indicatorSrc:\n      'https://static.tildacdn.com/tild6261-3766-4534-a636-643635653261/6068d1f9087cdc5982a3.gif',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    height: '300px',\n    selectedIndex: 0,\n    animationEnabled: true,\n    swipeEnabled: true,\n    customClass: '',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    position: 'top',\n    size: 'medium',\n    stylingMode: 'outside',\n    customClass: '',\n    tabsData: defaultTabsData,\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    message: 'This is a toast message',\n    displayTime: 2000,\n    position: 'bottom right',\n    animation: {\n      show: { type: 'fade', duration: 400, from: 0, to: 1 },\n      hide: { type: 'fade', duration: 400, from: 1, to: 0 },\n    },\n    customClass: '',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: 'default',\n    text: 'Button',\n    size: 'medium',\n\n    // isSelected: false,\n    stylingMode: 'contained',\n\n    leftIcon: '',\n  },\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'medium',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapper',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    container: '#myWrapper',\n  },\n}"
            },
            {
                "name": "defaultTabsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Tab[]",
                "defaultValue": "[\n  { id: 1, text: 'Tab 1' },\n  { id: 2, text: 'Tab 2' },\n  { id: 3, text: 'Tab 3' },\n]"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    disabled: true,\n  },\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    isDisabled: true,\n  },\n}"
            },
            {
                "name": "HideOnOutsideClick",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    hideOnOutsideClick: true,\n  },\n}"
            },
            {
                "name": "HTMLContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    meTooltip: '<strong>Жирный текст</strong> и <em>курсив</em>',\n    tooltipPosition: 'bottom',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button [meTooltip]=\"meTooltip\" [tooltipPosition]=\"tooltipPosition\">\n        HTML-тултип\n      </button>\n    `,\n  }),\n}"
            },
            {
                "name": "InsideStylingMode",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    stylingMode: 'inside',\n  },\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
            },
            {
                "name": "LargeSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
            },
            {
                "name": "LeftIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: 'normal',\n    text: 'Button',\n    size: 'medium',\n    stylingMode: 'contained',\n    leftIcon: 'arrowback',\n  },\n}"
            },
            {
                "name": "LeftRightIcon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    type: 'normal',\n    text: 'Button',\n    size: 'medium',\n    stylingMode: 'contained',\n    leftIcon: 'arrowback',\n    rightIcon: 'arrowforward',\n  },\n}"
            },
            {
                "name": "linkDark",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "document.createElement('link')"
            },
            {
                "name": "LongDuration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    displayTime: 5000,\n    message: 'This toast will be displayed for 5 seconds',\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<LoadPanelDemoComponent>",
                "defaultValue": "{\n  title: 'Components/LoadPanel(RC)',\n  component: LoadPanelDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeLoadPanelDirective, LoadPanelDemoComponent],\n      imports: [DxButtonModule, DxLoadPanelModule, DxCheckBoxModule],\n    }),\n  ],\n  argTypes: {\n    size: {\n      control: { type: 'select', options: ['small', 'medium', 'large'] },\n    },\n    customClass: { control: 'boolean' },\n    showIndicator: { control: 'boolean' },\n    showPane: { control: 'boolean' },\n    shading: { control: 'boolean' },\n    hideOnOutsideClick: { control: 'boolean' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PopoverProps>",
                "defaultValue": "{\n  title: 'Components/Popover(RC)',\n  component: MePopoverDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MePopoverDirective],\n      imports: [DxPopoverModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"padding: 20px;\">\n        <a id=\"popoverTarget\">Наведите для показа поповера</a>\n        <dx-popover\n          mePopover\n          target=\"#popoverTarget\"\n          [showEvent]=\"showEvent\"\n          [hideEvent]=\"hideEvent\"\n          [position]=\"position\"\n          [width]=\"width\"\n          [maxWidth]=\"maxWidth\"\n          [showTitle]=\"showTitle\"\n          [title]=\"title\"\n          [shading]=\"shading\"\n          [shadingColor]=\"shadingColor\"\n          [size]=\"size\"\n        >\n          <div *dxTemplate=\"let data of 'content'\">\n            {{ content }}\n          </div>\n        </dx-popover>\n      </div>\n    `,\n  }),\n  argTypes: {\n    showEvent: { control: 'text' },\n    hideEvent: { control: 'text' },\n    position: {\n      control: 'select',\n      options: ['top', 'bottom', 'left', 'right'],\n    },\n    size: {\n      control: 'select',\n      options: ['small', 'medium', 'large'],\n    },\n    width: { control: 'number' },\n    maxWidth: { control: 'number' },\n    showTitle: { control: 'boolean' },\n    title: { control: 'text' },\n    shading: { control: 'boolean' },\n    shadingColor: { control: 'color' },\n    content: { control: 'text' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MeLoadIndicatorDirective>",
                "defaultValue": "{\n  title: 'Components/LoadIndicator(RC)',\n  component: MeLoadIndicatorDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeLoadIndicatorDirective],\n      imports: [DxLoadIndicatorModule],\n    }),\n  ],\n  argTypes: {\n    color: {\n      options: ['normal', 'default', 'accent'],\n      control: { type: 'select' },\n      defaultValue: 'default',\n    },\n    indicatorSrc: {\n      control: 'text',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabPanelHostComponent>",
                "defaultValue": "{\n  title: 'Components/TabPanel(RC)',\n  component: TabPanelHostComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTabPanelDirective, TabPanelHostComponent],\n      imports: [DxTabPanelModule],\n    }),\n  ],\n  argTypes: {\n    customClass: { control: 'text' },\n    height: { control: 'text' },\n    selectedIndex: { control: 'number' },\n    animationEnabled: { control: 'boolean' },\n    swipeEnabled: { control: 'boolean' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MeTabsProps>",
                "defaultValue": "{\n  title: 'Components/Tabs(RC)',\n  component: MeTabsDirective,\n  // tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTabsDirective],\n      imports: [DxTabsModule],\n    }),\n  ],\n  render: (args: MeTabsProps) => ({\n    props: args,\n    template: `\n      <dx-tabs\n        meTabs\n        [customClass]=\"customClass\"\n        [position]=\"position\"\n        [size]=\"size\"\n        [stylingMode]=\"stylingMode\"\n        [dataSource]=\"tabsData\"\n        [selectedIndex]=\"0\"\n      ></dx-tabs>\n    `,\n  }),\n  argTypes: {\n    position: {\n      options: ['top', 'bottom'],\n      control: { type: 'radio' },\n    },\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    stylingMode: {\n      options: ['outside', 'inside'],\n      control: { type: 'radio' },\n    },\n    customClass: {\n      control: 'text',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToastDemoComponent>",
                "defaultValue": "{\n  title: 'Components/Toast(RC)',\n  component: ToastDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeToastDirective, ToastDemoComponent],\n      imports: [DxToastModule],\n    }),\n  ],\n  argTypes: {\n    message: { control: 'text' },\n    displayTime: { control: 'number' },\n    position: {\n      control: 'select',\n      options: [\n        'top left',\n        'top center',\n        'top right',\n        'bottom left',\n        'bottom center',\n        'bottom right',\n      ],\n    },\n    customClass: { control: 'text' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<MeTooltipDirective>",
                "defaultValue": "{\n  title: 'Components/Tooltip',\n  component: MeTooltipDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTooltipDirective],\n    }),\n  ],\n  argTypes: {\n    meTooltip: { control: 'text' },\n    tooltipPosition: {\n      control: 'select', options: ['top', 'bottom', 'left', 'right'] ,\n    },\n    tooltipClass: { control: 'text' },\n    tooltipWidth: { control: 'text' },\n    tooltipMaxWidth: { control: 'text' },\n    tooltipShowAnimation: { control: 'object' },\n    tooltipHideAnimation: { control: 'object' },\n  },\n}"
            },
            {
                "name": "Multiple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    multiple: true,\n  },\n}"
            },
            {
                "name": "MultipleFiles",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    multiple: true,\n  },\n}"
            },
            {
                "name": "Positioning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    meTooltip: 'Позиционированный тултип',\n    tooltipPosition: 'right',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button [meTooltip]=\"meTooltip\" [tooltipPosition]=\"tooltipPosition\">\n        Тултип {{ tooltipPosition }}\n      </button>\n    `,\n  }),\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    controls: {\n      // disableSave: true,\n      expanded: true,\n      // disableSaveFromUI: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    // docs: {\n    //   theme: themes.dark,\n    // },\n    // styledComponentsThemes: {\n    //   themes: [,],\n    // },\n    darkMode: {\n      dark: {\n        ...themes.dark,\n        brandImage: './images/Logo1.png',\n      },\n      light: { ...themes.normal, brandImage: './images/logoSK.png' },\n      darkClass: 'lights-out',\n      lightClass: 'lights-on',\n      current: 'light',\n      stylePreview: true,\n      classTarget: 'html',\n    },\n\n    backgrounds: {\n      disable: true,\n    },\n  },\n\n  // tags: ['autodocs', 'autodocs'],\n}"
            },
            {
                "name": "Scroll",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'medium',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapperScroll',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    title: 'Заголовок',\n    container: '#myWrapperScroll',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [MePopupDirective, DxScrollViewComponent],\n      imports: [DxPopupModule, DxTemplateModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n    <div id=\"myWrapperScroll\" style=\"height: 350px; position: relative;\">\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\n        <div *dxTemplate=\"let data of 'content'\">\n          <dx-scroll-view width=\"100%\" height=\"100%\">\n          ${words}\n          </dx-scroll-view>\n        </div>\n      </dx-popup>\n    </div>`,\n  }),\n}"
            },
            {
                "name": "Size",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'large',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapperSize',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    title: 'Заголовок',\n    container: '#myWrapperSize',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        MePopupDirective,\n        DxScrollViewComponent,\n        DxButtonComponent,\n        MeButtonDirective,\n      ],\n      imports: [DxPopupModule, DxTemplateModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n    <div id=\"myWrapperSize\" style=\"height: 350px; position: relative;\">\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\n        <dxi-toolbar-item template=\"overflowButton\" toolbar=\"top\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"confirmButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"cancelButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"addButton\" toolbar=\"bottom\" location=\"before\">\n          </dxi-toolbar-item>\n\n        <div *dxTemplate=\"let data of 'content'\">\n          <dx-scroll-view width=\"100%\" height=\"100%\">\n            ${words}\n          </dx-scroll-view>\n        </div>\n        \n        <div *dxTemplate=\"let data of 'overflowButton'\">\n          <dx-button meButton iconOnly=\"overflow\" stylingMode=\"text\" iconSize=\"18px\" size=\"large\">\n            </dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'confirmButton'\">\n          <dx-button meButton text=\"Принять\" type=\"default\" size=\"large\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'cancelButton'\">\n          <dx-button meButton text=\"Отмена\" size=\"large\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'addButton'\">\n          <dx-button meButton text=\"Добавить\" size=\"large\"></dx-button>\n        </div>\n      </dx-popup>\n    </div>`,\n  }),\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
            },
            {
                "name": "SmallSize",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"indicators\">\n        <div\n          id=\"small-indicator\"\n          meLoadIndicator\n          [size]=\"'small'\"\n          [color]=\"color\"\n        ></div>\n        <div\n          id=\"medium-indicator\"\n          meLoadIndicator\n          [size]=\"'medium'\"\n          [color]=\"color\"\n        ></div>\n        <div\n          id=\"large-indicator\"\n          meLoadIndicator\n          [size]=\"'large'\"\n          [color]=\"color\"\n        ></div>\n      </div>\n      <div class=\"label me-title-header2\">Custom image</div>\n\n\t\t\t<div class=\"indicators\">\n\t\t\t\t<div\n\t\t\t\t\tid=\"image-indicator\"\n\t\t\t\t\tmeLoadIndicator\n\t\t\t\t\t[size]=\"'large'\"\n\t\t\t\t\t[indicatorSrc]=\"indicatorSrc\"\n\t\t\t\t></div>\n\t\t\t</div>\n    `,\n    styles: [\n      `\n      .indicators {\n        height: 80px;\n        width: 200px;\n        background-color: rgb(157, 157, 158);\n        display: flex;\n        border: 1px solid #9747ff;\n        border-radius: 4px;\n        align-items: center;\n        justify-content: space-around;\n      }\n      .label {\n        margin-top: 20px;\n        margin-bottom: 10px;\n      }\n    `,\n    ],\n  }),\n}"
            },
            {
                "name": "themeWrapper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(Story: () => any, context: any) => {\n  const isDark = useDarkMode();\n  // const links = document.getElementsByTagName('link');\n  const elementDark = document.getElementById('dark');\n  // console.log(elementDark);\n  if (isDark && elementDark === null) {\n    document.body.appendChild(linkDark);\n  } else if (!isDark && elementDark !== null) {\n    document.body.removeChild(linkDark);\n  }\n  return Story();\n}"
            },
            {
                "name": "Toolbar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'medium',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapperTollbar',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    title: 'Заголовок',\n    container: '#myWrapperTollbar',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        MePopupDirective,\n        DxScrollViewComponent,\n        DxButtonComponent,\n        MeButtonDirective,\n      ],\n      imports: [DxPopupModule, DxTemplateModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n    <div id=\"myWrapperTollbar\" style=\"height: 350px; position: relative;\">\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\n        <dxi-toolbar-item template=\"overflowButton\" toolbar=\"top\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"confirmButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"cancelButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"addButton\" toolbar=\"bottom\" location=\"before\">\n          </dxi-toolbar-item>\n\n        <div *dxTemplate=\"let data of 'content'\">\n          <dx-scroll-view width=\"100%\" height=\"100%\">\n            ${words}\n          </dx-scroll-view>\n        </div>\n        \n        <div *dxTemplate=\"let data of 'overflowButton'\">\n        <dx-button meButton iconOnly=\"overflow\" stylingMode=\"text\" iconSize=\"12px\">\n          </dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'confirmButton'\">\n          <dx-button meButton text=\"Принять\" type=\"default\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'cancelButton'\">\n          <dx-button meButton text=\"Отмена\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'addButton'\">\n          <dx-button meButton text=\"Добавить\"></dx-button>\n        </div>\n      </dx-popup>\n    </div>`,\n  }),\n}"
            },
            {
                "name": "WithAccentColor",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  ...Template,\n  args: {\n    color: 'accent',\n    indicatorSrc:\n      'https://static.tildacdn.com/tild6261-3766-4534-a636-643635653261/6068d1f9087cdc5982a3.gif',\n  },\n}"
            },
            {
                "name": "WithAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    meTooltip: 'Анимированный тултип',\n    tooltipPosition: 'top',\n    tooltipShowAnimation: {\n      type: 'pop',\n      from: { scale: 0.5, opacity: 0 },\n      to: { scale: 1, opacity: 1 },\n    },\n    tooltipHideAnimation: {\n      type: 'fade',\n      from: { opacity: 1 },\n      to: { opacity: 0 },\n    },\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button\n        [meTooltip]=\"meTooltip\"\n        [tooltipPosition]=\"tooltipPosition\"\n        [tooltipShowAnimation]=\"tooltipShowAnimation\"\n        [tooltipHideAnimation]=\"tooltipHideAnimation\"\n      >\n        Анимированный тултип\n      </button>\n    `,\n  }),\n}"
            },
            {
                "name": "WithCustomClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: 'custom-class',\n  },\n}"
            },
            {
                "name": "WithCustomClass",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-tabs-class',\n  },\n}"
            },
            {
                "name": "WithCustomImage",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  ...Template,\n  args: {\n    color: 'default',\n    indicatorSrc:\n      'https://static.tildacdn.com/tild6261-3766-4534-a636-643635653261/6068d1f9087cdc5982a3.gif',\n  },\n}"
            },
            {
                "name": "WithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    tabsData: [\n      { id: 1, text: 'Tab 1', icon: 'user' },\n      { id: 2, text: 'Tab 2', icon: 'email' },\n      { id: 3, text: 'Tab 3', icon: 'chart' },\n    ],\n  },\n}"
            },
            {
                "name": "WithoutAnimation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    animationEnabled: false,\n  },\n}"
            },
            {
                "name": "WithoutSwipe",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    swipeEnabled: false,\n  },\n}"
            },
            {
                "name": "WithoutWeekNumbers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    showWeekNumbers: false,\n  },\n}"
            },
            {
                "name": "WithOverlay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    showEvent: 'click',\n    hideEvent: 'click',\n    shading: true,\n    shadingColor: 'rgba(0, 0, 0, 0.5)',\n    content: 'Это поповер с затенением фона.',\n  },\n}"
            },
            {
                "name": "WithTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    position: 'bottom',\n    showTitle: true,\n    title: 'Заголовок поповера',\n    maxWidth: 400,\n    content: 'Это поповер с заголовком и ограничением максимальной ширины.',\n  },\n}"
            },
            {
                "name": "words",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'Lorem ipsum dolor sit amet consectetur adipisicing elit. Cum enim, quos qui temporibus repellat architecto, ratione deleniti culpa adipisci beatae perferendis illo eum minima modi libero. Deleniti harum cum accusantium similique obcaecati quae, maxime dignissimos iusto repellat qui temporibus? Culpa quod eius officia pariatur soluta, deleniti tempore atque repellendus, non, eveniet ex repudiandae rerum distinctio autem eligendi consectetur quasi quia impedit ipsum inventore alias! Unde commodi ipsa, excepturi quibusdam nisi, quia vero nemo repudiandae blanditiis repellendus minus porro quasi dolores reiciendis placeat? Itaque commodi enim consectetur, recusandae blanditiis incidunt illum dolor quaerat, eum architecto possimus obcaecati omnis, nulla dignissimos corrupti.'"
            },
            {
                "name": "YearZoomLevel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...Default.args,\n    zoomLevel: 'year',\n  },\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<LoadPanelDemoComponent>",
                "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PopoverProps>",
                "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MeLoadIndicatorDirective>",
                "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabPanelHostComponent>",
                "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MeTabsProps>",
                "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToastDemoComponent>",
                "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MeTooltipDirective>",
                "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<MeButtonDirective | DxButtonComponent>",
                "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DxPopupModule | MePopupDirective>",
                "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts": [
                {
                    "name": "Basic",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    meTooltip: 'Это базовый тултип',\n    tooltipPosition: 'top',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button [meTooltip]=\"meTooltip\" [tooltipPosition]=\"tooltipPosition\">\n        Наведите на меня\n      </button>\n    `,\n  }),\n}"
                },
                {
                    "name": "CustomStyles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    meTooltip: 'Стилизованный тултип',\n    tooltipPosition: 'left',\n    tooltipClass: 'custom-tooltip',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button [meTooltip]=\"meTooltip\" [tooltipPosition]=\"tooltipPosition\" [tooltipClass]=\"tooltipClass\">\n        Кастомный тултип\n      </button>\n    `,\n  }),\n}"
                },
                {
                    "name": "CustomTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    tooltipPosition: 'right',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button [meTooltip]=\"tooltipTemplate\" [tooltipPosition]=\"tooltipPosition\">\n        Тултип с кастомным шаблоном\n      </button>\n      <ng-template #tooltipTemplate>\n        <div>\n          <h4>Заголовок тултипа</h4>\n          <p>Это пример тултипа с кастомной разметкой.</p>\n          <ul>\n            <li>Пункт 1</li>\n            <li>Пункт 2</li>\n          </ul>\n        </div>\n      </ng-template>\n    `,\n  }),\n}"
                },
                {
                    "name": "HTMLContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    meTooltip: '<strong>Жирный текст</strong> и <em>курсив</em>',\n    tooltipPosition: 'bottom',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button [meTooltip]=\"meTooltip\" [tooltipPosition]=\"tooltipPosition\">\n        HTML-тултип\n      </button>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MeTooltipDirective>",
                    "defaultValue": "{\n  title: 'Components/Tooltip',\n  component: MeTooltipDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTooltipDirective],\n    }),\n  ],\n  argTypes: {\n    meTooltip: { control: 'text' },\n    tooltipPosition: {\n      control: 'select', options: ['top', 'bottom', 'left', 'right'] ,\n    },\n    tooltipClass: { control: 'text' },\n    tooltipWidth: { control: 'text' },\n    tooltipMaxWidth: { control: 'text' },\n    tooltipShowAnimation: { control: 'object' },\n    tooltipHideAnimation: { control: 'object' },\n  },\n}"
                },
                {
                    "name": "Positioning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    meTooltip: 'Позиционированный тултип',\n    tooltipPosition: 'right',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button [meTooltip]=\"meTooltip\" [tooltipPosition]=\"tooltipPosition\">\n        Тултип {{ tooltipPosition }}\n      </button>\n    `,\n  }),\n}"
                },
                {
                    "name": "WithAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    meTooltip: 'Анимированный тултип',\n    tooltipPosition: 'top',\n    tooltipShowAnimation: {\n      type: 'pop',\n      from: { scale: 0.5, opacity: 0 },\n      to: { scale: 1, opacity: 1 },\n    },\n    tooltipHideAnimation: {\n      type: 'fade',\n      from: { opacity: 1 },\n      to: { opacity: 0 },\n    },\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button\n        [meTooltip]=\"meTooltip\"\n        [tooltipPosition]=\"tooltipPosition\"\n        [tooltipShowAnimation]=\"tooltipShowAnimation\"\n        [tooltipHideAnimation]=\"tooltipHideAnimation\"\n      >\n        Анимированный тултип\n      </button>\n    `,\n  }),\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts": [
                {
                    "name": "BottomPosition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    position: 'bottom',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    position: 'top',\n    size: 'medium',\n    stylingMode: 'outside',\n    customClass: '',\n    tabsData: defaultTabsData,\n  },\n}"
                },
                {
                    "name": "defaultTabsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab[]",
                    "defaultValue": "[\n  { id: 1, text: 'Tab 1' },\n  { id: 2, text: 'Tab 2' },\n  { id: 3, text: 'Tab 3' },\n]"
                },
                {
                    "name": "InsideStylingMode",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    stylingMode: 'inside',\n  },\n}"
                },
                {
                    "name": "LargeSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MeTabsProps>",
                    "defaultValue": "{\n  title: 'Components/Tabs(RC)',\n  component: MeTabsDirective,\n  // tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTabsDirective],\n      imports: [DxTabsModule],\n    }),\n  ],\n  render: (args: MeTabsProps) => ({\n    props: args,\n    template: `\n      <dx-tabs\n        meTabs\n        [customClass]=\"customClass\"\n        [position]=\"position\"\n        [size]=\"size\"\n        [stylingMode]=\"stylingMode\"\n        [dataSource]=\"tabsData\"\n        [selectedIndex]=\"0\"\n      ></dx-tabs>\n    `,\n  }),\n  argTypes: {\n    position: {\n      options: ['top', 'bottom'],\n      control: { type: 'radio' },\n    },\n    size: {\n      options: ['small', 'medium', 'large'],\n      control: { type: 'select' },\n    },\n    stylingMode: {\n      options: ['outside', 'inside'],\n      control: { type: 'radio' },\n    },\n    customClass: {\n      control: 'text',\n    },\n  },\n}"
                },
                {
                    "name": "SmallSize",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
                },
                {
                    "name": "WithCustomClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-tabs-class',\n  },\n}"
                },
                {
                    "name": "WithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    tabsData: [\n      { id: 1, text: 'Tab 1', icon: 'user' },\n      { id: 2, text: 'Tab 2', icon: 'email' },\n      { id: 3, text: 'Tab 3', icon: 'chart' },\n    ],\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts": [
                {
                    "name": "Collapsible",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    collapsible: true,\n  },\n}"
                },
                {
                    "name": "CustomAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    animationDuration: 1000,\n  },\n}"
                },
                {
                    "name": "CustomClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: 'my-custom-accordion',\n  },\n}"
                },
                {
                    "name": "CustomHeader",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    dataSource: [\n      { id: 1, text: 'Accordion Item 1', description: 'Description for Item 1', icon: 'folder' },\n      { id: 2, text: 'Accordion Item 2', description: 'Description for Item 2', icon: 'folder' },\n      { id: 3, text: 'Accordion Item 3', description: 'Description for Item 3', icon: 'folder' },\n    ],\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <dx-accordion\n        meAccordion\n        [dataSource]=\"dataSource\"\n        [collapsible]=\"true\"\n        itemTitleTemplate=\"customTitle\"\n      >\n        <div *dxTemplate=\"let item of 'customTitle'\">\n           <div style=\"display: flex; align-items: flex-start;\">\n              <i class=\"dx-icon-{{item.icon}}\" style=\"margin-right: 10px; font-size: 18px; color: #000;\"></i>\n              <div>\n                <div style=\"font-weight: bold; font-size: 16px;\">{{item.text}}</div>\n                <div style=\"font-weight: inherit; color: gray; font-size: 14px;\">{{item.description}}</div>\n              </div>\n            </div>\n        </div>\n        <div *dxTemplate=\"let item of 'item'\">\n          <p>Content for {{item.text}}</p>\n        </div>\n      </dx-accordion>\n    `\n  }),\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    dataSource: [\n      { title: 'Accordion Item 1', content: 'Content for Accordion Item 1' },\n      { title: 'Accordion Item 2', content: 'Content for Accordion Item 2' },\n      { title: 'Accordion Item 3', content: 'Content for Accordion Item 3' },\n    ],\n  },\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
                },
                {
                    "name": "Multiple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    multiple: true,\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts": [
                {
                    "name": "CustomAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom animation',\n    animation: {\n      show: {\n        type: 'pop',\n        duration: 400,\n        from: { scale: 0 },\n        to: { scale: 1 },\n      },\n      hide: { type: 'pop', duration: 400, to: { scale: 0 } },\n    },\n  },\n}"
                },
                {
                    "name": "CustomClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    message: 'This toast has a custom CSS class',\n    customClass: 'my-custom-toast',\n  },\n}"
                },
                {
                    "name": "CustomPosition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    position: 'top center',\n    message: 'This toast is positioned at the top center',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    message: 'This is a toast message',\n    displayTime: 2000,\n    position: 'bottom right',\n    animation: {\n      show: { type: 'fade', duration: 400, from: 0, to: 1 },\n      hide: { type: 'fade', duration: 400, from: 1, to: 0 },\n    },\n    customClass: '',\n  },\n}"
                },
                {
                    "name": "LongDuration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    displayTime: 5000,\n    message: 'This toast will be displayed for 5 seconds',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToastDemoComponent>",
                    "defaultValue": "{\n  title: 'Components/Toast(RC)',\n  component: ToastDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeToastDirective, ToastDemoComponent],\n      imports: [DxToastModule],\n    }),\n  ],\n  argTypes: {\n    message: { control: 'text' },\n    displayTime: { control: 'number' },\n    position: {\n      control: 'select',\n      options: [\n        'top left',\n        'top center',\n        'top right',\n        'bottom left',\n        'bottom center',\n        'bottom right',\n      ],\n    },\n    customClass: { control: 'text' },\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts": [
                {
                    "name": "CustomClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    customClass: 'my-custom-class',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isDisabled: false,\n  },\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    isDisabled: true,\n  },\n}"
                },
                {
                    "name": "MultipleFiles",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    multiple: true,\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts": [
                {
                    "name": "CustomClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: true,\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    size: 'medium',\n    customClass: false,\n    showIndicator: true,\n    showPane: true,\n    shading: true,\n    hideOnOutsideClick: false,\n  },\n}"
                },
                {
                    "name": "HideOnOutsideClick",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    hideOnOutsideClick: true,\n  },\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'large',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<LoadPanelDemoComponent>",
                    "defaultValue": "{\n  title: 'Components/LoadPanel(RC)',\n  component: LoadPanelDemoComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeLoadPanelDirective, LoadPanelDemoComponent],\n      imports: [DxButtonModule, DxLoadPanelModule, DxCheckBoxModule],\n    }),\n  ],\n  argTypes: {\n    size: {\n      control: { type: 'select', options: ['small', 'medium', 'large'] },\n    },\n    customClass: { control: 'boolean' },\n    showIndicator: { control: 'boolean' },\n    showPane: { control: 'boolean' },\n    shading: { control: 'boolean' },\n    hideOnOutsideClick: { control: 'boolean' },\n  },\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    size: 'small',\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts": [
                {
                    "name": "CustomFirstDay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    firstDayOfWeek: 0,\n  },\n}"
                },
                {
                    "name": "CustomWeekNumberRule",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    weekNumberRule: 'fullWeek',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    showWeekNumbers: false,\n    disabled: false,\n    firstDayOfWeek: 1,\n    zoomLevel: 'month',\n    weekNumberRule: 'firstDay',\n    value: new Date(),\n  },\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    disabled: true,\n  },\n}"
                },
                {
                    "name": "WithoutWeekNumbers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    showWeekNumbers: false,\n  },\n}"
                },
                {
                    "name": "YearZoomLevel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    zoomLevel: 'year',\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts": [
                {
                    "name": "CustomHeight",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    height: '500px',\n  },\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    height: '300px',\n    selectedIndex: 0,\n    animationEnabled: true,\n    swipeEnabled: true,\n    customClass: '',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabPanelHostComponent>",
                    "defaultValue": "{\n  title: 'Components/TabPanel(RC)',\n  component: TabPanelHostComponent,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeTabPanelDirective, TabPanelHostComponent],\n      imports: [DxTabPanelModule],\n    }),\n  ],\n  argTypes: {\n    customClass: { control: 'text' },\n    height: { control: 'text' },\n    selectedIndex: { control: 'number' },\n    animationEnabled: { control: 'boolean' },\n    swipeEnabled: { control: 'boolean' },\n  },\n}"
                },
                {
                    "name": "WithCustomClass",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    customClass: 'custom-class',\n  },\n}"
                },
                {
                    "name": "WithoutAnimation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    animationEnabled: false,\n  },\n}"
                },
                {
                    "name": "WithoutSwipe",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    swipeEnabled: false,\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/.storybook/preview.ts": [
                {
                    "name": "decorators",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[themeWrapper]"
                },
                {
                    "name": "linkDark",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "document.createElement('link')"
                },
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    controls: {\n      // disableSave: true,\n      expanded: true,\n      // disableSaveFromUI: true,\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i,\n      },\n    },\n    // docs: {\n    //   theme: themes.dark,\n    // },\n    // styledComponentsThemes: {\n    //   themes: [,],\n    // },\n    darkMode: {\n      dark: {\n        ...themes.dark,\n        brandImage: './images/Logo1.png',\n      },\n      light: { ...themes.normal, brandImage: './images/logoSK.png' },\n      darkClass: 'lights-out',\n      lightClass: 'lights-on',\n      current: 'light',\n      stylePreview: true,\n      classTarget: 'html',\n    },\n\n    backgrounds: {\n      disable: true,\n    },\n  },\n\n  // tags: ['autodocs', 'autodocs'],\n}"
                },
                {
                    "name": "themeWrapper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(Story: () => any, context: any) => {\n  const isDark = useDarkMode();\n  // const links = document.getElementsByTagName('link');\n  const elementDark = document.getElementById('dark');\n  // console.log(elementDark);\n  if (isDark && elementDark === null) {\n    document.body.appendChild(linkDark);\n  } else if (!isDark && elementDark !== null) {\n    document.body.removeChild(linkDark);\n  }\n  return Story();\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    showEvent: 'mouseenter',\n    hideEvent: 'mouseleave',\n    position: 'top',\n    size: 'medium',\n    width: 300,\n    showTitle: false,\n    title: '',\n    shading: false,\n    shadingColor: '',\n    content: 'Это содержимое поповера по умолчанию.',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PopoverProps>",
                    "defaultValue": "{\n  title: 'Components/Popover(RC)',\n  component: MePopoverDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MePopoverDirective],\n      imports: [DxPopoverModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"padding: 20px;\">\n        <a id=\"popoverTarget\">Наведите для показа поповера</a>\n        <dx-popover\n          mePopover\n          target=\"#popoverTarget\"\n          [showEvent]=\"showEvent\"\n          [hideEvent]=\"hideEvent\"\n          [position]=\"position\"\n          [width]=\"width\"\n          [maxWidth]=\"maxWidth\"\n          [showTitle]=\"showTitle\"\n          [title]=\"title\"\n          [shading]=\"shading\"\n          [shadingColor]=\"shadingColor\"\n          [size]=\"size\"\n        >\n          <div *dxTemplate=\"let data of 'content'\">\n            {{ content }}\n          </div>\n        </dx-popover>\n      </div>\n    `,\n  }),\n  argTypes: {\n    showEvent: { control: 'text' },\n    hideEvent: { control: 'text' },\n    position: {\n      control: 'select',\n      options: ['top', 'bottom', 'left', 'right'],\n    },\n    size: {\n      control: 'select',\n      options: ['small', 'medium', 'large'],\n    },\n    width: { control: 'number' },\n    maxWidth: { control: 'number' },\n    showTitle: { control: 'boolean' },\n    title: { control: 'text' },\n    shading: { control: 'boolean' },\n    shadingColor: { control: 'color' },\n    content: { control: 'text' },\n  },\n}"
                },
                {
                    "name": "WithOverlay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    showEvent: 'click',\n    hideEvent: 'click',\n    shading: true,\n    shadingColor: 'rgba(0, 0, 0, 0.5)',\n    content: 'Это поповер с затенением фона.',\n  },\n}"
                },
                {
                    "name": "WithTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...Default.args,\n    position: 'bottom',\n    showTitle: true,\n    title: 'Заголовок поповера',\n    maxWidth: 400,\n    content: 'Это поповер с заголовком и ограничением максимальной ширины.',\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    color: 'default',\n    indicatorSrc:\n      'https://static.tildacdn.com/tild6261-3766-4534-a636-643635653261/6068d1f9087cdc5982a3.gif',\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<MeLoadIndicatorDirective>",
                    "defaultValue": "{\n  title: 'Components/LoadIndicator(RC)',\n  component: MeLoadIndicatorDirective,\n  decorators: [\n    moduleMetadata({\n      declarations: [MeLoadIndicatorDirective],\n      imports: [DxLoadIndicatorModule],\n    }),\n  ],\n  argTypes: {\n    color: {\n      options: ['normal', 'default', 'accent'],\n      control: { type: 'select' },\n      defaultValue: 'default',\n    },\n    indicatorSrc: {\n      control: 'text',\n    },\n  },\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"indicators\">\n        <div\n          id=\"small-indicator\"\n          meLoadIndicator\n          [size]=\"'small'\"\n          [color]=\"color\"\n        ></div>\n        <div\n          id=\"medium-indicator\"\n          meLoadIndicator\n          [size]=\"'medium'\"\n          [color]=\"color\"\n        ></div>\n        <div\n          id=\"large-indicator\"\n          meLoadIndicator\n          [size]=\"'large'\"\n          [color]=\"color\"\n        ></div>\n      </div>\n      <div class=\"label me-title-header2\">Custom image</div>\n\n\t\t\t<div class=\"indicators\">\n\t\t\t\t<div\n\t\t\t\t\tid=\"image-indicator\"\n\t\t\t\t\tmeLoadIndicator\n\t\t\t\t\t[size]=\"'large'\"\n\t\t\t\t\t[indicatorSrc]=\"indicatorSrc\"\n\t\t\t\t></div>\n\t\t\t</div>\n    `,\n    styles: [\n      `\n      .indicators {\n        height: 80px;\n        width: 200px;\n        background-color: rgb(157, 157, 158);\n        display: flex;\n        border: 1px solid #9747ff;\n        border-radius: 4px;\n        align-items: center;\n        justify-content: space-around;\n      }\n      .label {\n        margin-top: 20px;\n        margin-bottom: 10px;\n      }\n    `,\n    ],\n  }),\n}"
                },
                {
                    "name": "WithAccentColor",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    color: 'accent',\n    indicatorSrc:\n      'https://static.tildacdn.com/tild6261-3766-4534-a636-643635653261/6068d1f9087cdc5982a3.gif',\n  },\n}"
                },
                {
                    "name": "WithCustomImage",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  ...Template,\n  args: {\n    color: 'default',\n    indicatorSrc:\n      'https://static.tildacdn.com/tild6261-3766-4534-a636-643635653261/6068d1f9087cdc5982a3.gif',\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: 'default',\n    text: 'Button',\n    size: 'medium',\n\n    // isSelected: false,\n    stylingMode: 'contained',\n\n    leftIcon: '',\n  },\n}"
                },
                {
                    "name": "LeftIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: 'normal',\n    text: 'Button',\n    size: 'medium',\n    stylingMode: 'contained',\n    leftIcon: 'arrowback',\n  },\n}"
                },
                {
                    "name": "LeftRightIcon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    type: 'normal',\n    text: 'Button',\n    size: 'medium',\n    stylingMode: 'contained',\n    leftIcon: 'arrowback',\n    rightIcon: 'arrowforward',\n  },\n}"
                }
            ],
            "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'medium',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapper',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    container: '#myWrapper',\n  },\n}"
                },
                {
                    "name": "Scroll",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'medium',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapperScroll',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    title: 'Заголовок',\n    container: '#myWrapperScroll',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [MePopupDirective, DxScrollViewComponent],\n      imports: [DxPopupModule, DxTemplateModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n    <div id=\"myWrapperScroll\" style=\"height: 350px; position: relative;\">\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\n        <div *dxTemplate=\"let data of 'content'\">\n          <dx-scroll-view width=\"100%\" height=\"100%\">\n          ${words}\n          </dx-scroll-view>\n        </div>\n      </dx-popup>\n    </div>`,\n  }),\n}"
                },
                {
                    "name": "Size",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'large',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapperSize',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    title: 'Заголовок',\n    container: '#myWrapperSize',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        MePopupDirective,\n        DxScrollViewComponent,\n        DxButtonComponent,\n        MeButtonDirective,\n      ],\n      imports: [DxPopupModule, DxTemplateModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n    <div id=\"myWrapperSize\" style=\"height: 350px; position: relative;\">\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\n        <dxi-toolbar-item template=\"overflowButton\" toolbar=\"top\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"confirmButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"cancelButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"addButton\" toolbar=\"bottom\" location=\"before\">\n          </dxi-toolbar-item>\n\n        <div *dxTemplate=\"let data of 'content'\">\n          <dx-scroll-view width=\"100%\" height=\"100%\">\n            ${words}\n          </dx-scroll-view>\n        </div>\n        \n        <div *dxTemplate=\"let data of 'overflowButton'\">\n          <dx-button meButton iconOnly=\"overflow\" stylingMode=\"text\" iconSize=\"18px\" size=\"large\">\n            </dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'confirmButton'\">\n          <dx-button meButton text=\"Принять\" type=\"default\" size=\"large\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'cancelButton'\">\n          <dx-button meButton text=\"Отмена\" size=\"large\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'addButton'\">\n          <dx-button meButton text=\"Добавить\" size=\"large\"></dx-button>\n        </div>\n      </dx-popup>\n    </div>`,\n  }),\n}"
                },
                {
                    "name": "Toolbar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    visible: true,\n    size: 'medium',\n    position: {\n      my: 'center',\n      at: 'center',\n      of: '#myWrapperTollbar',\n      // boundary: '',\n      // collision: 'fit',\n    },\n    title: 'Заголовок',\n    container: '#myWrapperTollbar',\n  },\n  decorators: [\n    moduleMetadata({\n      declarations: [\n        MePopupDirective,\n        DxScrollViewComponent,\n        DxButtonComponent,\n        MeButtonDirective,\n      ],\n      imports: [DxPopupModule, DxTemplateModule],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n    <div id=\"myWrapperTollbar\" style=\"height: 350px; position: relative;\">\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\n        <dxi-toolbar-item template=\"overflowButton\" toolbar=\"top\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"confirmButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"cancelButton\" toolbar=\"bottom\" location=\"after\">\n          </dxi-toolbar-item>\n        <dxi-toolbar-item template=\"addButton\" toolbar=\"bottom\" location=\"before\">\n          </dxi-toolbar-item>\n\n        <div *dxTemplate=\"let data of 'content'\">\n          <dx-scroll-view width=\"100%\" height=\"100%\">\n            ${words}\n          </dx-scroll-view>\n        </div>\n        \n        <div *dxTemplate=\"let data of 'overflowButton'\">\n        <dx-button meButton iconOnly=\"overflow\" stylingMode=\"text\" iconSize=\"12px\">\n          </dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'confirmButton'\">\n          <dx-button meButton text=\"Принять\" type=\"default\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'cancelButton'\">\n          <dx-button meButton text=\"Отмена\"></dx-button>\n        </div>\n        <div *dxTemplate=\"let data of 'addButton'\">\n          <dx-button meButton text=\"Добавить\"></dx-button>\n        </div>\n      </dx-popup>\n    </div>`,\n  }),\n}"
                },
                {
                    "name": "words",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'Lorem ipsum dolor sit amet consectetur adipisicing elit. Cum enim, quos qui temporibus repellat architecto, ratione deleniti culpa adipisci beatae perferendis illo eum minima modi libero. Deleniti harum cum accusantium similique obcaecati quae, maxime dignissimos iusto repellat qui temporibus? Culpa quod eius officia pariatur soluta, deleniti tempore atque repellendus, non, eveniet ex repudiandae rerum distinctio autem eligendi consectetur quasi quia impedit ipsum inventore alias! Unde commodi ipsa, excepturi quibusdam nisi, quia vero nemo repudiandae blanditiis repellendus minus porro quasi dolores reiciendis placeat? Itaque commodi enim consectetur, recusandae blanditiis incidunt illum dolor quaerat, eum architecto possimus obcaecati omnis, nulla dignissimos corrupti.'"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<LoadPanelDemoComponent>",
                    "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PopoverProps>",
                    "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MeLoadIndicatorDirective>",
                    "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabPanelHostComponent>",
                    "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MeTabsProps>",
                    "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToastDemoComponent>",
                    "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MeTooltipDirective>",
                    "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<MeButtonDirective | DxButtonComponent>",
                    "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DxPopupModule | MePopupDirective>",
                    "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/dx-monitel-components/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "decorators",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkDark",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "themeWrapper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Collapsible",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomHeader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Multiple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftRightIcon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomFirstDay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomWeekNumberRule",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutWeekNumbers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "YearZoomLevel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-file-uploader/me-file-uploader.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultipleFiles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAccentColor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithCustomImage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoadPanelDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HideOnOutsideClick",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PopoverProps",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithOverlay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Scroll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Size",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Toolbar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "words",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabPanelHostComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomHeight",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithCustomClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutSwipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MeTabsProps",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BottomPosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultTabsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InsideStylingMode",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SmallSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithCustomClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToastDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomClass",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomPosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LongDuration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Basic",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomStyles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HTMLContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Positioning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAnimation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}