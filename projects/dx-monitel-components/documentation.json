{
  "pipes": [],
  "interfaces": [
    {
      "name": "Company",
      "id": "interface-Company-452e0826017d66ac74756c51ce94a856d9b1fb95dfa5949d867bf25944fd2db15bfcad46ce3d340cfc80df6106a978d23a89821f6ef3321c16b943f5cef80d6b",
      "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\r\nimport { DxAccordionModule } from 'devextreme-angular';\r\nimport { MeAccordionDirective } from \"../../lib/directives/me-accordion/accordion.directive\";\r\nimport { Component, Input } from '@angular/core';\r\n\r\ninterface Company {\r\n  CompanyName: string;\r\n  Description: string;\r\n  City: string;\r\n  State: string;\r\n  Zipcode: string;\r\n  Address: string;\r\n  Phone: string;\r\n  Fax: string;\r\n  Website: string;\r\n}\r\n\r\ninterface MeAccordionProps {\r\n  size: 'small' | 'medium' | 'large';\r\n  customClass: string;\r\n  isCollapsible: boolean;\r\n  isMultiple: boolean;\r\n  animationDuration: number;\r\n  companies: Company[];\r\n  selectedItems: Company[];\r\n}\r\n\r\n@Component({\r\n  selector: 'accordion-demo',\r\n  template: `\r\n    <dx-accordion\r\n      meAccordion\r\n      [dataSource]=\"companies\"\r\n      [collapsible]=\"isCollapsible\"\r\n      [multiple]=\"isMultiple\"\r\n      [animationDuration]=\"animationDuration\"\r\n      [selectedItems]=\"selectedItems\"\r\n      [size]=\"size\"\r\n      [customClass]=\"customClass\"\r\n    >\r\n      <div *dxTemplate=\"let company of 'title'\">\r\n        <div class=\"accordion-header\">\r\n          <span class=\"accordion-title\">{{ company.CompanyName }}</span>\r\n          <span class=\"accordion-description\">{{ company.Description }}</span>\r\n        </div>\r\n      </div>\r\n      <div *dxTemplate=\"let company of 'item'\">\r\n        <div>\r\n          <p><b>{{ company.City }}</b> ({{ company.State }})</p>\r\n          <p>{{ company.Zipcode }} {{ company.Address }}</p>\r\n        </div>\r\n        <div>\r\n          <p>Phone: <b>{{ company.Phone }}</b></p>\r\n          <p>Fax: <b>{{ company.Fax }}</b></p>\r\n          <p>Website: <a href=\"{{ company.Website }}\" target=\"_blank\">{{ company.Website }}</a></p>\r\n        </div>\r\n      </div>\r\n    </dx-accordion>\r\n  `\r\n})\r\nclass AccordionDemoComponent {\r\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\r\n  @Input() customClass: string = '';\r\n  @Input() isCollapsible: boolean = false;\r\n  @Input() isMultiple: boolean = false;\r\n  @Input() animationDuration: number = 300;\r\n  @Input() companies: Company[] = [];\r\n  @Input() selectedItems: Company[] = [];\r\n}\r\n\r\nconst meta: Meta<MeAccordionProps> = {\r\n  title: 'Components/MeAccordion',\r\n  component: MeAccordionDirective,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeAccordionDirective, AccordionDemoComponent],\r\n      imports: [DxAccordionModule],\r\n    }),\r\n  ],\r\n  render: (args: MeAccordionProps) => ({\r\n    props: args,\r\n    template: '<accordion-demo [size]=\"size\" [customClass]=\"customClass\" [isCollapsible]=\"isCollapsible\" [isMultiple]=\"isMultiple\" [animationDuration]=\"animationDuration\" [companies]=\"companies\" [selectedItems]=\"selectedItems\"></accordion-demo>'\r\n  }),\r\n  argTypes: {\r\n    size: {\r\n      options: ['small', 'medium', 'large'],\r\n      control: { type: 'select' },\r\n    },\r\n    customClass: { control: 'text' },\r\n    isCollapsible: { control: 'boolean' },\r\n    isMultiple: { control: 'boolean' },\r\n    animationDuration: { control: { type: 'range', min: 0, max: 1000, step: 50 } },\r\n  },\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<MeAccordionProps>;\r\n\r\nconst defaultCompanies: Company[] = [\r\n  { CompanyName: 'Company A', Description: 'Description A', City: 'City A', State: 'State A', Zipcode: '12345', Address: 'Address A', Phone: '123-456-7890', Fax: '098-765-4321', Website: 'http://www.companya.com' },\r\n  { CompanyName: 'Company B', Description: 'Description B', City: 'City B', State: 'State B', Zipcode: '67890', Address: 'Address B', Phone: '234-567-8901', Fax: '109-876-5432', Website: 'http://www.companyb.com' },\r\n  { CompanyName: 'Company C', Description: 'Description C', City: 'City C', State: 'State C', Zipcode: '13579', Address: 'Address C', Phone: '345-678-9012', Fax: '210-987-6543', Website: 'http://www.companyc.com' },\r\n];\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    size: 'medium',\r\n    customClass: '',\r\n    isCollapsible: false,\r\n    isMultiple: false,\r\n    animationDuration: 300,\r\n    companies: defaultCompanies,\r\n    selectedItems: [defaultCompanies[0]],\r\n  },\r\n};\r\n\r\nexport const Small: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    size: 'small',\r\n  },\r\n};\r\n\r\nexport const Large: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    size: 'large',\r\n  },\r\n};\r\n\r\nexport const Collapsible: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    isCollapsible: true,\r\n  },\r\n};\r\n\r\nexport const Multiple: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    isMultiple: true,\r\n  },\r\n};\r\n\r\nexport const CustomAnimation: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    animationDuration: 1000,\r\n  },\r\n};\r\n\r\nexport const CustomClass: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    customClass: 'my-custom-accordion',\r\n  },\r\n};\r\n",
      "properties": [
        {
          "name": "Address",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 12
        },
        {
          "name": "City",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "CompanyName",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 7
        },
        {
          "name": "Description",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "Fax",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 14
        },
        {
          "name": "Phone",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 13
        },
        {
          "name": "State",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "Website",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 15
        },
        {
          "name": "Zipcode",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 11
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "MeAccordionProps",
      "id": "interface-MeAccordionProps-452e0826017d66ac74756c51ce94a856d9b1fb95dfa5949d867bf25944fd2db15bfcad46ce3d340cfc80df6106a978d23a89821f6ef3321c16b943f5cef80d6b",
      "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\r\nimport { DxAccordionModule } from 'devextreme-angular';\r\nimport { MeAccordionDirective } from \"../../lib/directives/me-accordion/accordion.directive\";\r\nimport { Component, Input } from '@angular/core';\r\n\r\ninterface Company {\r\n  CompanyName: string;\r\n  Description: string;\r\n  City: string;\r\n  State: string;\r\n  Zipcode: string;\r\n  Address: string;\r\n  Phone: string;\r\n  Fax: string;\r\n  Website: string;\r\n}\r\n\r\ninterface MeAccordionProps {\r\n  size: 'small' | 'medium' | 'large';\r\n  customClass: string;\r\n  isCollapsible: boolean;\r\n  isMultiple: boolean;\r\n  animationDuration: number;\r\n  companies: Company[];\r\n  selectedItems: Company[];\r\n}\r\n\r\n@Component({\r\n  selector: 'accordion-demo',\r\n  template: `\r\n    <dx-accordion\r\n      meAccordion\r\n      [dataSource]=\"companies\"\r\n      [collapsible]=\"isCollapsible\"\r\n      [multiple]=\"isMultiple\"\r\n      [animationDuration]=\"animationDuration\"\r\n      [selectedItems]=\"selectedItems\"\r\n      [size]=\"size\"\r\n      [customClass]=\"customClass\"\r\n    >\r\n      <div *dxTemplate=\"let company of 'title'\">\r\n        <div class=\"accordion-header\">\r\n          <span class=\"accordion-title\">{{ company.CompanyName }}</span>\r\n          <span class=\"accordion-description\">{{ company.Description }}</span>\r\n        </div>\r\n      </div>\r\n      <div *dxTemplate=\"let company of 'item'\">\r\n        <div>\r\n          <p><b>{{ company.City }}</b> ({{ company.State }})</p>\r\n          <p>{{ company.Zipcode }} {{ company.Address }}</p>\r\n        </div>\r\n        <div>\r\n          <p>Phone: <b>{{ company.Phone }}</b></p>\r\n          <p>Fax: <b>{{ company.Fax }}</b></p>\r\n          <p>Website: <a href=\"{{ company.Website }}\" target=\"_blank\">{{ company.Website }}</a></p>\r\n        </div>\r\n      </div>\r\n    </dx-accordion>\r\n  `\r\n})\r\nclass AccordionDemoComponent {\r\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\r\n  @Input() customClass: string = '';\r\n  @Input() isCollapsible: boolean = false;\r\n  @Input() isMultiple: boolean = false;\r\n  @Input() animationDuration: number = 300;\r\n  @Input() companies: Company[] = [];\r\n  @Input() selectedItems: Company[] = [];\r\n}\r\n\r\nconst meta: Meta<MeAccordionProps> = {\r\n  title: 'Components/MeAccordion',\r\n  component: MeAccordionDirective,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeAccordionDirective, AccordionDemoComponent],\r\n      imports: [DxAccordionModule],\r\n    }),\r\n  ],\r\n  render: (args: MeAccordionProps) => ({\r\n    props: args,\r\n    template: '<accordion-demo [size]=\"size\" [customClass]=\"customClass\" [isCollapsible]=\"isCollapsible\" [isMultiple]=\"isMultiple\" [animationDuration]=\"animationDuration\" [companies]=\"companies\" [selectedItems]=\"selectedItems\"></accordion-demo>'\r\n  }),\r\n  argTypes: {\r\n    size: {\r\n      options: ['small', 'medium', 'large'],\r\n      control: { type: 'select' },\r\n    },\r\n    customClass: { control: 'text' },\r\n    isCollapsible: { control: 'boolean' },\r\n    isMultiple: { control: 'boolean' },\r\n    animationDuration: { control: { type: 'range', min: 0, max: 1000, step: 50 } },\r\n  },\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<MeAccordionProps>;\r\n\r\nconst defaultCompanies: Company[] = [\r\n  { CompanyName: 'Company A', Description: 'Description A', City: 'City A', State: 'State A', Zipcode: '12345', Address: 'Address A', Phone: '123-456-7890', Fax: '098-765-4321', Website: 'http://www.companya.com' },\r\n  { CompanyName: 'Company B', Description: 'Description B', City: 'City B', State: 'State B', Zipcode: '67890', Address: 'Address B', Phone: '234-567-8901', Fax: '109-876-5432', Website: 'http://www.companyb.com' },\r\n  { CompanyName: 'Company C', Description: 'Description C', City: 'City C', State: 'State C', Zipcode: '13579', Address: 'Address C', Phone: '345-678-9012', Fax: '210-987-6543', Website: 'http://www.companyc.com' },\r\n];\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    size: 'medium',\r\n    customClass: '',\r\n    isCollapsible: false,\r\n    isMultiple: false,\r\n    animationDuration: 300,\r\n    companies: defaultCompanies,\r\n    selectedItems: [defaultCompanies[0]],\r\n  },\r\n};\r\n\r\nexport const Small: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    size: 'small',\r\n  },\r\n};\r\n\r\nexport const Large: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    size: 'large',\r\n  },\r\n};\r\n\r\nexport const Collapsible: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    isCollapsible: true,\r\n  },\r\n};\r\n\r\nexport const Multiple: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    isMultiple: true,\r\n  },\r\n};\r\n\r\nexport const CustomAnimation: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    animationDuration: 1000,\r\n  },\r\n};\r\n\r\nexport const CustomClass: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    customClass: 'my-custom-accordion',\r\n  },\r\n};\r\n",
      "properties": [
        {
          "name": "animationDuration",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 23
        },
        {
          "name": "companies",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Company[]",
          "optional": false,
          "description": "",
          "line": 24
        },
        {
          "name": "customClass",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 20
        },
        {
          "name": "isCollapsible",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 21
        },
        {
          "name": "isMultiple",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 22
        },
        {
          "name": "selectedItems",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Company[]",
          "optional": false,
          "description": "",
          "line": 25
        },
        {
          "name": "size",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "\"small\" | \"medium\" | \"large\"",
          "optional": false,
          "description": "",
          "line": 19
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "MeCalendarProps",
      "id": "interface-MeCalendarProps-8b4172dd71b05e2073dfef02008dc405d9ac5e2b7dbe2dbd441c5366afb5278d4a4fa9d87d6229a65884674d76826a211175719b692e81f2a36039998dafde5c",
      "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\r\nimport { DxCalendarModule } from 'devextreme-angular';\r\nimport { MeCalendarDirective } from '../../public-api';\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'calendar-demo',\r\n  template: `\r\n    <dx-calendar\r\n      meCalendar\r\n      [value]=\"currentValue\"\r\n      [showWeekNumbers]=\"showWeekNumbers\"\r\n      [disabled]=\"disabled\"\r\n      [firstDayOfWeek]=\"firstDayOfWeek\"\r\n      [zoomLevel]=\"zoomLevel\"\r\n      [weekNumberRule]=\"weekNumberRule\"\r\n      (onValueChanged)=\"onDateValueChanged($event)\"\r\n    ></dx-calendar>\r\n  `\r\n})\r\nclass CalendarDemoComponent {\r\n  @Input() currentValue: Date = new Date();\r\n  @Input() showWeekNumbers: boolean = true;\r\n  @Input() disabled: boolean = false;\r\n  @Input() firstDayOfWeek: number = 1;\r\n  @Input() zoomLevel: string = 'month';\r\n  @Input() weekNumberRule: string = 'firstDay';\r\n\r\n  onDateValueChanged(e: any) {\r\n    console.log('Date changed:', e.value);\r\n  }\r\n}\r\n\r\ninterface MeCalendarProps {\r\n  showWeekNumbers: boolean;\r\n  disabled: boolean;\r\n  firstDayOfWeek: number;\r\n  zoomLevel: string;\r\n  weekNumberRule: string;\r\n}\r\n\r\nconst meta: Meta<MeCalendarProps> = {\r\n  title: 'Components/MeCalendar',\r\n  component: MeCalendarDirective,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeCalendarDirective, CalendarDemoComponent],\r\n      imports: [DxCalendarModule],\r\n    }),\r\n  ],\r\n  render: (args: MeCalendarProps) => ({\r\n    props: args,\r\n    template: `\r\n      <calendar-demo\r\n        [showWeekNumbers]=\"showWeekNumbers\"\r\n        [disabled]=\"disabled\"\r\n        [firstDayOfWeek]=\"firstDayOfWeek\"\r\n        [zoomLevel]=\"zoomLevel\"\r\n        [weekNumberRule]=\"weekNumberRule\"\r\n      ></calendar-demo>\r\n    `,\r\n  }),\r\n  argTypes: {\r\n    showWeekNumbers: {\r\n      control: 'boolean',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n    firstDayOfWeek: {\r\n      control: { type: 'select', options: [0, 1, 2, 3, 4, 5, 6] },\r\n    },\r\n    zoomLevel: {\r\n      control: { type: 'select', options: ['month', 'year', 'decade', 'century'] },\r\n    },\r\n    weekNumberRule: {\r\n      control: { type: 'select', options: ['auto', 'firstDay', 'firstFourDays', 'fullWeek'] },\r\n    },\r\n  },\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<MeCalendarProps>;\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    showWeekNumbers: true,\r\n    disabled: false,\r\n    firstDayOfWeek: 1,\r\n    zoomLevel: 'month',\r\n    weekNumberRule: 'firstDay',\r\n  },\r\n};\r\n\r\nexport const WithoutWeekNumbers: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    showWeekNumbers: false,\r\n  },\r\n};\r\n\r\nexport const Disabled: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    disabled: true,\r\n  },\r\n};\r\n\r\nexport const CustomFirstDay: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    firstDayOfWeek: 0, // Sunday\r\n  },\r\n};\r\n\r\nexport const YearZoomLevel: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    zoomLevel: 'year',\r\n  },\r\n};\r\n\r\nexport const CustomWeekNumberRule: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    weekNumberRule: 'fullWeek',\r\n  },\r\n};\r\n",
      "properties": [
        {
          "name": "disabled",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 36
        },
        {
          "name": "firstDayOfWeek",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 37
        },
        {
          "name": "showWeekNumbers",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 35
        },
        {
          "name": "weekNumberRule",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "zoomLevel",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 38
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    },
    {
      "name": "MeTabsProps",
      "id": "interface-MeTabsProps-21a120ce2cab93cc9bc1adea93ca490c480991abf3f192d4fff1f95b510c584fd15eccbbad67fc602dc6ebe7fd9e2c78cb9cca98a960dacffa54fc5d9200307d",
      "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
      "deprecated": false,
      "deprecationMessage": "",
      "type": "interface",
      "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\r\nimport { DxTabsModule } from 'devextreme-angular';\r\nimport {MeTabsDirective} from \"../../public-api\";\r\nimport {Tab} from \"../../lib/directives/me-tabs/tabs.directive\";\r\n\r\n\r\ninterface MeTabsProps {\r\n  customClass: string;\r\n  position: 'top' | 'bottom';\r\n  size: 'small' | 'medium' | 'large';\r\n  stylingMode: 'outside' | 'inside';\r\n  tabsData: Tab[];\r\n}\r\n\r\nconst meta: Meta<MeTabsProps> = {\r\n  title: 'Components/MeTabs',\r\n  component: MeTabsDirective,\r\n  // tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeTabsDirective],\r\n      imports: [DxTabsModule],\r\n    }),\r\n  ],\r\n  render: (args: MeTabsProps) => ({\r\n    props: args,\r\n    template: `\r\n      <dx-tabs\r\n        meTabs\r\n        [customClass]=\"customClass\"\r\n        [position]=\"position\"\r\n        [size]=\"size\"\r\n        [stylingMode]=\"stylingMode\"\r\n        [dataSource]=\"tabsData\"\r\n        [selectedIndex]=\"0\"\r\n      ></dx-tabs>\r\n    `,\r\n  }),\r\n  argTypes: {\r\n    position: {\r\n      options: ['top', 'bottom'],\r\n      control: { type: 'radio' },\r\n    },\r\n    size: {\r\n      options: ['small', 'medium', 'large'],\r\n      control: { type: 'select' },\r\n    },\r\n    stylingMode: {\r\n      options: ['outside', 'inside'],\r\n      control: { type: 'radio' },\r\n    },\r\n    customClass: {\r\n      control: 'text',\r\n    },\r\n  },\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<MeTabsProps>;\r\n\r\nconst defaultTabsData: Tab[] = [\r\n  { id: 1, text: 'Tab 1' },\r\n  { id: 2, text: 'Tab 2' },\r\n  { id: 3, text: 'Tab 3' },\r\n];\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    position: 'top',\r\n    size: 'medium',\r\n    stylingMode: 'outside',\r\n    customClass: '',\r\n    tabsData: defaultTabsData,\r\n  },\r\n};\r\n\r\nexport const BottomPosition: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    position: 'bottom',\r\n  },\r\n};\r\n\r\nexport const SmallSize: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    size: 'small',\r\n  },\r\n};\r\n\r\nexport const LargeSize: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    size: 'large',\r\n  },\r\n};\r\n\r\nexport const InsideStylingMode: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    stylingMode: 'inside',\r\n  },\r\n};\r\n\r\nexport const WithCustomClass: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    customClass: 'my-custom-tabs-class',\r\n  },\r\n};\r\n\r\nexport const WithIcons: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    tabsData: [\r\n      { id: 1, text: 'Tab 1', icon: 'user' },\r\n      { id: 2, text: 'Tab 2', icon: 'email' },\r\n      { id: 3, text: 'Tab 3', icon: 'chart' },\r\n    ],\r\n  },\r\n};\r\n",
      "properties": [
        {
          "name": "customClass",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 8
        },
        {
          "name": "position",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "\"top\" | \"bottom\"",
          "optional": false,
          "description": "",
          "line": 9
        },
        {
          "name": "size",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "\"small\" | \"medium\" | \"large\"",
          "optional": false,
          "description": "",
          "line": 10
        },
        {
          "name": "stylingMode",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "\"outside\" | \"inside\"",
          "optional": false,
          "description": "",
          "line": 11
        },
        {
          "name": "tabsData",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Tab[]",
          "optional": false,
          "description": "",
          "line": 12
        }
      ],
      "indexSignatures": [],
      "kind": 171,
      "methods": [],
      "extends": []
    }
  ],
  "injectables": [],
  "guards": [],
  "interceptors": [],
  "classes": [],
  "directives": [],
  "components": [
    {
      "name": "AccordionDemoComponent",
      "id": "component-AccordionDemoComponent-452e0826017d66ac74756c51ce94a856d9b1fb95dfa5949d867bf25944fd2db15bfcad46ce3d340cfc80df6106a978d23a89821f6ef3321c16b943f5cef80d6b",
      "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "accordion-demo",
      "styleUrls": [],
      "styles": [],
      "template": "<dx-accordion\n  meAccordion\n  [dataSource]=\"companies\"\n  [collapsible]=\"isCollapsible\"\n  [multiple]=\"isMultiple\"\n  [animationDuration]=\"animationDuration\"\n  [selectedItems]=\"selectedItems\"\n  [size]=\"size\"\n  [customClass]=\"customClass\"\n>\n  <div *dxTemplate=\"let company of 'title'\">\n    <div class=\"accordion-header\">\n      <span class=\"accordion-title\">{{ company.CompanyName }}</span>\n      <span class=\"accordion-description\">{{ company.Description }}</span>\n    </div>\n  </div>\n  <div *dxTemplate=\"let company of 'item'\">\n    <div>\n      <p><b>{{ company.City }}</b> ({{ company.State }})</p>\n      <p>{{ company.Zipcode }} {{ company.Address }}</p>\n    </div>\n    <div>\n      <p>Phone: <b>{{ company.Phone }}</b></p>\n      <p>Fax: <b>{{ company.Fax }}</b></p>\n      <p>Website: <a href=\"{{ company.Website }}\" target=\"_blank\">{{ company.Website }}</a></p>\n    </div>\n  </div>\n</dx-accordion>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "animationDuration",
          "defaultValue": "300",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 66,
          "type": "number",
          "decorators": []
        },
        {
          "name": "companies",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 67,
          "type": "Company[]",
          "decorators": []
        },
        {
          "name": "customClass",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 63,
          "type": "string",
          "decorators": []
        },
        {
          "name": "isCollapsible",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 64,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "isMultiple",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 65,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "selectedItems",
          "defaultValue": "[]",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 68,
          "type": "Company[]",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "'medium'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 62,
          "type": "\"small\" | \"medium\" | \"large\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\r\nimport { DxAccordionModule } from 'devextreme-angular';\r\nimport { MeAccordionDirective } from \"../../lib/directives/me-accordion/accordion.directive\";\r\nimport { Component, Input } from '@angular/core';\r\n\r\ninterface Company {\r\n  CompanyName: string;\r\n  Description: string;\r\n  City: string;\r\n  State: string;\r\n  Zipcode: string;\r\n  Address: string;\r\n  Phone: string;\r\n  Fax: string;\r\n  Website: string;\r\n}\r\n\r\ninterface MeAccordionProps {\r\n  size: 'small' | 'medium' | 'large';\r\n  customClass: string;\r\n  isCollapsible: boolean;\r\n  isMultiple: boolean;\r\n  animationDuration: number;\r\n  companies: Company[];\r\n  selectedItems: Company[];\r\n}\r\n\r\n@Component({\r\n  selector: 'accordion-demo',\r\n  template: `\r\n    <dx-accordion\r\n      meAccordion\r\n      [dataSource]=\"companies\"\r\n      [collapsible]=\"isCollapsible\"\r\n      [multiple]=\"isMultiple\"\r\n      [animationDuration]=\"animationDuration\"\r\n      [selectedItems]=\"selectedItems\"\r\n      [size]=\"size\"\r\n      [customClass]=\"customClass\"\r\n    >\r\n      <div *dxTemplate=\"let company of 'title'\">\r\n        <div class=\"accordion-header\">\r\n          <span class=\"accordion-title\">{{ company.CompanyName }}</span>\r\n          <span class=\"accordion-description\">{{ company.Description }}</span>\r\n        </div>\r\n      </div>\r\n      <div *dxTemplate=\"let company of 'item'\">\r\n        <div>\r\n          <p><b>{{ company.City }}</b> ({{ company.State }})</p>\r\n          <p>{{ company.Zipcode }} {{ company.Address }}</p>\r\n        </div>\r\n        <div>\r\n          <p>Phone: <b>{{ company.Phone }}</b></p>\r\n          <p>Fax: <b>{{ company.Fax }}</b></p>\r\n          <p>Website: <a href=\"{{ company.Website }}\" target=\"_blank\">{{ company.Website }}</a></p>\r\n        </div>\r\n      </div>\r\n    </dx-accordion>\r\n  `\r\n})\r\nclass AccordionDemoComponent {\r\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\r\n  @Input() customClass: string = '';\r\n  @Input() isCollapsible: boolean = false;\r\n  @Input() isMultiple: boolean = false;\r\n  @Input() animationDuration: number = 300;\r\n  @Input() companies: Company[] = [];\r\n  @Input() selectedItems: Company[] = [];\r\n}\r\n\r\nconst meta: Meta<MeAccordionProps> = {\r\n  title: 'Components/MeAccordion',\r\n  component: MeAccordionDirective,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeAccordionDirective, AccordionDemoComponent],\r\n      imports: [DxAccordionModule],\r\n    }),\r\n  ],\r\n  render: (args: MeAccordionProps) => ({\r\n    props: args,\r\n    template: '<accordion-demo [size]=\"size\" [customClass]=\"customClass\" [isCollapsible]=\"isCollapsible\" [isMultiple]=\"isMultiple\" [animationDuration]=\"animationDuration\" [companies]=\"companies\" [selectedItems]=\"selectedItems\"></accordion-demo>'\r\n  }),\r\n  argTypes: {\r\n    size: {\r\n      options: ['small', 'medium', 'large'],\r\n      control: { type: 'select' },\r\n    },\r\n    customClass: { control: 'text' },\r\n    isCollapsible: { control: 'boolean' },\r\n    isMultiple: { control: 'boolean' },\r\n    animationDuration: { control: { type: 'range', min: 0, max: 1000, step: 50 } },\r\n  },\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<MeAccordionProps>;\r\n\r\nconst defaultCompanies: Company[] = [\r\n  { CompanyName: 'Company A', Description: 'Description A', City: 'City A', State: 'State A', Zipcode: '12345', Address: 'Address A', Phone: '123-456-7890', Fax: '098-765-4321', Website: 'http://www.companya.com' },\r\n  { CompanyName: 'Company B', Description: 'Description B', City: 'City B', State: 'State B', Zipcode: '67890', Address: 'Address B', Phone: '234-567-8901', Fax: '109-876-5432', Website: 'http://www.companyb.com' },\r\n  { CompanyName: 'Company C', Description: 'Description C', City: 'City C', State: 'State C', Zipcode: '13579', Address: 'Address C', Phone: '345-678-9012', Fax: '210-987-6543', Website: 'http://www.companyc.com' },\r\n];\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    size: 'medium',\r\n    customClass: '',\r\n    isCollapsible: false,\r\n    isMultiple: false,\r\n    animationDuration: 300,\r\n    companies: defaultCompanies,\r\n    selectedItems: [defaultCompanies[0]],\r\n  },\r\n};\r\n\r\nexport const Small: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    size: 'small',\r\n  },\r\n};\r\n\r\nexport const Large: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    size: 'large',\r\n  },\r\n};\r\n\r\nexport const Collapsible: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    isCollapsible: true,\r\n  },\r\n};\r\n\r\nexport const Multiple: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    isMultiple: true,\r\n  },\r\n};\r\n\r\nexport const CustomAnimation: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    animationDuration: 1000,\r\n  },\r\n};\r\n\r\nexport const CustomClass: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    customClass: 'my-custom-accordion',\r\n  },\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "CalendarDemoComponent",
      "id": "component-CalendarDemoComponent-8b4172dd71b05e2073dfef02008dc405d9ac5e2b7dbe2dbd441c5366afb5278d4a4fa9d87d6229a65884674d76826a211175719b692e81f2a36039998dafde5c",
      "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "calendar-demo",
      "styleUrls": [],
      "styles": [],
      "template": "<dx-calendar\n  meCalendar\n  [value]=\"currentValue\"\n  [showWeekNumbers]=\"showWeekNumbers\"\n  [disabled]=\"disabled\"\n  [firstDayOfWeek]=\"firstDayOfWeek\"\n  [zoomLevel]=\"zoomLevel\"\n  [weekNumberRule]=\"weekNumberRule\"\n  (onValueChanged)=\"onDateValueChanged($event)\"\n></dx-calendar>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "currentValue",
          "defaultValue": "new Date()",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 22,
          "type": "Date",
          "decorators": []
        },
        {
          "name": "disabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 24,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "firstDayOfWeek",
          "defaultValue": "1",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 25,
          "type": "number",
          "decorators": []
        },
        {
          "name": "showWeekNumbers",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 23,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "weekNumberRule",
          "defaultValue": "'firstDay'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "string",
          "decorators": []
        },
        {
          "name": "zoomLevel",
          "defaultValue": "'month'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [
        {
          "name": "onDateValueChanged",
          "args": [
            {
              "name": "e",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": ""
            }
          ],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 29,
          "deprecated": false,
          "deprecationMessage": "",
          "jsdoctags": [
            {
              "name": "e",
              "type": "any",
              "deprecated": false,
              "deprecationMessage": "",
              "tagName": {
                "text": "param"
              }
            }
          ]
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\r\nimport { DxCalendarModule } from 'devextreme-angular';\r\nimport { MeCalendarDirective } from '../../public-api';\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'calendar-demo',\r\n  template: `\r\n    <dx-calendar\r\n      meCalendar\r\n      [value]=\"currentValue\"\r\n      [showWeekNumbers]=\"showWeekNumbers\"\r\n      [disabled]=\"disabled\"\r\n      [firstDayOfWeek]=\"firstDayOfWeek\"\r\n      [zoomLevel]=\"zoomLevel\"\r\n      [weekNumberRule]=\"weekNumberRule\"\r\n      (onValueChanged)=\"onDateValueChanged($event)\"\r\n    ></dx-calendar>\r\n  `\r\n})\r\nclass CalendarDemoComponent {\r\n  @Input() currentValue: Date = new Date();\r\n  @Input() showWeekNumbers: boolean = true;\r\n  @Input() disabled: boolean = false;\r\n  @Input() firstDayOfWeek: number = 1;\r\n  @Input() zoomLevel: string = 'month';\r\n  @Input() weekNumberRule: string = 'firstDay';\r\n\r\n  onDateValueChanged(e: any) {\r\n    console.log('Date changed:', e.value);\r\n  }\r\n}\r\n\r\ninterface MeCalendarProps {\r\n  showWeekNumbers: boolean;\r\n  disabled: boolean;\r\n  firstDayOfWeek: number;\r\n  zoomLevel: string;\r\n  weekNumberRule: string;\r\n}\r\n\r\nconst meta: Meta<MeCalendarProps> = {\r\n  title: 'Components/MeCalendar',\r\n  component: MeCalendarDirective,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeCalendarDirective, CalendarDemoComponent],\r\n      imports: [DxCalendarModule],\r\n    }),\r\n  ],\r\n  render: (args: MeCalendarProps) => ({\r\n    props: args,\r\n    template: `\r\n      <calendar-demo\r\n        [showWeekNumbers]=\"showWeekNumbers\"\r\n        [disabled]=\"disabled\"\r\n        [firstDayOfWeek]=\"firstDayOfWeek\"\r\n        [zoomLevel]=\"zoomLevel\"\r\n        [weekNumberRule]=\"weekNumberRule\"\r\n      ></calendar-demo>\r\n    `,\r\n  }),\r\n  argTypes: {\r\n    showWeekNumbers: {\r\n      control: 'boolean',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n    firstDayOfWeek: {\r\n      control: { type: 'select', options: [0, 1, 2, 3, 4, 5, 6] },\r\n    },\r\n    zoomLevel: {\r\n      control: { type: 'select', options: ['month', 'year', 'decade', 'century'] },\r\n    },\r\n    weekNumberRule: {\r\n      control: { type: 'select', options: ['auto', 'firstDay', 'firstFourDays', 'fullWeek'] },\r\n    },\r\n  },\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<MeCalendarProps>;\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    showWeekNumbers: true,\r\n    disabled: false,\r\n    firstDayOfWeek: 1,\r\n    zoomLevel: 'month',\r\n    weekNumberRule: 'firstDay',\r\n  },\r\n};\r\n\r\nexport const WithoutWeekNumbers: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    showWeekNumbers: false,\r\n  },\r\n};\r\n\r\nexport const Disabled: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    disabled: true,\r\n  },\r\n};\r\n\r\nexport const CustomFirstDay: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    firstDayOfWeek: 0, // Sunday\r\n  },\r\n};\r\n\r\nexport const YearZoomLevel: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    zoomLevel: 'year',\r\n  },\r\n};\r\n\r\nexport const CustomWeekNumberRule: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    weekNumberRule: 'fullWeek',\r\n  },\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "LoadPanelDemoComponent",
      "id": "component-LoadPanelDemoComponent-eed263f9240cc9ff79e4e996c49177a97c40a63135ec1bcbf6cf8b9971db9779ea2e7bfb401662aa6bdaacf9cac0f346d48cbd5a183167558565cf6a67bc4e6f",
      "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "load-panel-demo",
      "styleUrls": [],
      "styles": [
        "\n    .header {\n      font-size: 24px;\n      margin-bottom: 20px;\n    }\n    #employee {\n      margin: 20px 0;\n    }\n    .options {\n      margin-top: 20px;\n    }\n    .option {\n      margin-bottom: 10px;\n    }\n  "
      ],
      "template": "<dx-button text=\"Load Data\" (onClick)=\"showLoadPanel()\"> </dx-button>\n\n<dx-load-panel\n  #loadPanel\n  meLoadPanel\n  shadingColor=\"rgba(0,0,0,0.4)\"\n  [position]=\"{ of: '#employee' }\"\n  [(visible)]=\"loadingVisible\"\n  [showIndicator]=\"showIndicator\"\n  [showPane]=\"showPane\"\n  [shading]=\"shading\"\n  [hideOnOutsideClick]=\"hideOnOutsideClick\"\n  (onShown)=\"onShown()\"\n  (onHidden)=\"onHidden()\"\n  [size]=\"size\"\n  [customClass]=\"customClass\"\n></dx-load-panel>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "customClass",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "hideOnOutsideClick",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "shading",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "showIndicator",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "showPane",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "size",
          "defaultValue": "'medium'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "\"small\" | \"medium\" | \"large\"",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "employeeInfo",
          "defaultValue": "{\r\n    Birth_Date: '1985-01-15',\r\n    City: 'Los Angeles',\r\n    Zipcode: '90001',\r\n    Address: '1234 Main St',\r\n    Mobile_Phone: '555-1234',\r\n    Email: 'john.heart@example.com',\r\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "object",
          "optional": false,
          "description": "",
          "line": 52
        },
        {
          "name": "loadingVisible",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "",
          "optional": false,
          "description": "",
          "line": 51
        }
      ],
      "methodsClass": [
        {
          "name": "onHidden",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 71,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "onShown",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 65,
          "deprecated": false,
          "deprecationMessage": ""
        },
        {
          "name": "showLoadPanel",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 61,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { moduleMetadata, Meta, StoryObj } from '@storybook/angular';\r\nimport { DxButtonModule, DxLoadPanelModule, DxCheckBoxModule } from 'devextreme-angular';\r\nimport { MeLoadPanelDirective } from '../../public-api'\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'load-panel-demo',\r\n  template: `\r\n    <dx-button text=\"Load Data\" (onClick)=\"showLoadPanel()\"> </dx-button>\r\n\r\n    <dx-load-panel\r\n      #loadPanel\r\n      meLoadPanel\r\n      shadingColor=\"rgba(0,0,0,0.4)\"\r\n      [position]=\"{ of: '#employee' }\"\r\n      [(visible)]=\"loadingVisible\"\r\n      [showIndicator]=\"showIndicator\"\r\n      [showPane]=\"showPane\"\r\n      [shading]=\"shading\"\r\n      [hideOnOutsideClick]=\"hideOnOutsideClick\"\r\n      (onShown)=\"onShown()\"\r\n      (onHidden)=\"onHidden()\"\r\n      [size]=\"size\"\r\n      [customClass]=\"customClass\"\r\n    ></dx-load-panel>\r\n  `,\r\n  styles: [`\r\n    .header {\r\n      font-size: 24px;\r\n      margin-bottom: 20px;\r\n    }\r\n    #employee {\r\n      margin: 20px 0;\r\n    }\r\n    .options {\r\n      margin-top: 20px;\r\n    }\r\n    .option {\r\n      margin-bottom: 10px;\r\n    }\r\n  `]\r\n})\r\nexport class LoadPanelDemoComponent {\r\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\r\n  @Input() customClass: boolean = false;\r\n  @Input() showIndicator: boolean = true;\r\n  @Input() showPane: boolean = true;\r\n  @Input() shading: boolean = true;\r\n  @Input() hideOnOutsideClick: boolean = false;\r\n\r\n  loadingVisible = false;\r\n  employeeInfo = {\r\n    Birth_Date: '1985-01-15',\r\n    City: 'Los Angeles',\r\n    Zipcode: '90001',\r\n    Address: '1234 Main St',\r\n    Mobile_Phone: '555-1234',\r\n    Email: 'john.heart@example.com',\r\n  };\r\n\r\n  showLoadPanel() {\r\n    this.loadingVisible = true;\r\n  }\r\n\r\n  onShown() {\r\n    setTimeout(() => {\r\n      this.loadingVisible = false;\r\n    }, 3000);\r\n  }\r\n\r\n  onHidden() {\r\n    // do something when hidden\r\n  }\r\n}\r\n\r\nconst meta: Meta<LoadPanelDemoComponent> = {\r\n  title: 'Components/MeLoadPanel',\r\n  component: LoadPanelDemoComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeLoadPanelDirective, LoadPanelDemoComponent],\r\n      imports: [DxButtonModule, DxLoadPanelModule, DxCheckBoxModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    size: {\r\n      control: { type: 'select', options: ['small', 'medium', 'large'] },\r\n    },\r\n    customClass: { control: 'boolean' },\r\n    showIndicator: { control: 'boolean' },\r\n    showPane: { control: 'boolean' },\r\n    shading: { control: 'boolean' },\r\n    hideOnOutsideClick: { control: 'boolean' },\r\n  },\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<LoadPanelDemoComponent>;\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    size: 'medium',\r\n    customClass: false,\r\n    showIndicator: true,\r\n    showPane: true,\r\n    shading: true,\r\n    hideOnOutsideClick: false,\r\n  },\r\n};\r\n\r\nexport const Small: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    size: 'small',\r\n  },\r\n};\r\n\r\nexport const Large: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    size: 'large',\r\n  },\r\n};\r\n\r\nexport const CustomClass: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    customClass: true,\r\n  },\r\n};\r\n\r\nexport const HideOnOutsideClick: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    hideOnOutsideClick: true,\r\n  },\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n    .header {\n      font-size: 24px;\n      margin-bottom: 20px;\n    }\n    #employee {\n      margin: 20px 0;\n    }\n    .options {\n      margin-top: 20px;\n    }\n    .option {\n      margin-bottom: 10px;\n    }\n  \n",
      "extends": []
    },
    {
      "name": "PopoverHostComponent",
      "id": "component-PopoverHostComponent-aa515a5669242c65c1f894c4176983be2dd509c58547e666fc0be5a22ed39a9736f501f8118066b413db967a1662e5e2b0377cb05fcd46ea412f99e277df4723",
      "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "popover-host",
      "styleUrls": [],
      "styles": [],
      "template": "<div class=\"dx-fieldset form\">\n  <div class=\"dx-field\">\n    <div class=\"dx-field-label me-title-subheader1\">{{ label }}</div>\n    <div class=\"dx-field-value-static\">\n      <p>\n        <span id=\"subject\" class=\"me-text-body2\">{{ subject }}</span>\n        (<a class=\"test-details me-action-link1\" id=\"link\">details</a>)\n      </p>\n      <dx-popover\n        mePopover\n        target=\"#link\"\n        [showEvent]=\"showEvent\"\n        [hideEvent]=\"hideEvent\"\n        [position]=\"position\"\n        [width]=\"width\"\n        [maxWidth]=\"maxWidth\"\n        [showTitle]=\"showTitle\"\n        [title]=\"title\"\n        [shading]=\"shading\"\n        [shadingColor]=\"shadingColor\"\n      >\n        <dxo-animation *ngIf=\"animationEnabled\">\n          <dxo-show type=\"pop\" [from]=\"{ scale: 0 }\" [to]=\"{ scale: 1 }\"></dxo-show>\n          <dxo-hide type=\"fade\" [from]=\"1\" [to]=\"0\"></dxo-hide>\n        </dxo-animation>\n        <div *dxTemplate=\"let data of 'content'\">\n          {{ content }}\n        </div>\n      </dx-popover>\n    </div>\n  </div>\n</div>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "animationEnabled",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 56,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "content",
          "defaultValue": "'Popover content'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 55,
          "type": "string",
          "decorators": []
        },
        {
          "name": "hideEvent",
          "defaultValue": "'mouseleave'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 47,
          "type": "string",
          "decorators": []
        },
        {
          "name": "label",
          "defaultValue": "'Default mode'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 44,
          "type": "string",
          "decorators": []
        },
        {
          "name": "maxWidth",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 50,
          "type": "number | undefined",
          "decorators": []
        },
        {
          "name": "position",
          "defaultValue": "'top'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 48,
          "type": "string",
          "decorators": []
        },
        {
          "name": "shading",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 53,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "shadingColor",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 54,
          "type": "string",
          "decorators": []
        },
        {
          "name": "showEvent",
          "defaultValue": "'mouseenter'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 46,
          "type": "string",
          "decorators": []
        },
        {
          "name": "showTitle",
          "defaultValue": "false",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 51,
          "type": "boolean",
          "decorators": []
        },
        {
          "name": "subject",
          "defaultValue": "'Google AdWords Strategy'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 45,
          "type": "string",
          "decorators": []
        },
        {
          "name": "title",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 52,
          "type": "string",
          "decorators": []
        },
        {
          "name": "width",
          "defaultValue": "300",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 49,
          "type": "number",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Meta, moduleMetadata, StoryObj } from '@storybook/angular';\r\nimport { DxPopoverModule } from 'devextreme-angular/ui/popover';\r\nimport { MePopoverDirective } from '../../public-api';\r\nimport { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'popover-host',\r\n  template: `\r\n    <div class=\"dx-fieldset form\">\r\n      <div class=\"dx-field\">\r\n        <div class=\"dx-field-label me-title-subheader1\">{{ label }}</div>\r\n        <div class=\"dx-field-value-static\">\r\n          <p>\r\n            <span id=\"subject\" class=\"me-text-body2\">{{ subject }}</span>\r\n            (<a class=\"test-details me-action-link1\" id=\"link\">details</a>)\r\n          </p>\r\n          <dx-popover\r\n            mePopover\r\n            target=\"#link\"\r\n            [showEvent]=\"showEvent\"\r\n            [hideEvent]=\"hideEvent\"\r\n            [position]=\"position\"\r\n            [width]=\"width\"\r\n            [maxWidth]=\"maxWidth\"\r\n            [showTitle]=\"showTitle\"\r\n            [title]=\"title\"\r\n            [shading]=\"shading\"\r\n            [shadingColor]=\"shadingColor\"\r\n          >\r\n            <dxo-animation *ngIf=\"animationEnabled\">\r\n              <dxo-show type=\"pop\" [from]=\"{ scale: 0 }\" [to]=\"{ scale: 1 }\"></dxo-show>\r\n              <dxo-hide type=\"fade\" [from]=\"1\" [to]=\"0\"></dxo-hide>\r\n            </dxo-animation>\r\n            <div *dxTemplate=\"let data of 'content'\">\r\n              {{ content }}\r\n            </div>\r\n          </dx-popover>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n})\r\nclass PopoverHostComponent {\r\n  @Input() label: string = 'Default mode';\r\n  @Input() subject: string = 'Google AdWords Strategy';\r\n  @Input() showEvent: string = 'mouseenter';\r\n  @Input() hideEvent: string = 'mouseleave';\r\n  @Input() position: string = 'top';\r\n  @Input() width: number = 300;\r\n  @Input() maxWidth: number | undefined;\r\n  @Input() showTitle: boolean = false;\r\n  @Input() title: string = '';\r\n  @Input() shading: boolean = false;\r\n  @Input() shadingColor: string = '';\r\n  @Input() content: string = 'Popover content';\r\n  @Input() animationEnabled: boolean = false;\r\n}\r\n\r\nconst meta: Meta<PopoverHostComponent> = {\r\n  title: 'Components/MePopover',\r\n  component: PopoverHostComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MePopoverDirective, PopoverHostComponent],\r\n      imports: [DxPopoverModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    label: { control: 'text' },\r\n    subject: { control: 'text' },\r\n    showEvent: { control: 'text' },\r\n    hideEvent: { control: 'text' },\r\n    position: { control: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    width: { control: 'number' },\r\n    maxWidth: { control: 'number' },\r\n    showTitle: { control: 'boolean' },\r\n    title: { control: 'text' },\r\n    shading: { control: 'boolean' },\r\n    shadingColor: { control: 'color' },\r\n    content: { control: 'text' },\r\n    animationEnabled: { control: 'boolean' },\r\n  },\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<PopoverHostComponent>;\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    label: 'Default mode',\r\n    subject: 'Show Popover',\r\n    // showEvent: 'mouseenter',\r\n    // hideEvent: 'mouseleave',\r\n    position: 'top',\r\n    width: 300,\r\n    content: 'Make final decision on whether we are going to increase our Google AdWord spend based on our 2013 marketing plan.',\r\n  },\r\n};\r\n\r\nexport const WithTitle: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    label: 'With title',\r\n    subject: 'Rollout of New Website and Marketing Brochures',\r\n    position: 'bottom',\r\n    showTitle: true,\r\n    title: 'Details',\r\n    maxWidth: 400,\r\n    content: 'The designs for new brochures and website have been approved. Launch date is set for Feb 28.',\r\n  },\r\n};\r\n\r\nexport const WithAnimation: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    label: 'With animation',\r\n    subject: 'Create 2012 Sales Report',\r\n    animationEnabled: true,\r\n    content: '2012 Sales Report has to be completed so we can determine if major changes are required to sales strategy.',\r\n  },\r\n};\r\n\r\nexport const WithOverlay: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    label: 'With overlay',\r\n    subject: 'Website Re-Design Plan',\r\n    showEvent: 'click',\r\n    shading: true,\r\n    shadingColor: 'rgba(0, 0, 0, 0.5)',\r\n    content: 'The changes in our brochure designs for 2013 require us to update key areas of our website.',\r\n  },\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "TabPanelHostComponent",
      "id": "component-TabPanelHostComponent-485376b0ae102fbb9dabfe91b1021a5218421f0ab3153d20615d8b4da2cf7edae41bd32740a2411ddacc93e17b00104bbc278235f523cea38aa9f831937e1c9d",
      "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "tab-panel-host",
      "styleUrls": [],
      "styles": [],
      "template": "<dx-tab-panel\n  meTabPanel\n  [height]=\"height\"\n  width=\"400px\"\n  [selectedIndex]=\"selectedIndex\"\n  [animationEnabled]=\"animationEnabled\"\n  [swipeEnabled]=\"swipeEnabled\"\n  [customClass]=\"customClass\"\n  [hoverStateEnabled]=\"true\"\n>\n  <dxi-item title=\"Employee\" icon=\"floppy\">\n    <div class=\"tabpanel-content\">\n      <p>Content for Employee tab</p>\n    </div>\n  </dxi-item>\n  <dxi-item title=\"Notes\" icon=\"comment\">\n    <div class=\"tabpanel-content\">\n      <p>Content for Notes tab</p>\n    </div>\n  </dxi-item>\n  <dxi-item title=\"Role\" icon=\"isnotblank\">\n    <div class=\"tabpanel-content\">\n      <p>Content for Role tab</p>\n    </div>\n  </dxi-item>\n</dx-tab-panel>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "animationEnabled",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 40
        },
        {
          "name": "customClass",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 42
        },
        {
          "name": "height",
          "defaultValue": "'300px'",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "optional": false,
          "description": "",
          "line": 38
        },
        {
          "name": "selectedIndex",
          "defaultValue": "0",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "number",
          "optional": false,
          "description": "",
          "line": 39
        },
        {
          "name": "swipeEnabled",
          "defaultValue": "true",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "boolean",
          "optional": false,
          "description": "",
          "line": 41
        }
      ],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { Meta, moduleMetadata, StoryObj } from '@storybook/angular';\r\nimport { DxTabPanelModule } from 'devextreme-angular';\r\nimport { MeTabPanelDirective } from \"../../public-api\";\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'tab-panel-host',\r\n  template: `\r\n    <dx-tab-panel\r\n      meTabPanel\r\n      [height]=\"height\"\r\n      width=\"400px\"\r\n      [selectedIndex]=\"selectedIndex\"\r\n      [animationEnabled]=\"animationEnabled\"\r\n      [swipeEnabled]=\"swipeEnabled\"\r\n      [customClass]=\"customClass\"\r\n      [hoverStateEnabled]=\"true\"\r\n    >\r\n      <dxi-item title=\"Employee\" icon=\"floppy\">\r\n        <div class=\"tabpanel-content\">\r\n          <p>Content for Employee tab</p>\r\n        </div>\r\n      </dxi-item>\r\n      <dxi-item title=\"Notes\" icon=\"comment\">\r\n        <div class=\"tabpanel-content\">\r\n          <p>Content for Notes tab</p>\r\n        </div>\r\n      </dxi-item>\r\n      <dxi-item title=\"Role\" icon=\"isnotblank\">\r\n        <div class=\"tabpanel-content\">\r\n          <p>Content for Role tab</p>\r\n        </div>\r\n      </dxi-item>\r\n    </dx-tab-panel>\r\n  `,\r\n})\r\nclass TabPanelHostComponent {\r\n  height: string = '300px';\r\n  selectedIndex: number = 0;\r\n  animationEnabled: boolean = true;\r\n  swipeEnabled: boolean = true;\r\n  customClass: string = '';\r\n}\r\n\r\nconst meta: Meta<TabPanelHostComponent> = {\r\n  title: 'Components/MeTabPanel',\r\n  component: TabPanelHostComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeTabPanelDirective, TabPanelHostComponent],\r\n      imports: [DxTabPanelModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    customClass: { control: 'text' },\r\n    height: { control: 'text' },\r\n    selectedIndex: { control: 'number' },\r\n    animationEnabled: { control: 'boolean' },\r\n    swipeEnabled: { control: 'boolean' },\r\n  },\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<TabPanelHostComponent>;\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    height: '300px',\r\n    selectedIndex: 0,\r\n    animationEnabled: true,\r\n    swipeEnabled: true,\r\n    customClass: '',\r\n  },\r\n};\r\n\r\nexport const WithCustomClass: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    customClass: 'custom-class',\r\n  },\r\n};\r\n\r\nexport const WithoutAnimation: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    animationEnabled: false,\r\n  },\r\n};\r\n\r\nexport const WithoutSwipe: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    swipeEnabled: false,\r\n  },\r\n};\r\n\r\nexport const CustomHeight: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    height: '500px',\r\n  },\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "ToastDemoComponent",
      "id": "component-ToastDemoComponent-b8324ce12c598c140ba99878d84a532d23eb3192034afddae688651ace67293c16e0f622ce1294f9ef29b66b5d0556b4994a246b808ae04533758d2f603a6fa0",
      "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "toast-demo",
      "styleUrls": [],
      "styles": [],
      "template": "<dx-toast\n  meToast\n  #dxToast\n  [message]=\"message\"\n  [displayTime]=\"displayTime\"\n  [position]=\"position\"\n  [animation]=\"animation\"\n  [customClass]=\"customClass\"\n></dx-toast>\n\n<dx-button text=\"Show Toast\" (onClick)=\"showToast()\"> </dx-button>\n<button (click)=\"showToast()\">Show Toast</button>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "animation",
          "defaultValue": "{\r\n    show: { type: 'fade', duration: 400, from: 0, to: 1 },\r\n    hide: { type: 'fade', duration: 400, from: 1, to: 0 },\r\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 29,
          "type": "any",
          "decorators": []
        },
        {
          "name": "customClass",
          "defaultValue": "''",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 33,
          "type": "string",
          "decorators": []
        },
        {
          "name": "displayTime",
          "defaultValue": "2000",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 27,
          "type": "number",
          "decorators": []
        },
        {
          "name": "message",
          "defaultValue": "'This is a toast message'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 26,
          "type": "string",
          "decorators": []
        },
        {
          "name": "position",
          "defaultValue": "'bottom right'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 28,
          "type": "any",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [
        {
          "name": "dxToast",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "DxToastComponent",
          "optional": false,
          "description": "",
          "line": 24,
          "decorators": [
            {
              "name": "ViewChild",
              "stringifiedArguments": "'dxToast', {static: false}"
            }
          ],
          "modifierKind": [170]
        }
      ],
      "methodsClass": [
        {
          "name": "showToast",
          "args": [],
          "optional": false,
          "returnType": "void",
          "typeParameters": [],
          "line": 35,
          "deprecated": false,
          "deprecationMessage": ""
        }
      ],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { moduleMetadata, type Meta, type StoryObj } from '@storybook/angular';\r\nimport { Component, Input, ViewChild } from '@angular/core';\r\nimport { DxToastModule, DxToastComponent } from 'devextreme-angular';\r\nimport { MeToastDirective } from \"../../lib/directives/me-toast/toast.directive\";\r\n\r\n@Component({\r\n  selector: 'toast-demo',\r\n  template: `\r\n    <dx-toast\r\n      meToast\r\n      #dxToast\r\n      [message]=\"message\"\r\n      [displayTime]=\"displayTime\"\r\n      [position]=\"position\"\r\n      [animation]=\"animation\"\r\n      [customClass]=\"customClass\"\r\n    ></dx-toast>\r\n\r\n    <dx-button text=\"Show Toast\" (onClick)=\"showToast()\"> </dx-button>\r\n    <button (click)=\"showToast()\">Show Toast</button>\r\n  `\r\n})\r\nclass ToastDemoComponent {\r\n  @ViewChild('dxToast', { static: false }) dxToast!: DxToastComponent;\r\n\r\n  @Input() message: string = 'This is a toast message';\r\n  @Input() displayTime: number = 2000;\r\n  @Input() position: any = 'bottom right';\r\n  @Input() animation: any = {\r\n    show: { type: 'fade', duration: 400, from: 0, to: 1 },\r\n    hide: { type: 'fade', duration: 400, from: 1, to: 0 },\r\n  };\r\n  @Input() customClass: string = '';\r\n\r\n  showToast() {\r\n    if (this.dxToast && this.dxToast.instance) {\r\n      this.dxToast.instance.show();\r\n    }\r\n  }\r\n}\r\n\r\nconst meta: Meta<ToastDemoComponent> = {\r\n  title: 'Components/meToast',\r\n  component: ToastDemoComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeToastDirective, ToastDemoComponent],\r\n      imports: [DxToastModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    message: { control: 'text' },\r\n    displayTime: { control: 'number' },\r\n    position: {\r\n      control: 'select',\r\n      options: ['top left', 'top center', 'top right', 'bottom left', 'bottom center', 'bottom right'],\r\n    },\r\n    customClass: { control: 'text' },\r\n  },\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<ToastDemoComponent>;\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    message: 'This is a toast message',\r\n    displayTime: 2000,\r\n    position: 'bottom right',\r\n    animation: {\r\n      show: { type: 'fade', duration: 400, from: 0, to: 1 },\r\n      hide: { type: 'fade', duration: 400, from: 1, to: 0 },\r\n    },\r\n    customClass: '',\r\n  },\r\n};\r\n\r\nexport const LongDuration: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    displayTime: 5000,\r\n    message: 'This toast will be displayed for 5 seconds',\r\n  },\r\n};\r\n\r\nexport const CustomPosition: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    position: 'top center',\r\n    message: 'This toast is positioned at the top center',\r\n  },\r\n};\r\n\r\nexport const CustomAnimation: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    message: 'This toast has a custom animation',\r\n    animation: {\r\n      show: { type: 'pop', duration: 400, from: { scale: 0 }, to: { scale: 1 } },\r\n      hide: { type: 'pop', duration: 400, to: { scale: 0 } },\r\n    },\r\n  },\r\n};\r\n\r\nexport const CustomClass: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    message: 'This toast has a custom CSS class',\r\n    customClass: 'my-custom-toast',\r\n  },\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "",
      "extends": []
    },
    {
      "name": "TooltipDemoComponent",
      "id": "component-TooltipDemoComponent-975eedb7dd67c35f677ca0c1d0bfd7aeb467f5ba12ab5b12f99c59409ce57f836299f7b0502f5c4318a9711655e2514cc363c3c551f829655ca90d11054ca997",
      "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
      "encapsulation": [],
      "entryComponents": [],
      "inputs": [],
      "outputs": [],
      "providers": [],
      "selector": "tooltip-demo",
      "styleUrls": [],
      "styles": [
        "\n    .tooltip-demo {\n      display: flex;\n      justify-content: space-around;\n      padding: 20px;\n      background-color: #f0f0f0;\n      border-radius: 10px;\n    }\n\n    .tooltip-group {\n      text-align: center;\n      margin-left: 20px;\n    }\n\n    .tooltip-controls {\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n    }\n\n    .tooltip-button {\n      padding: 10px;\n      border: none;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: background-color 0.3s;\n    }\n\n    .interactive-tooltip {\n      box-sizing: border-box;\n      padding: 4px;\n    }\n\n    .interactive-tooltip * {\n      text-wrap: balance;\n    }\n\n    .interactive-tooltip button {\n      margin-top: 8px;\n      margin-inline: 4px;\n      padding: 4px 8px;\n      border: none;\n      border-radius: 3px;\n      cursor: pointer;\n    }\n\n    .interactive-tooltip .accept-button {\n      background-color: #3257dc;\n      color: white;\n    }\n\n    .interactive-tooltip .decline-button {\n      background-color: #ecedf3;\n      color: #18181a;\n    }\n\n    .custom-tooltip {\n      background-color: #ff9800;\n      color: white;\n      border: 2px solid #e68a00;\n      border-radius: 10px;\n      padding: 10px;\n    }\n\n    .html-tooltip * {\n      text-wrap: balance;\n      text-align: start;\n      margin-top: 4px;\n    }\n  "
      ],
      "template": "<div class=\"tooltip-demo dx-widget\">\n  <div class=\"tooltip-group\">\n    <div class=\"tooltip-controls\">\n      <button\n        class=\"tooltip-button\"\n        [meTooltip]=\"simpleTooltip\"\n        [tooltipPosition]=\"simplePosition\"\n      >\n        {{ simpleButtonText }}\n      </button>\n\n      <button\n        class=\"tooltip-button\"\n        [meTooltip]=\"animatedTooltip\"\n        [tooltipPosition]=\"animatedPosition\"\n        [tooltipShowAnimation]=\"showAnimation\"\n        [tooltipHideAnimation]=\"hideAnimation\"\n      >\n        {{ animatedButtonText }}\n      </button>\n\n      <button\n        class=\"tooltip-button\"\n        [meTooltip]=\"positionedTooltip\"\n        [tooltipPosition]=\"positionedPosition\"\n      >\n        {{ positionedButtonText }}\n      </button>\n    </div>\n  </div>\n\n  <div class=\"tooltip-group\">\n    <div class=\"tooltip-controls\">\n      <button\n        class=\"tooltip-button\"\n        [meTooltip]=\"''\"\n        [tooltipTemplateRef]=\"interactiveTemplate\"\n        [tooltipPosition]=\"interactivePosition\"\n        [tooltipMaxWidth]=\"interactiveMaxWidth\"\n      >\n        {{ interactiveButtonText }}\n      </button>\n\n      <button\n        class=\"tooltip-button\"\n        [meTooltip]=\"''\"\n        [tooltipTemplateRef]=\"htmlTemplate\"\n        [tooltipPosition]=\"htmlPosition\"\n        [tooltipMaxWidth]=\"htmlMaxWidth\"\n      >\n        {{ htmlButtonText }}\n      </button>\n\n      <button\n        class=\"tooltip-button\"\n        [meTooltip]=\"''\"\n        [tooltipTemplateRef]=\"customStyleTemplate\"\n        [tooltipPosition]=\"customStylePosition\"\n        [tooltipClass]=\"customStyleClass\"\n      >\n        {{ customStyleButtonText }}\n      </button>\n    </div>\n  </div>\n</div>\n\n<ng-template #htmlTemplate>\n  <div class=\"html-tooltip\">\n    <h3>HTML в тултипе</h3>\n    <p>\n      Тултипы могут содержать <strong>форматированный текст</strong>, <em>списки</em> и другие\n      HTML-элементы:\n    </p>\n    <ul>\n      <li>Пункт 1</li>\n      <li>Пункт 2</li>\n    </ul>\n  </div>\n</ng-template>\n\n<ng-template #interactiveTemplate>\n  <div class=\"interactive-tooltip\">\n    <h3>Интерактивный тултип</h3>\n    <p>Тултипы могут содержать интерактивные элементы:</p>\n    <button class=\"accept-button\">Принять</button>\n    <button class=\"decline-button\">Отменить</button>\n  </div>\n</ng-template>\n\n<ng-template #customStyleTemplate>\n  <div class=\"custom-tooltip\">\n    <h3>Пользовательские стили</h3>\n    <p>Этот тултип имеет особое оформление, заданное через CSS-класс.</p>\n  </div>\n</ng-template>\n",
      "templateUrl": [],
      "viewProviders": [],
      "hostDirectives": [],
      "inputsClass": [
        {
          "name": "animatedButtonText",
          "defaultValue": "'Анимированный'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 182,
          "type": "string",
          "decorators": []
        },
        {
          "name": "animatedPosition",
          "defaultValue": "'left'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 181,
          "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
          "decorators": []
        },
        {
          "name": "animatedTooltip",
          "defaultValue": "'Тултип с анимацией'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 180,
          "type": "string",
          "decorators": []
        },
        {
          "name": "customStyleButtonText",
          "defaultValue": "'Пользовательские стили'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 208,
          "type": "string",
          "decorators": []
        },
        {
          "name": "customStyleClass",
          "defaultValue": "'custom-tooltip'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 207,
          "type": "string",
          "decorators": []
        },
        {
          "name": "customStylePosition",
          "defaultValue": "'bottom'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 206,
          "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
          "decorators": []
        },
        {
          "name": "hideAnimation",
          "defaultValue": "{\r\n    type: 'pop',\r\n    from: { scale: 1, opacity: 1 },\r\n    to: { opacity: 0, scale: 0.1 },\r\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 188,
          "type": "any",
          "decorators": []
        },
        {
          "name": "htmlButtonText",
          "defaultValue": "'HTML-содержимое'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 204,
          "type": "string",
          "decorators": []
        },
        {
          "name": "htmlMaxWidth",
          "defaultValue": "'300'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 203,
          "type": "string",
          "decorators": []
        },
        {
          "name": "htmlPosition",
          "defaultValue": "'right'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 202,
          "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
          "decorators": []
        },
        {
          "name": "interactiveButtonText",
          "defaultValue": "'Интерактивный тултип'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 200,
          "type": "string",
          "decorators": []
        },
        {
          "name": "interactiveMaxWidth",
          "defaultValue": "'200'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 199,
          "type": "string",
          "decorators": []
        },
        {
          "name": "interactivePosition",
          "defaultValue": "'right'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 198,
          "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
          "decorators": []
        },
        {
          "name": "positionedButtonText",
          "defaultValue": "'Позиционирование'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 196,
          "type": "string",
          "decorators": []
        },
        {
          "name": "positionedPosition",
          "defaultValue": "'bottom'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 195,
          "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
          "decorators": []
        },
        {
          "name": "positionedTooltip",
          "defaultValue": "'Тултип снизу'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 194,
          "type": "string",
          "decorators": []
        },
        {
          "name": "showAnimation",
          "defaultValue": "{\r\n    type: 'slide',\r\n    from: { left: -100, opacity: 0 },\r\n    to: { opacity: 1, left: 0 },\r\n  }",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 183,
          "type": "any",
          "decorators": []
        },
        {
          "name": "simpleButtonText",
          "defaultValue": "'Простой тултип'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 178,
          "type": "string",
          "decorators": []
        },
        {
          "name": "simplePosition",
          "defaultValue": "'top'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 177,
          "type": "\"top\" | \"bottom\" | \"left\" | \"right\"",
          "decorators": []
        },
        {
          "name": "simpleTooltip",
          "defaultValue": "'Это простой текстовый тултип'",
          "deprecated": false,
          "deprecationMessage": "",
          "line": 176,
          "type": "string",
          "decorators": []
        }
      ],
      "outputsClass": [],
      "propertiesClass": [],
      "methodsClass": [],
      "deprecated": false,
      "deprecationMessage": "",
      "hostBindings": [],
      "hostListeners": [],
      "standalone": false,
      "imports": [],
      "description": "",
      "rawdescription": "\n",
      "type": "component",
      "sourceCode": "import { moduleMetadata, Meta, StoryObj } from '@storybook/angular';\r\nimport { Component, Input } from '@angular/core';\r\nimport { MeTooltipDirective } from \"../../public-api\";\r\n\r\n@Component({\r\n  selector: 'tooltip-demo',\r\n  template: `\r\n    <div class=\"tooltip-demo dx-widget\">\r\n      <div class=\"tooltip-group\">\r\n        <div class=\"tooltip-controls\">\r\n          <button\r\n            class=\"tooltip-button\"\r\n            [meTooltip]=\"simpleTooltip\"\r\n            [tooltipPosition]=\"simplePosition\"\r\n          >\r\n            {{ simpleButtonText }}\r\n          </button>\r\n\r\n          <button\r\n            class=\"tooltip-button\"\r\n            [meTooltip]=\"animatedTooltip\"\r\n            [tooltipPosition]=\"animatedPosition\"\r\n            [tooltipShowAnimation]=\"showAnimation\"\r\n            [tooltipHideAnimation]=\"hideAnimation\"\r\n          >\r\n            {{ animatedButtonText }}\r\n          </button>\r\n\r\n          <button\r\n            class=\"tooltip-button\"\r\n            [meTooltip]=\"positionedTooltip\"\r\n            [tooltipPosition]=\"positionedPosition\"\r\n          >\r\n            {{ positionedButtonText }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"tooltip-group\">\r\n        <div class=\"tooltip-controls\">\r\n          <button\r\n            class=\"tooltip-button\"\r\n            [meTooltip]=\"''\"\r\n            [tooltipTemplateRef]=\"interactiveTemplate\"\r\n            [tooltipPosition]=\"interactivePosition\"\r\n            [tooltipMaxWidth]=\"interactiveMaxWidth\"\r\n          >\r\n            {{ interactiveButtonText }}\r\n          </button>\r\n\r\n          <button\r\n            class=\"tooltip-button\"\r\n            [meTooltip]=\"''\"\r\n            [tooltipTemplateRef]=\"htmlTemplate\"\r\n            [tooltipPosition]=\"htmlPosition\"\r\n            [tooltipMaxWidth]=\"htmlMaxWidth\"\r\n          >\r\n            {{ htmlButtonText }}\r\n          </button>\r\n\r\n          <button\r\n            class=\"tooltip-button\"\r\n            [meTooltip]=\"''\"\r\n            [tooltipTemplateRef]=\"customStyleTemplate\"\r\n            [tooltipPosition]=\"customStylePosition\"\r\n            [tooltipClass]=\"customStyleClass\"\r\n          >\r\n            {{ customStyleButtonText }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <ng-template #htmlTemplate>\r\n      <div class=\"html-tooltip\">\r\n        <h3>HTML в тултипе</h3>\r\n        <p>\r\n          Тултипы могут содержать <strong>форматированный текст</strong>, <em>списки</em> и другие\r\n          HTML-элементы:\r\n        </p>\r\n        <ul>\r\n          <li>Пункт 1</li>\r\n          <li>Пункт 2</li>\r\n        </ul>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #interactiveTemplate>\r\n      <div class=\"interactive-tooltip\">\r\n        <h3>Интерактивный тултип</h3>\r\n        <p>Тултипы могут содержать интерактивные элементы:</p>\r\n        <button class=\"accept-button\">Принять</button>\r\n        <button class=\"decline-button\">Отменить</button>\r\n      </div>\r\n    </ng-template>\r\n\r\n    <ng-template #customStyleTemplate>\r\n      <div class=\"custom-tooltip\">\r\n        <h3>Пользовательские стили</h3>\r\n        <p>Этот тултип имеет особое оформление, заданное через CSS-класс.</p>\r\n      </div>\r\n    </ng-template>\r\n  `,\r\n  styles: [`\r\n    .tooltip-demo {\r\n      display: flex;\r\n      justify-content: space-around;\r\n      padding: 20px;\r\n      background-color: #f0f0f0;\r\n      border-radius: 10px;\r\n    }\r\n\r\n    .tooltip-group {\r\n      text-align: center;\r\n      margin-left: 20px;\r\n    }\r\n\r\n    .tooltip-controls {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 15px;\r\n    }\r\n\r\n    .tooltip-button {\r\n      padding: 10px;\r\n      border: none;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      transition: background-color 0.3s;\r\n    }\r\n\r\n    .interactive-tooltip {\r\n      box-sizing: border-box;\r\n      padding: 4px;\r\n    }\r\n\r\n    .interactive-tooltip * {\r\n      text-wrap: balance;\r\n    }\r\n\r\n    .interactive-tooltip button {\r\n      margin-top: 8px;\r\n      margin-inline: 4px;\r\n      padding: 4px 8px;\r\n      border: none;\r\n      border-radius: 3px;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .interactive-tooltip .accept-button {\r\n      background-color: #3257dc;\r\n      color: white;\r\n    }\r\n\r\n    .interactive-tooltip .decline-button {\r\n      background-color: #ecedf3;\r\n      color: #18181a;\r\n    }\r\n\r\n    .custom-tooltip {\r\n      background-color: #ff9800;\r\n      color: white;\r\n      border: 2px solid #e68a00;\r\n      border-radius: 10px;\r\n      padding: 10px;\r\n    }\r\n\r\n    .html-tooltip * {\r\n      text-wrap: balance;\r\n      text-align: start;\r\n      margin-top: 4px;\r\n    }\r\n  `]\r\n})\r\nclass TooltipDemoComponent {\r\n  @Input() simpleTooltip: string = 'Это простой текстовый тултип';\r\n  @Input() simplePosition: 'top' | 'bottom' | 'left' | 'right' = 'top';\r\n  @Input() simpleButtonText: string = 'Простой тултип';\r\n\r\n  @Input() animatedTooltip: string = 'Тултип с анимацией';\r\n  @Input() animatedPosition: 'top' | 'bottom' | 'left' | 'right' = 'left';\r\n  @Input() animatedButtonText: string = 'Анимированный';\r\n  @Input() showAnimation: any = {\r\n    type: 'slide',\r\n    from: { left: -100, opacity: 0 },\r\n    to: { opacity: 1, left: 0 },\r\n  };\r\n  @Input() hideAnimation: any = {\r\n    type: 'pop',\r\n    from: { scale: 1, opacity: 1 },\r\n    to: { opacity: 0, scale: 0.1 },\r\n  };\r\n\r\n  @Input() positionedTooltip: string = 'Тултип снизу';\r\n  @Input() positionedPosition: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\r\n  @Input() positionedButtonText: string = 'Позиционирование';\r\n\r\n  @Input() interactivePosition: 'top' | 'bottom' | 'left' | 'right' = 'right';\r\n  @Input() interactiveMaxWidth: string = '200';\r\n  @Input() interactiveButtonText: string = 'Интерактивный тултип';\r\n\r\n  @Input() htmlPosition: 'top' | 'bottom' | 'left' | 'right' = 'right';\r\n  @Input() htmlMaxWidth: string = '300';\r\n  @Input() htmlButtonText: string = 'HTML-содержимое';\r\n\r\n  @Input() customStylePosition: 'top' | 'bottom' | 'left' | 'right' = 'bottom';\r\n  @Input() customStyleClass: string = 'custom-tooltip';\r\n  @Input() customStyleButtonText: string = 'Пользовательские стили';\r\n}\r\n\r\nconst meta: Meta<TooltipDemoComponent> = {\r\n  title: 'Components/Tooltip',\r\n  component: TooltipDemoComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeTooltipDirective, TooltipDemoComponent],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    simpleTooltip: { control: 'text' },\r\n    simplePosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    simpleButtonText: { control: 'text' },\r\n\r\n    animatedTooltip: { control: 'text' },\r\n    animatedPosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    animatedButtonText: { control: 'text' },\r\n    showAnimation: { control: 'object' },\r\n    hideAnimation: { control: 'object' },\r\n\r\n    positionedTooltip: { control: 'text' },\r\n    positionedPosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    positionedButtonText: { control: 'text' },\r\n\r\n    interactivePosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    interactiveMaxWidth: { control: 'text' },\r\n    interactiveButtonText: { control: 'text' },\r\n\r\n    htmlPosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    htmlMaxWidth: { control: 'text' },\r\n    htmlButtonText: { control: 'text' },\r\n\r\n    customStylePosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    customStyleClass: { control: 'text' },\r\n    customStyleButtonText: { control: 'text' },\r\n  },\r\n};\r\n\r\nexport default meta;\r\ntype Story = StoryObj<TooltipDemoComponent>;\r\n\r\nexport const Default: Story = {\r\n  args: {\r\n    simpleTooltip: 'Это простой текстовый тултип',\r\n    simplePosition: 'top',\r\n    simpleButtonText: 'Простой тултип',\r\n\r\n    animatedTooltip: 'Тултип с анимацией',\r\n    animatedPosition: 'left',\r\n    animatedButtonText: 'Анимированный',\r\n\r\n    positionedTooltip: 'Тултип снизу',\r\n    positionedPosition: 'bottom',\r\n    positionedButtonText: 'Позиционирование',\r\n\r\n    interactivePosition: 'right',\r\n    interactiveMaxWidth: '200',\r\n    interactiveButtonText: 'Интерактивный тултип',\r\n\r\n    htmlPosition: 'right',\r\n    htmlMaxWidth: '300',\r\n    htmlButtonText: 'HTML-содержимое',\r\n\r\n    customStylePosition: 'bottom',\r\n    customStyleClass: 'custom-tooltip',\r\n    customStyleButtonText: 'Пользовательские стили',\r\n  },\r\n};\r\n\r\nexport const CustomPositions: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    simplePosition: 'right',\r\n    animatedPosition: 'top',\r\n    positionedPosition: 'left',\r\n    interactivePosition: 'bottom',\r\n    htmlPosition: 'left',\r\n    customStylePosition: 'top',\r\n  },\r\n};\r\n\r\nexport const CustomContent: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    simpleTooltip: 'Измененный простой тултип',\r\n    animatedTooltip: 'Новый анимированный тултип',\r\n    positionedTooltip: 'Позиционированный тултип сверху',\r\n  },\r\n};\r\n\r\nexport const CustomAnimations: Story = {\r\n  args: {\r\n    ...Default.args,\r\n    showAnimation: {\r\n      type: 'pop',\r\n      from: { scale: 0.5, opacity: 0 },\r\n      to: { scale: 1, opacity: 1 },\r\n    },\r\n    hideAnimation: {\r\n      type: 'slide',\r\n      from: { top: 0, opacity: 1 },\r\n      to: { top: -20, opacity: 0 },\r\n    },\r\n  },\r\n};\r\n",
      "assetsDirs": [],
      "styleUrlsData": "",
      "stylesData": "\n    .tooltip-demo {\n      display: flex;\n      justify-content: space-around;\n      padding: 20px;\n      background-color: #f0f0f0;\n      border-radius: 10px;\n    }\n\n    .tooltip-group {\n      text-align: center;\n      margin-left: 20px;\n    }\n\n    .tooltip-controls {\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n    }\n\n    .tooltip-button {\n      padding: 10px;\n      border: none;\n      border-radius: 5px;\n      cursor: pointer;\n      transition: background-color 0.3s;\n    }\n\n    .interactive-tooltip {\n      box-sizing: border-box;\n      padding: 4px;\n    }\n\n    .interactive-tooltip * {\n      text-wrap: balance;\n    }\n\n    .interactive-tooltip button {\n      margin-top: 8px;\n      margin-inline: 4px;\n      padding: 4px 8px;\n      border: none;\n      border-radius: 3px;\n      cursor: pointer;\n    }\n\n    .interactive-tooltip .accept-button {\n      background-color: #3257dc;\n      color: white;\n    }\n\n    .interactive-tooltip .decline-button {\n      background-color: #ecedf3;\n      color: #18181a;\n    }\n\n    .custom-tooltip {\n      background-color: #ff9800;\n      color: white;\n      border: 2px solid #e68a00;\n      border-radius: 10px;\n      padding: 10px;\n    }\n\n    .html-tooltip * {\n      text-wrap: balance;\n      text-align: start;\n      margin-top: 4px;\n    }\n  \n",
      "extends": []
    }
  ],
  "modules": [],
  "miscellaneous": {
    "variables": [
      {
        "name": "BottomPosition",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    position: 'bottom',\r\n  },\r\n}"
      },
      {
        "name": "Collapsible",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    isCollapsible: true,\r\n  },\r\n}"
      },
      {
        "name": "CustomAnimation",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    animationDuration: 1000,\r\n  },\r\n}"
      },
      {
        "name": "CustomAnimation",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    message: 'This toast has a custom animation',\r\n    animation: {\r\n      show: { type: 'pop', duration: 400, from: { scale: 0 }, to: { scale: 1 } },\r\n      hide: { type: 'pop', duration: 400, to: { scale: 0 } },\r\n    },\r\n  },\r\n}"
      },
      {
        "name": "CustomAnimations",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    showAnimation: {\r\n      type: 'pop',\r\n      from: { scale: 0.5, opacity: 0 },\r\n      to: { scale: 1, opacity: 1 },\r\n    },\r\n    hideAnimation: {\r\n      type: 'slide',\r\n      from: { top: 0, opacity: 1 },\r\n      to: { top: -20, opacity: 0 },\r\n    },\r\n  },\r\n}"
      },
      {
        "name": "CustomClass",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    customClass: 'my-custom-accordion',\r\n  },\r\n}"
      },
      {
        "name": "CustomClass",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    customClass: true,\r\n  },\r\n}"
      },
      {
        "name": "CustomClass",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    message: 'This toast has a custom CSS class',\r\n    customClass: 'my-custom-toast',\r\n  },\r\n}"
      },
      {
        "name": "CustomContent",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    simpleTooltip: 'Измененный простой тултип',\r\n    animatedTooltip: 'Новый анимированный тултип',\r\n    positionedTooltip: 'Позиционированный тултип сверху',\r\n  },\r\n}"
      },
      {
        "name": "CustomFirstDay",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    firstDayOfWeek: 0, // Sunday\r\n  },\r\n}"
      },
      {
        "name": "CustomHeight",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    height: '500px',\r\n  },\r\n}"
      },
      {
        "name": "CustomPosition",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    position: 'top center',\r\n    message: 'This toast is positioned at the top center',\r\n  },\r\n}"
      },
      {
        "name": "CustomPositions",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    simplePosition: 'right',\r\n    animatedPosition: 'top',\r\n    positionedPosition: 'left',\r\n    interactivePosition: 'bottom',\r\n    htmlPosition: 'left',\r\n    customStylePosition: 'top',\r\n  },\r\n}"
      },
      {
        "name": "CustomWeekNumberRule",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    weekNumberRule: 'fullWeek',\r\n  },\r\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    size: 'medium',\r\n    customClass: '',\r\n    isCollapsible: false,\r\n    isMultiple: false,\r\n    animationDuration: 300,\r\n    companies: defaultCompanies,\r\n    selectedItems: [defaultCompanies[0]],\r\n  },\r\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    type: 'default',\r\n    text: 'Button',\r\n    size: 'medium',\r\n    stylingMode: 'contained',\r\n    isSelected: false,\r\n  },\r\n}",
        "rawdescription": "Дефолтная кнопка\r\n\r\nDescription, можно описывать story прямиком из stories",
        "description": "<p>Дефолтная кнопка</p>\n<p>Description, можно описывать story прямиком из stories</p>\n"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    showWeekNumbers: true,\r\n    disabled: false,\r\n    firstDayOfWeek: 1,\r\n    zoomLevel: 'month',\r\n    weekNumberRule: 'firstDay',\r\n  },\r\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    color: 'default',\r\n    indicatorSrc: '../../../assets/images/Spider web.gif',\r\n  },\r\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    size: 'medium',\r\n    customClass: false,\r\n    showIndicator: true,\r\n    showPane: true,\r\n    shading: true,\r\n    hideOnOutsideClick: false,\r\n  },\r\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    label: 'Default mode',\r\n    subject: 'Show Popover',\r\n    // showEvent: 'mouseenter',\r\n    // hideEvent: 'mouseleave',\r\n    position: 'top',\r\n    width: 300,\r\n    content: 'Make final decision on whether we are going to increase our Google AdWord spend based on our 2013 marketing plan.',\r\n  },\r\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    visible: true,\r\n    size: 'medium',\r\n    position: {\r\n      my: 'center',\r\n      at: 'center',\r\n      of: '#myWrapper',\r\n      // boundary: '',\r\n      // collision: 'fit',\r\n    },\r\n    container: '#myWrapper',\r\n  },\r\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    height: '300px',\r\n    selectedIndex: 0,\r\n    animationEnabled: true,\r\n    swipeEnabled: true,\r\n    customClass: '',\r\n  },\r\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    position: 'top',\r\n    size: 'medium',\r\n    stylingMode: 'outside',\r\n    customClass: '',\r\n    tabsData: defaultTabsData,\r\n  },\r\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    message: 'This is a toast message',\r\n    displayTime: 2000,\r\n    position: 'bottom right',\r\n    animation: {\r\n      show: { type: 'fade', duration: 400, from: 0, to: 1 },\r\n      hide: { type: 'fade', duration: 400, from: 1, to: 0 },\r\n    },\r\n    customClass: '',\r\n  },\r\n}"
      },
      {
        "name": "Default",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    simpleTooltip: 'Это простой текстовый тултип',\r\n    simplePosition: 'top',\r\n    simpleButtonText: 'Простой тултип',\r\n\r\n    animatedTooltip: 'Тултип с анимацией',\r\n    animatedPosition: 'left',\r\n    animatedButtonText: 'Анимированный',\r\n\r\n    positionedTooltip: 'Тултип снизу',\r\n    positionedPosition: 'bottom',\r\n    positionedButtonText: 'Позиционирование',\r\n\r\n    interactivePosition: 'right',\r\n    interactiveMaxWidth: '200',\r\n    interactiveButtonText: 'Интерактивный тултип',\r\n\r\n    htmlPosition: 'right',\r\n    htmlMaxWidth: '300',\r\n    htmlButtonText: 'HTML-содержимое',\r\n\r\n    customStylePosition: 'bottom',\r\n    customStyleClass: 'custom-tooltip',\r\n    customStyleButtonText: 'Пользовательские стили',\r\n  },\r\n}"
      },
      {
        "name": "defaultCompanies",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Company[]",
        "defaultValue": "[\r\n  { CompanyName: 'Company A', Description: 'Description A', City: 'City A', State: 'State A', Zipcode: '12345', Address: 'Address A', Phone: '123-456-7890', Fax: '098-765-4321', Website: 'http://www.companya.com' },\r\n  { CompanyName: 'Company B', Description: 'Description B', City: 'City B', State: 'State B', Zipcode: '67890', Address: 'Address B', Phone: '234-567-8901', Fax: '109-876-5432', Website: 'http://www.companyb.com' },\r\n  { CompanyName: 'Company C', Description: 'Description C', City: 'City C', State: 'State C', Zipcode: '13579', Address: 'Address C', Phone: '345-678-9012', Fax: '210-987-6543', Website: 'http://www.companyc.com' },\r\n]"
      },
      {
        "name": "defaultTabsData",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Tab[]",
        "defaultValue": "[\r\n  { id: 1, text: 'Tab 1' },\r\n  { id: 2, text: 'Tab 2' },\r\n  { id: 3, text: 'Tab 3' },\r\n]"
      },
      {
        "name": "Disabled",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    disabled: true,\r\n  },\r\n}"
      },
      {
        "name": "HideOnOutsideClick",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    hideOnOutsideClick: true,\r\n  },\r\n}"
      },
      {
        "name": "InsideStylingMode",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    stylingMode: 'inside',\r\n  },\r\n}"
      },
      {
        "name": "Large",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    size: 'large',\r\n  },\r\n}"
      },
      {
        "name": "Large",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    size: 'large',\r\n  },\r\n}"
      },
      {
        "name": "LargeSize",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    size: 'large',\r\n  },\r\n}"
      },
      {
        "name": "LongDuration",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    displayTime: 5000,\r\n    message: 'This toast will be displayed for 5 seconds',\r\n  },\r\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<MeAccordionProps>",
        "defaultValue": "{\r\n  title: 'Components/MeAccordion',\r\n  component: MeAccordionDirective,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeAccordionDirective, AccordionDemoComponent],\r\n      imports: [DxAccordionModule],\r\n    }),\r\n  ],\r\n  render: (args: MeAccordionProps) => ({\r\n    props: args,\r\n    template: '<accordion-demo [size]=\"size\" [customClass]=\"customClass\" [isCollapsible]=\"isCollapsible\" [isMultiple]=\"isMultiple\" [animationDuration]=\"animationDuration\" [companies]=\"companies\" [selectedItems]=\"selectedItems\"></accordion-demo>'\r\n  }),\r\n  argTypes: {\r\n    size: {\r\n      options: ['small', 'medium', 'large'],\r\n      control: { type: 'select' },\r\n    },\r\n    customClass: { control: 'text' },\r\n    isCollapsible: { control: 'boolean' },\r\n    isMultiple: { control: 'boolean' },\r\n    animationDuration: { control: { type: 'range', min: 0, max: 1000, step: 50 } },\r\n  },\r\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<MeCalendarProps>",
        "defaultValue": "{\r\n  title: 'Components/MeCalendar',\r\n  component: MeCalendarDirective,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeCalendarDirective, CalendarDemoComponent],\r\n      imports: [DxCalendarModule],\r\n    }),\r\n  ],\r\n  render: (args: MeCalendarProps) => ({\r\n    props: args,\r\n    template: `\r\n      <calendar-demo\r\n        [showWeekNumbers]=\"showWeekNumbers\"\r\n        [disabled]=\"disabled\"\r\n        [firstDayOfWeek]=\"firstDayOfWeek\"\r\n        [zoomLevel]=\"zoomLevel\"\r\n        [weekNumberRule]=\"weekNumberRule\"\r\n      ></calendar-demo>\r\n    `,\r\n  }),\r\n  argTypes: {\r\n    showWeekNumbers: {\r\n      control: 'boolean',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n    firstDayOfWeek: {\r\n      control: { type: 'select', options: [0, 1, 2, 3, 4, 5, 6] },\r\n    },\r\n    zoomLevel: {\r\n      control: { type: 'select', options: ['month', 'year', 'decade', 'century'] },\r\n    },\r\n    weekNumberRule: {\r\n      control: { type: 'select', options: ['auto', 'firstDay', 'firstFourDays', 'fullWeek'] },\r\n    },\r\n  },\r\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<MeLoadIndicatorDirective>",
        "defaultValue": "{\r\n  title: 'Components/MeLoadIndicator',\r\n  component: MeLoadIndicatorDirective,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeLoadIndicatorDirective],\r\n      imports: [DxLoadIndicatorModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    color: {\r\n      options: ['normal', 'default', 'accent'],\r\n      control: { type: 'select' },\r\n      defaultValue: 'default',\r\n    },\r\n    indicatorSrc: {\r\n      control: 'text',\r\n    },\r\n  },\r\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<LoadPanelDemoComponent>",
        "defaultValue": "{\r\n  title: 'Components/MeLoadPanel',\r\n  component: LoadPanelDemoComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeLoadPanelDirective, LoadPanelDemoComponent],\r\n      imports: [DxButtonModule, DxLoadPanelModule, DxCheckBoxModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    size: {\r\n      control: { type: 'select', options: ['small', 'medium', 'large'] },\r\n    },\r\n    customClass: { control: 'boolean' },\r\n    showIndicator: { control: 'boolean' },\r\n    showPane: { control: 'boolean' },\r\n    shading: { control: 'boolean' },\r\n    hideOnOutsideClick: { control: 'boolean' },\r\n  },\r\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<PopoverHostComponent>",
        "defaultValue": "{\r\n  title: 'Components/MePopover',\r\n  component: PopoverHostComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MePopoverDirective, PopoverHostComponent],\r\n      imports: [DxPopoverModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    label: { control: 'text' },\r\n    subject: { control: 'text' },\r\n    showEvent: { control: 'text' },\r\n    hideEvent: { control: 'text' },\r\n    position: { control: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    width: { control: 'number' },\r\n    maxWidth: { control: 'number' },\r\n    showTitle: { control: 'boolean' },\r\n    title: { control: 'text' },\r\n    shading: { control: 'boolean' },\r\n    shadingColor: { control: 'color' },\r\n    content: { control: 'text' },\r\n    animationEnabled: { control: 'boolean' },\r\n  },\r\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<TabPanelHostComponent>",
        "defaultValue": "{\r\n  title: 'Components/MeTabPanel',\r\n  component: TabPanelHostComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeTabPanelDirective, TabPanelHostComponent],\r\n      imports: [DxTabPanelModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    customClass: { control: 'text' },\r\n    height: { control: 'text' },\r\n    selectedIndex: { control: 'number' },\r\n    animationEnabled: { control: 'boolean' },\r\n    swipeEnabled: { control: 'boolean' },\r\n  },\r\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<MeTabsProps>",
        "defaultValue": "{\r\n  title: 'Components/MeTabs',\r\n  component: MeTabsDirective,\r\n  // tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeTabsDirective],\r\n      imports: [DxTabsModule],\r\n    }),\r\n  ],\r\n  render: (args: MeTabsProps) => ({\r\n    props: args,\r\n    template: `\r\n      <dx-tabs\r\n        meTabs\r\n        [customClass]=\"customClass\"\r\n        [position]=\"position\"\r\n        [size]=\"size\"\r\n        [stylingMode]=\"stylingMode\"\r\n        [dataSource]=\"tabsData\"\r\n        [selectedIndex]=\"0\"\r\n      ></dx-tabs>\r\n    `,\r\n  }),\r\n  argTypes: {\r\n    position: {\r\n      options: ['top', 'bottom'],\r\n      control: { type: 'radio' },\r\n    },\r\n    size: {\r\n      options: ['small', 'medium', 'large'],\r\n      control: { type: 'select' },\r\n    },\r\n    stylingMode: {\r\n      options: ['outside', 'inside'],\r\n      control: { type: 'radio' },\r\n    },\r\n    customClass: {\r\n      control: 'text',\r\n    },\r\n  },\r\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<ToastDemoComponent>",
        "defaultValue": "{\r\n  title: 'Components/meToast',\r\n  component: ToastDemoComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeToastDirective, ToastDemoComponent],\r\n      imports: [DxToastModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    message: { control: 'text' },\r\n    displayTime: { control: 'number' },\r\n    position: {\r\n      control: 'select',\r\n      options: ['top left', 'top center', 'top right', 'bottom left', 'bottom center', 'bottom right'],\r\n    },\r\n    customClass: { control: 'text' },\r\n  },\r\n}"
      },
      {
        "name": "meta",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Meta<TooltipDemoComponent>",
        "defaultValue": "{\r\n  title: 'Components/Tooltip',\r\n  component: TooltipDemoComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeTooltipDirective, TooltipDemoComponent],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    simpleTooltip: { control: 'text' },\r\n    simplePosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    simpleButtonText: { control: 'text' },\r\n\r\n    animatedTooltip: { control: 'text' },\r\n    animatedPosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    animatedButtonText: { control: 'text' },\r\n    showAnimation: { control: 'object' },\r\n    hideAnimation: { control: 'object' },\r\n\r\n    positionedTooltip: { control: 'text' },\r\n    positionedPosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    positionedButtonText: { control: 'text' },\r\n\r\n    interactivePosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    interactiveMaxWidth: { control: 'text' },\r\n    interactiveButtonText: { control: 'text' },\r\n\r\n    htmlPosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    htmlMaxWidth: { control: 'text' },\r\n    htmlButtonText: { control: 'text' },\r\n\r\n    customStylePosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    customStyleClass: { control: 'text' },\r\n    customStyleButtonText: { control: 'text' },\r\n  },\r\n}"
      },
      {
        "name": "Multiple",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    isMultiple: true,\r\n  },\r\n}"
      },
      {
        "name": "preview",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/.storybook/preview.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Preview",
        "defaultValue": "{\r\n  parameters: {\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
      },
      {
        "name": "Scroll",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    visible: true,\r\n    size: 'medium',\r\n    position: {\r\n      my: 'center',\r\n      at: 'center',\r\n      of: '#myWrapperScroll',\r\n      // boundary: '',\r\n      // collision: 'fit',\r\n    },\r\n    title: 'Заголовок',\r\n    container: '#myWrapperScroll',\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MePopupDirective, DxScrollViewComponent],\r\n      imports: [DxPopupModule, DxTemplateModule],\r\n    }),\r\n  ],\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <div id=\"myWrapperScroll\" style=\"height: 300px; position: relative;\">\r\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\r\n        <div *dxTemplate=\"let data of 'content'\">\r\n          <dx-scroll-view width=\"100%\" height=\"100%\">\r\n          ${words}\r\n          </dx-scroll-view>\r\n        </div>\r\n      </dx-popup>\r\n    </div>`,\r\n  }),\r\n}"
      },
      {
        "name": "Size",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    visible: true,\r\n    size: 'large',\r\n    position: {\r\n      my: 'center',\r\n      at: 'center',\r\n      of: '#myWrapperSize',\r\n      // boundary: '',\r\n      // collision: 'fit',\r\n    },\r\n    title: 'Заголовок',\r\n    container: '#myWrapperSize',\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        MePopupDirective,\r\n        DxScrollViewComponent,\r\n        DxButtonComponent,\r\n        MeButtonDirective,\r\n      ],\r\n      imports: [DxPopupModule, DxTemplateModule],\r\n    }),\r\n  ],\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <div id=\"myWrapperSize\" style=\"height: 350px; position: relative;\">\r\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\r\n        <dxi-toolbar-item template=\"overflowButton\" toolbar=\"top\" location=\"after\">\r\n          </dxi-toolbar-item>\r\n        <dxi-toolbar-item template=\"confirmButton\" toolbar=\"bottom\" location=\"after\">\r\n          </dxi-toolbar-item>\r\n        <dxi-toolbar-item template=\"cancelButton\" toolbar=\"bottom\" location=\"after\">\r\n          </dxi-toolbar-item>\r\n        <dxi-toolbar-item template=\"addButton\" toolbar=\"bottom\" location=\"before\">\r\n          </dxi-toolbar-item>\r\n\r\n        <div *dxTemplate=\"let data of 'content'\">\r\n          <dx-scroll-view width=\"100%\" height=\"100%\">\r\n            ${words}\r\n          </dx-scroll-view>\r\n        </div>\r\n        \r\n        <div *dxTemplate=\"let data of 'overflowButton'\">\r\n          <dx-button meButton iconOnly=\"overflow\" stylingMode=\"text\" iconSize=\"18px\" size=\"large\">\r\n            </dx-button>\r\n        </div>\r\n        <div *dxTemplate=\"let data of 'confirmButton'\">\r\n          <dx-button meButton text=\"Принять\" type=\"default\" size=\"large\"></dx-button>\r\n        </div>\r\n        <div *dxTemplate=\"let data of 'cancelButton'\">\r\n          <dx-button meButton text=\"Отмена\" size=\"large\"></dx-button>\r\n        </div>\r\n        <div *dxTemplate=\"let data of 'addButton'\">\r\n          <dx-button meButton text=\"Добавить\" size=\"large\"></dx-button>\r\n        </div>\r\n      </dx-popup>\r\n    </div>`,\r\n  }),\r\n}"
      },
      {
        "name": "Small",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    size: 'small',\r\n  },\r\n}"
      },
      {
        "name": "Small",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    size: 'small',\r\n  },\r\n}"
      },
      {
        "name": "SmallSize",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    size: 'small',\r\n  },\r\n}"
      },
      {
        "name": "Success",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    type: 'success',\r\n    text: 'Button Success',\r\n    size: 'medium',\r\n  },\r\n}",
        "rawdescription": "Кнопка success Description",
        "description": "<p>Кнопка success Description</p>\n"
      },
      {
        "name": "Template",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"indicators\">\r\n        <div\r\n          id=\"small-indicator\"\r\n          meLoadIndicator\r\n          [size]=\"'small'\"\r\n          [color]=\"'normal'\"\r\n        ></div>\r\n        <div\r\n          id=\"medium-indicator\"\r\n          meLoadIndicator\r\n          [size]=\"'medium'\"\r\n          [color]=\"color\"\r\n        ></div>\r\n        <div\r\n          id=\"large-indicator\"\r\n          meLoadIndicator\r\n          [size]=\"'large'\"\r\n          [color]=\"'accent'\"\r\n        ></div>\r\n      </div>\r\n      <div class=\"label me-title-header2\">Custom image</div>\r\n      <div\r\n        id=\"image-indicator\"\r\n        meLoadIndicator\r\n        [size]=\"'large'\"\r\n        [indicatorSrc]=\"indicatorSrc\"\r\n      ></div>\r\n    `,\r\n    styles: [\r\n      `\r\n      .indicators {\r\n        height: 80px;\r\n        width: 200px;\r\n        background-color: var(--button-normal-bg-color);\r\n        display: flex;\r\n        border: 1px solid #9747ff;\r\n        border-radius: 4px;\r\n        align-items: center;\r\n        justify-content: space-around;\r\n      }\r\n      .label {\r\n        margin-top: 20px;\r\n        margin-bottom: 10px;\r\n      }\r\n    `,\r\n    ],\r\n  }),\r\n}"
      },
      {
        "name": "Toolbar",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    visible: true,\r\n    size: 'medium',\r\n    position: {\r\n      my: 'center',\r\n      at: 'center',\r\n      of: '#myWrapperTollbar',\r\n      // boundary: '',\r\n      // collision: 'fit',\r\n    },\r\n    title: 'Заголовок',\r\n    container: '#myWrapperTollbar',\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        MePopupDirective,\r\n        DxScrollViewComponent,\r\n        DxButtonComponent,\r\n        MeButtonDirective,\r\n      ],\r\n      imports: [DxPopupModule, DxTemplateModule],\r\n    }),\r\n  ],\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <div id=\"myWrapperTollbar\" style=\"height: 300px; position: relative;\">\r\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\r\n        <dxi-toolbar-item template=\"overflowButton\" toolbar=\"top\" location=\"after\">\r\n          </dxi-toolbar-item>\r\n        <dxi-toolbar-item template=\"confirmButton\" toolbar=\"bottom\" location=\"after\">\r\n          </dxi-toolbar-item>\r\n        <dxi-toolbar-item template=\"cancelButton\" toolbar=\"bottom\" location=\"after\">\r\n          </dxi-toolbar-item>\r\n        <dxi-toolbar-item template=\"addButton\" toolbar=\"bottom\" location=\"before\">\r\n          </dxi-toolbar-item>\r\n\r\n        <div *dxTemplate=\"let data of 'content'\">\r\n          <dx-scroll-view width=\"100%\" height=\"100%\">\r\n            ${words}\r\n          </dx-scroll-view>\r\n        </div>\r\n        \r\n        <div *dxTemplate=\"let data of 'overflowButton'\">\r\n        <dx-button meButton iconOnly=\"overflow\" stylingMode=\"text\" iconSize=\"12px\">\r\n          </dx-button>\r\n        </div>\r\n        <div *dxTemplate=\"let data of 'confirmButton'\">\r\n          <dx-button meButton text=\"Принять\" type=\"default\"></dx-button>\r\n        </div>\r\n        <div *dxTemplate=\"let data of 'cancelButton'\">\r\n          <dx-button meButton text=\"Отмена\"></dx-button>\r\n        </div>\r\n        <div *dxTemplate=\"let data of 'addButton'\">\r\n          <dx-button meButton text=\"Добавить\"></dx-button>\r\n        </div>\r\n      </dx-popup>\r\n    </div>`,\r\n  }),\r\n}"
      },
      {
        "name": "WithAccentColor",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    color: 'accent',\r\n    indicatorSrc: '../../../assets/images/Spider web.gif',\r\n  },\r\n}"
      },
      {
        "name": "WithAnimation",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    label: 'With animation',\r\n    subject: 'Create 2012 Sales Report',\r\n    animationEnabled: true,\r\n    content: '2012 Sales Report has to be completed so we can determine if major changes are required to sales strategy.',\r\n  },\r\n}"
      },
      {
        "name": "WithCustomClass",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    customClass: 'custom-class',\r\n  },\r\n}"
      },
      {
        "name": "WithCustomClass",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    customClass: 'my-custom-tabs-class',\r\n  },\r\n}"
      },
      {
        "name": "WithCustomImage",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    color: 'default',\r\n    indicatorSrc: '../../../assets/images/custom-loader.gif',\r\n  },\r\n}"
      },
      {
        "name": "WithIcons",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    tabsData: [\r\n      { id: 1, text: 'Tab 1', icon: 'user' },\r\n      { id: 2, text: 'Tab 2', icon: 'email' },\r\n      { id: 3, text: 'Tab 3', icon: 'chart' },\r\n    ],\r\n  },\r\n}"
      },
      {
        "name": "WithoutAnimation",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    animationEnabled: false,\r\n  },\r\n}"
      },
      {
        "name": "WithoutSwipe",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    swipeEnabled: false,\r\n  },\r\n}"
      },
      {
        "name": "WithoutWeekNumbers",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    showWeekNumbers: false,\r\n  },\r\n}"
      },
      {
        "name": "WithOverlay",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    label: 'With overlay',\r\n    subject: 'Website Re-Design Plan',\r\n    showEvent: 'click',\r\n    shading: true,\r\n    shadingColor: 'rgba(0, 0, 0, 0.5)',\r\n    content: 'The changes in our brochure designs for 2013 require us to update key areas of our website.',\r\n  },\r\n}"
      },
      {
        "name": "WithTitle",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    label: 'With title',\r\n    subject: 'Rollout of New Website and Marketing Brochures',\r\n    position: 'bottom',\r\n    showTitle: true,\r\n    title: 'Details',\r\n    maxWidth: 400,\r\n    content: 'The designs for new brochures and website have been approved. Launch date is set for Feb 28.',\r\n  },\r\n}"
      },
      {
        "name": "words",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "string",
        "defaultValue": "'Lorem ipsum dolor sit amet consectetur adipisicing elit. Cum enim, quos qui temporibus repellat architecto, ratione deleniti culpa adipisci beatae perferendis illo eum minima modi libero. Deleniti harum cum accusantium similique obcaecati quae, maxime dignissimos iusto repellat qui temporibus? Culpa quod eius officia pariatur soluta, deleniti tempore atque repellendus, non, eveniet ex repudiandae rerum distinctio autem eligendi consectetur quasi quia impedit ipsum inventore alias! Unde commodi ipsa, excepturi quibusdam nisi, quia vero nemo repudiandae blanditiis repellendus minus porro quasi dolores reiciendis placeat? Itaque commodi enim consectetur, recusandae blanditiis incidunt illum dolor quaerat, eum architecto possimus obcaecati omnis, nulla dignissimos corrupti.'"
      },
      {
        "name": "YearZoomLevel",
        "ctype": "miscellaneous",
        "subtype": "variable",
        "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "type": "Story",
        "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    zoomLevel: 'year',\r\n  },\r\n}"
      }
    ],
    "functions": [],
    "typealiases": [
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<MeAccordionProps>",
        "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<MeButtonDirective | DxButtonComponent>",
        "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<MeCalendarProps>",
        "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<MeLoadIndicatorDirective>",
        "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<LoadPanelDemoComponent>",
        "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<PopoverHostComponent>",
        "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<DxPopupModule | MePopupDirective>",
        "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<TabPanelHostComponent>",
        "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<MeTabsProps>",
        "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<ToastDemoComponent>",
        "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      },
      {
        "name": "Story",
        "ctype": "miscellaneous",
        "subtype": "typealias",
        "rawtype": "StoryObj<TooltipDemoComponent>",
        "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
        "deprecated": false,
        "deprecationMessage": "",
        "description": "",
        "kind": 183
      }
    ],
    "enumerations": [],
    "groupedVariables": {
      "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts": [
        {
          "name": "BottomPosition",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    position: 'bottom',\r\n  },\r\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    position: 'top',\r\n    size: 'medium',\r\n    stylingMode: 'outside',\r\n    customClass: '',\r\n    tabsData: defaultTabsData,\r\n  },\r\n}"
        },
        {
          "name": "defaultTabsData",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Tab[]",
          "defaultValue": "[\r\n  { id: 1, text: 'Tab 1' },\r\n  { id: 2, text: 'Tab 2' },\r\n  { id: 3, text: 'Tab 3' },\r\n]"
        },
        {
          "name": "InsideStylingMode",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    stylingMode: 'inside',\r\n  },\r\n}"
        },
        {
          "name": "LargeSize",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    size: 'large',\r\n  },\r\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<MeTabsProps>",
          "defaultValue": "{\r\n  title: 'Components/MeTabs',\r\n  component: MeTabsDirective,\r\n  // tags: ['autodocs'],\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeTabsDirective],\r\n      imports: [DxTabsModule],\r\n    }),\r\n  ],\r\n  render: (args: MeTabsProps) => ({\r\n    props: args,\r\n    template: `\r\n      <dx-tabs\r\n        meTabs\r\n        [customClass]=\"customClass\"\r\n        [position]=\"position\"\r\n        [size]=\"size\"\r\n        [stylingMode]=\"stylingMode\"\r\n        [dataSource]=\"tabsData\"\r\n        [selectedIndex]=\"0\"\r\n      ></dx-tabs>\r\n    `,\r\n  }),\r\n  argTypes: {\r\n    position: {\r\n      options: ['top', 'bottom'],\r\n      control: { type: 'radio' },\r\n    },\r\n    size: {\r\n      options: ['small', 'medium', 'large'],\r\n      control: { type: 'select' },\r\n    },\r\n    stylingMode: {\r\n      options: ['outside', 'inside'],\r\n      control: { type: 'radio' },\r\n    },\r\n    customClass: {\r\n      control: 'text',\r\n    },\r\n  },\r\n}"
        },
        {
          "name": "SmallSize",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    size: 'small',\r\n  },\r\n}"
        },
        {
          "name": "WithCustomClass",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    customClass: 'my-custom-tabs-class',\r\n  },\r\n}"
        },
        {
          "name": "WithIcons",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    tabsData: [\r\n      { id: 1, text: 'Tab 1', icon: 'user' },\r\n      { id: 2, text: 'Tab 2', icon: 'email' },\r\n      { id: 3, text: 'Tab 3', icon: 'chart' },\r\n    ],\r\n  },\r\n}"
        }
      ],
      "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts": [
        {
          "name": "Collapsible",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    isCollapsible: true,\r\n  },\r\n}"
        },
        {
          "name": "CustomAnimation",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    animationDuration: 1000,\r\n  },\r\n}"
        },
        {
          "name": "CustomClass",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    customClass: 'my-custom-accordion',\r\n  },\r\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    size: 'medium',\r\n    customClass: '',\r\n    isCollapsible: false,\r\n    isMultiple: false,\r\n    animationDuration: 300,\r\n    companies: defaultCompanies,\r\n    selectedItems: [defaultCompanies[0]],\r\n  },\r\n}"
        },
        {
          "name": "defaultCompanies",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Company[]",
          "defaultValue": "[\r\n  { CompanyName: 'Company A', Description: 'Description A', City: 'City A', State: 'State A', Zipcode: '12345', Address: 'Address A', Phone: '123-456-7890', Fax: '098-765-4321', Website: 'http://www.companya.com' },\r\n  { CompanyName: 'Company B', Description: 'Description B', City: 'City B', State: 'State B', Zipcode: '67890', Address: 'Address B', Phone: '234-567-8901', Fax: '109-876-5432', Website: 'http://www.companyb.com' },\r\n  { CompanyName: 'Company C', Description: 'Description C', City: 'City C', State: 'State C', Zipcode: '13579', Address: 'Address C', Phone: '345-678-9012', Fax: '210-987-6543', Website: 'http://www.companyc.com' },\r\n]"
        },
        {
          "name": "Large",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    size: 'large',\r\n  },\r\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<MeAccordionProps>",
          "defaultValue": "{\r\n  title: 'Components/MeAccordion',\r\n  component: MeAccordionDirective,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeAccordionDirective, AccordionDemoComponent],\r\n      imports: [DxAccordionModule],\r\n    }),\r\n  ],\r\n  render: (args: MeAccordionProps) => ({\r\n    props: args,\r\n    template: '<accordion-demo [size]=\"size\" [customClass]=\"customClass\" [isCollapsible]=\"isCollapsible\" [isMultiple]=\"isMultiple\" [animationDuration]=\"animationDuration\" [companies]=\"companies\" [selectedItems]=\"selectedItems\"></accordion-demo>'\r\n  }),\r\n  argTypes: {\r\n    size: {\r\n      options: ['small', 'medium', 'large'],\r\n      control: { type: 'select' },\r\n    },\r\n    customClass: { control: 'text' },\r\n    isCollapsible: { control: 'boolean' },\r\n    isMultiple: { control: 'boolean' },\r\n    animationDuration: { control: { type: 'range', min: 0, max: 1000, step: 50 } },\r\n  },\r\n}"
        },
        {
          "name": "Multiple",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    isMultiple: true,\r\n  },\r\n}"
        },
        {
          "name": "Small",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    size: 'small',\r\n  },\r\n}"
        }
      ],
      "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts": [
        {
          "name": "CustomAnimation",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    message: 'This toast has a custom animation',\r\n    animation: {\r\n      show: { type: 'pop', duration: 400, from: { scale: 0 }, to: { scale: 1 } },\r\n      hide: { type: 'pop', duration: 400, to: { scale: 0 } },\r\n    },\r\n  },\r\n}"
        },
        {
          "name": "CustomClass",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    message: 'This toast has a custom CSS class',\r\n    customClass: 'my-custom-toast',\r\n  },\r\n}"
        },
        {
          "name": "CustomPosition",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    position: 'top center',\r\n    message: 'This toast is positioned at the top center',\r\n  },\r\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    message: 'This is a toast message',\r\n    displayTime: 2000,\r\n    position: 'bottom right',\r\n    animation: {\r\n      show: { type: 'fade', duration: 400, from: 0, to: 1 },\r\n      hide: { type: 'fade', duration: 400, from: 1, to: 0 },\r\n    },\r\n    customClass: '',\r\n  },\r\n}"
        },
        {
          "name": "LongDuration",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    displayTime: 5000,\r\n    message: 'This toast will be displayed for 5 seconds',\r\n  },\r\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<ToastDemoComponent>",
          "defaultValue": "{\r\n  title: 'Components/meToast',\r\n  component: ToastDemoComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeToastDirective, ToastDemoComponent],\r\n      imports: [DxToastModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    message: { control: 'text' },\r\n    displayTime: { control: 'number' },\r\n    position: {\r\n      control: 'select',\r\n      options: ['top left', 'top center', 'top right', 'bottom left', 'bottom center', 'bottom right'],\r\n    },\r\n    customClass: { control: 'text' },\r\n  },\r\n}"
        }
      ],
      "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts": [
        {
          "name": "CustomAnimations",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    showAnimation: {\r\n      type: 'pop',\r\n      from: { scale: 0.5, opacity: 0 },\r\n      to: { scale: 1, opacity: 1 },\r\n    },\r\n    hideAnimation: {\r\n      type: 'slide',\r\n      from: { top: 0, opacity: 1 },\r\n      to: { top: -20, opacity: 0 },\r\n    },\r\n  },\r\n}"
        },
        {
          "name": "CustomContent",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    simpleTooltip: 'Измененный простой тултип',\r\n    animatedTooltip: 'Новый анимированный тултип',\r\n    positionedTooltip: 'Позиционированный тултип сверху',\r\n  },\r\n}"
        },
        {
          "name": "CustomPositions",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    simplePosition: 'right',\r\n    animatedPosition: 'top',\r\n    positionedPosition: 'left',\r\n    interactivePosition: 'bottom',\r\n    htmlPosition: 'left',\r\n    customStylePosition: 'top',\r\n  },\r\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    simpleTooltip: 'Это простой текстовый тултип',\r\n    simplePosition: 'top',\r\n    simpleButtonText: 'Простой тултип',\r\n\r\n    animatedTooltip: 'Тултип с анимацией',\r\n    animatedPosition: 'left',\r\n    animatedButtonText: 'Анимированный',\r\n\r\n    positionedTooltip: 'Тултип снизу',\r\n    positionedPosition: 'bottom',\r\n    positionedButtonText: 'Позиционирование',\r\n\r\n    interactivePosition: 'right',\r\n    interactiveMaxWidth: '200',\r\n    interactiveButtonText: 'Интерактивный тултип',\r\n\r\n    htmlPosition: 'right',\r\n    htmlMaxWidth: '300',\r\n    htmlButtonText: 'HTML-содержимое',\r\n\r\n    customStylePosition: 'bottom',\r\n    customStyleClass: 'custom-tooltip',\r\n    customStyleButtonText: 'Пользовательские стили',\r\n  },\r\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<TooltipDemoComponent>",
          "defaultValue": "{\r\n  title: 'Components/Tooltip',\r\n  component: TooltipDemoComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeTooltipDirective, TooltipDemoComponent],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    simpleTooltip: { control: 'text' },\r\n    simplePosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    simpleButtonText: { control: 'text' },\r\n\r\n    animatedTooltip: { control: 'text' },\r\n    animatedPosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    animatedButtonText: { control: 'text' },\r\n    showAnimation: { control: 'object' },\r\n    hideAnimation: { control: 'object' },\r\n\r\n    positionedTooltip: { control: 'text' },\r\n    positionedPosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    positionedButtonText: { control: 'text' },\r\n\r\n    interactivePosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    interactiveMaxWidth: { control: 'text' },\r\n    interactiveButtonText: { control: 'text' },\r\n\r\n    htmlPosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    htmlMaxWidth: { control: 'text' },\r\n    htmlButtonText: { control: 'text' },\r\n\r\n    customStylePosition: {\r\n      control: { type: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    },\r\n    customStyleClass: { control: 'text' },\r\n    customStyleButtonText: { control: 'text' },\r\n  },\r\n}"
        }
      ],
      "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts": [
        {
          "name": "CustomClass",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    customClass: true,\r\n  },\r\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    size: 'medium',\r\n    customClass: false,\r\n    showIndicator: true,\r\n    showPane: true,\r\n    shading: true,\r\n    hideOnOutsideClick: false,\r\n  },\r\n}"
        },
        {
          "name": "HideOnOutsideClick",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    hideOnOutsideClick: true,\r\n  },\r\n}"
        },
        {
          "name": "Large",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    size: 'large',\r\n  },\r\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<LoadPanelDemoComponent>",
          "defaultValue": "{\r\n  title: 'Components/MeLoadPanel',\r\n  component: LoadPanelDemoComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeLoadPanelDirective, LoadPanelDemoComponent],\r\n      imports: [DxButtonModule, DxLoadPanelModule, DxCheckBoxModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    size: {\r\n      control: { type: 'select', options: ['small', 'medium', 'large'] },\r\n    },\r\n    customClass: { control: 'boolean' },\r\n    showIndicator: { control: 'boolean' },\r\n    showPane: { control: 'boolean' },\r\n    shading: { control: 'boolean' },\r\n    hideOnOutsideClick: { control: 'boolean' },\r\n  },\r\n}"
        },
        {
          "name": "Small",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    size: 'small',\r\n  },\r\n}"
        }
      ],
      "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts": [
        {
          "name": "CustomFirstDay",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    firstDayOfWeek: 0, // Sunday\r\n  },\r\n}"
        },
        {
          "name": "CustomWeekNumberRule",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    weekNumberRule: 'fullWeek',\r\n  },\r\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    showWeekNumbers: true,\r\n    disabled: false,\r\n    firstDayOfWeek: 1,\r\n    zoomLevel: 'month',\r\n    weekNumberRule: 'firstDay',\r\n  },\r\n}"
        },
        {
          "name": "Disabled",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    disabled: true,\r\n  },\r\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<MeCalendarProps>",
          "defaultValue": "{\r\n  title: 'Components/MeCalendar',\r\n  component: MeCalendarDirective,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeCalendarDirective, CalendarDemoComponent],\r\n      imports: [DxCalendarModule],\r\n    }),\r\n  ],\r\n  render: (args: MeCalendarProps) => ({\r\n    props: args,\r\n    template: `\r\n      <calendar-demo\r\n        [showWeekNumbers]=\"showWeekNumbers\"\r\n        [disabled]=\"disabled\"\r\n        [firstDayOfWeek]=\"firstDayOfWeek\"\r\n        [zoomLevel]=\"zoomLevel\"\r\n        [weekNumberRule]=\"weekNumberRule\"\r\n      ></calendar-demo>\r\n    `,\r\n  }),\r\n  argTypes: {\r\n    showWeekNumbers: {\r\n      control: 'boolean',\r\n    },\r\n    disabled: {\r\n      control: 'boolean',\r\n    },\r\n    firstDayOfWeek: {\r\n      control: { type: 'select', options: [0, 1, 2, 3, 4, 5, 6] },\r\n    },\r\n    zoomLevel: {\r\n      control: { type: 'select', options: ['month', 'year', 'decade', 'century'] },\r\n    },\r\n    weekNumberRule: {\r\n      control: { type: 'select', options: ['auto', 'firstDay', 'firstFourDays', 'fullWeek'] },\r\n    },\r\n  },\r\n}"
        },
        {
          "name": "WithoutWeekNumbers",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    showWeekNumbers: false,\r\n  },\r\n}"
        },
        {
          "name": "YearZoomLevel",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    zoomLevel: 'year',\r\n  },\r\n}"
        }
      ],
      "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts": [
        {
          "name": "CustomHeight",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    height: '500px',\r\n  },\r\n}"
        },
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    height: '300px',\r\n    selectedIndex: 0,\r\n    animationEnabled: true,\r\n    swipeEnabled: true,\r\n    customClass: '',\r\n  },\r\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<TabPanelHostComponent>",
          "defaultValue": "{\r\n  title: 'Components/MeTabPanel',\r\n  component: TabPanelHostComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeTabPanelDirective, TabPanelHostComponent],\r\n      imports: [DxTabPanelModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    customClass: { control: 'text' },\r\n    height: { control: 'text' },\r\n    selectedIndex: { control: 'number' },\r\n    animationEnabled: { control: 'boolean' },\r\n    swipeEnabled: { control: 'boolean' },\r\n  },\r\n}"
        },
        {
          "name": "WithCustomClass",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    customClass: 'custom-class',\r\n  },\r\n}"
        },
        {
          "name": "WithoutAnimation",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    animationEnabled: false,\r\n  },\r\n}"
        },
        {
          "name": "WithoutSwipe",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    swipeEnabled: false,\r\n  },\r\n}"
        }
      ],
      "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    type: 'default',\r\n    text: 'Button',\r\n    size: 'medium',\r\n    stylingMode: 'contained',\r\n    isSelected: false,\r\n  },\r\n}",
          "rawdescription": "Дефолтная кнопка\r\n\r\nDescription, можно описывать story прямиком из stories",
          "description": "<p>Дефолтная кнопка</p>\n<p>Description, можно описывать story прямиком из stories</p>\n"
        },
        {
          "name": "Success",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    type: 'success',\r\n    text: 'Button Success',\r\n    size: 'medium',\r\n  },\r\n}",
          "rawdescription": "Кнопка success Description",
          "description": "<p>Кнопка success Description</p>\n"
        }
      ],
      "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    color: 'default',\r\n    indicatorSrc: '../../../assets/images/Spider web.gif',\r\n  },\r\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<MeLoadIndicatorDirective>",
          "defaultValue": "{\r\n  title: 'Components/MeLoadIndicator',\r\n  component: MeLoadIndicatorDirective,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MeLoadIndicatorDirective],\r\n      imports: [DxLoadIndicatorModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    color: {\r\n      options: ['normal', 'default', 'accent'],\r\n      control: { type: 'select' },\r\n      defaultValue: 'default',\r\n    },\r\n    indicatorSrc: {\r\n      control: 'text',\r\n    },\r\n  },\r\n}"
        },
        {
          "name": "Template",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n      <div class=\"indicators\">\r\n        <div\r\n          id=\"small-indicator\"\r\n          meLoadIndicator\r\n          [size]=\"'small'\"\r\n          [color]=\"'normal'\"\r\n        ></div>\r\n        <div\r\n          id=\"medium-indicator\"\r\n          meLoadIndicator\r\n          [size]=\"'medium'\"\r\n          [color]=\"color\"\r\n        ></div>\r\n        <div\r\n          id=\"large-indicator\"\r\n          meLoadIndicator\r\n          [size]=\"'large'\"\r\n          [color]=\"'accent'\"\r\n        ></div>\r\n      </div>\r\n      <div class=\"label me-title-header2\">Custom image</div>\r\n      <div\r\n        id=\"image-indicator\"\r\n        meLoadIndicator\r\n        [size]=\"'large'\"\r\n        [indicatorSrc]=\"indicatorSrc\"\r\n      ></div>\r\n    `,\r\n    styles: [\r\n      `\r\n      .indicators {\r\n        height: 80px;\r\n        width: 200px;\r\n        background-color: var(--button-normal-bg-color);\r\n        display: flex;\r\n        border: 1px solid #9747ff;\r\n        border-radius: 4px;\r\n        align-items: center;\r\n        justify-content: space-around;\r\n      }\r\n      .label {\r\n        margin-top: 20px;\r\n        margin-bottom: 10px;\r\n      }\r\n    `,\r\n    ],\r\n  }),\r\n}"
        },
        {
          "name": "WithAccentColor",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    color: 'accent',\r\n    indicatorSrc: '../../../assets/images/Spider web.gif',\r\n  },\r\n}"
        },
        {
          "name": "WithCustomImage",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  ...Template,\r\n  args: {\r\n    color: 'default',\r\n    indicatorSrc: '../../../assets/images/custom-loader.gif',\r\n  },\r\n}"
        }
      ],
      "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    label: 'Default mode',\r\n    subject: 'Show Popover',\r\n    // showEvent: 'mouseenter',\r\n    // hideEvent: 'mouseleave',\r\n    position: 'top',\r\n    width: 300,\r\n    content: 'Make final decision on whether we are going to increase our Google AdWord spend based on our 2013 marketing plan.',\r\n  },\r\n}"
        },
        {
          "name": "meta",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Meta<PopoverHostComponent>",
          "defaultValue": "{\r\n  title: 'Components/MePopover',\r\n  component: PopoverHostComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MePopoverDirective, PopoverHostComponent],\r\n      imports: [DxPopoverModule],\r\n    }),\r\n  ],\r\n  argTypes: {\r\n    label: { control: 'text' },\r\n    subject: { control: 'text' },\r\n    showEvent: { control: 'text' },\r\n    hideEvent: { control: 'text' },\r\n    position: { control: 'select', options: ['top', 'bottom', 'left', 'right'] },\r\n    width: { control: 'number' },\r\n    maxWidth: { control: 'number' },\r\n    showTitle: { control: 'boolean' },\r\n    title: { control: 'text' },\r\n    shading: { control: 'boolean' },\r\n    shadingColor: { control: 'color' },\r\n    content: { control: 'text' },\r\n    animationEnabled: { control: 'boolean' },\r\n  },\r\n}"
        },
        {
          "name": "WithAnimation",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    label: 'With animation',\r\n    subject: 'Create 2012 Sales Report',\r\n    animationEnabled: true,\r\n    content: '2012 Sales Report has to be completed so we can determine if major changes are required to sales strategy.',\r\n  },\r\n}"
        },
        {
          "name": "WithOverlay",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    label: 'With overlay',\r\n    subject: 'Website Re-Design Plan',\r\n    showEvent: 'click',\r\n    shading: true,\r\n    shadingColor: 'rgba(0, 0, 0, 0.5)',\r\n    content: 'The changes in our brochure designs for 2013 require us to update key areas of our website.',\r\n  },\r\n}"
        },
        {
          "name": "WithTitle",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    ...Default.args,\r\n    label: 'With title',\r\n    subject: 'Rollout of New Website and Marketing Brochures',\r\n    position: 'bottom',\r\n    showTitle: true,\r\n    title: 'Details',\r\n    maxWidth: 400,\r\n    content: 'The designs for new brochures and website have been approved. Launch date is set for Feb 28.',\r\n  },\r\n}"
        }
      ],
      "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts": [
        {
          "name": "Default",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    visible: true,\r\n    size: 'medium',\r\n    position: {\r\n      my: 'center',\r\n      at: 'center',\r\n      of: '#myWrapper',\r\n      // boundary: '',\r\n      // collision: 'fit',\r\n    },\r\n    container: '#myWrapper',\r\n  },\r\n}"
        },
        {
          "name": "Scroll",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    visible: true,\r\n    size: 'medium',\r\n    position: {\r\n      my: 'center',\r\n      at: 'center',\r\n      of: '#myWrapperScroll',\r\n      // boundary: '',\r\n      // collision: 'fit',\r\n    },\r\n    title: 'Заголовок',\r\n    container: '#myWrapperScroll',\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [MePopupDirective, DxScrollViewComponent],\r\n      imports: [DxPopupModule, DxTemplateModule],\r\n    }),\r\n  ],\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <div id=\"myWrapperScroll\" style=\"height: 300px; position: relative;\">\r\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\r\n        <div *dxTemplate=\"let data of 'content'\">\r\n          <dx-scroll-view width=\"100%\" height=\"100%\">\r\n          ${words}\r\n          </dx-scroll-view>\r\n        </div>\r\n      </dx-popup>\r\n    </div>`,\r\n  }),\r\n}"
        },
        {
          "name": "Size",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    visible: true,\r\n    size: 'large',\r\n    position: {\r\n      my: 'center',\r\n      at: 'center',\r\n      of: '#myWrapperSize',\r\n      // boundary: '',\r\n      // collision: 'fit',\r\n    },\r\n    title: 'Заголовок',\r\n    container: '#myWrapperSize',\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        MePopupDirective,\r\n        DxScrollViewComponent,\r\n        DxButtonComponent,\r\n        MeButtonDirective,\r\n      ],\r\n      imports: [DxPopupModule, DxTemplateModule],\r\n    }),\r\n  ],\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <div id=\"myWrapperSize\" style=\"height: 350px; position: relative;\">\r\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\r\n        <dxi-toolbar-item template=\"overflowButton\" toolbar=\"top\" location=\"after\">\r\n          </dxi-toolbar-item>\r\n        <dxi-toolbar-item template=\"confirmButton\" toolbar=\"bottom\" location=\"after\">\r\n          </dxi-toolbar-item>\r\n        <dxi-toolbar-item template=\"cancelButton\" toolbar=\"bottom\" location=\"after\">\r\n          </dxi-toolbar-item>\r\n        <dxi-toolbar-item template=\"addButton\" toolbar=\"bottom\" location=\"before\">\r\n          </dxi-toolbar-item>\r\n\r\n        <div *dxTemplate=\"let data of 'content'\">\r\n          <dx-scroll-view width=\"100%\" height=\"100%\">\r\n            ${words}\r\n          </dx-scroll-view>\r\n        </div>\r\n        \r\n        <div *dxTemplate=\"let data of 'overflowButton'\">\r\n          <dx-button meButton iconOnly=\"overflow\" stylingMode=\"text\" iconSize=\"18px\" size=\"large\">\r\n            </dx-button>\r\n        </div>\r\n        <div *dxTemplate=\"let data of 'confirmButton'\">\r\n          <dx-button meButton text=\"Принять\" type=\"default\" size=\"large\"></dx-button>\r\n        </div>\r\n        <div *dxTemplate=\"let data of 'cancelButton'\">\r\n          <dx-button meButton text=\"Отмена\" size=\"large\"></dx-button>\r\n        </div>\r\n        <div *dxTemplate=\"let data of 'addButton'\">\r\n          <dx-button meButton text=\"Добавить\" size=\"large\"></dx-button>\r\n        </div>\r\n      </dx-popup>\r\n    </div>`,\r\n  }),\r\n}"
        },
        {
          "name": "Toolbar",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Story",
          "defaultValue": "{\r\n  args: {\r\n    visible: true,\r\n    size: 'medium',\r\n    position: {\r\n      my: 'center',\r\n      at: 'center',\r\n      of: '#myWrapperTollbar',\r\n      // boundary: '',\r\n      // collision: 'fit',\r\n    },\r\n    title: 'Заголовок',\r\n    container: '#myWrapperTollbar',\r\n  },\r\n  decorators: [\r\n    moduleMetadata({\r\n      declarations: [\r\n        MePopupDirective,\r\n        DxScrollViewComponent,\r\n        DxButtonComponent,\r\n        MeButtonDirective,\r\n      ],\r\n      imports: [DxPopupModule, DxTemplateModule],\r\n    }),\r\n  ],\r\n  render: (args) => ({\r\n    props: args,\r\n    template: `\r\n    <div id=\"myWrapperTollbar\" style=\"height: 300px; position: relative;\">\r\n      <dx-popup mePopup height='200px' ${argsToTemplate(args)}>\r\n        <dxi-toolbar-item template=\"overflowButton\" toolbar=\"top\" location=\"after\">\r\n          </dxi-toolbar-item>\r\n        <dxi-toolbar-item template=\"confirmButton\" toolbar=\"bottom\" location=\"after\">\r\n          </dxi-toolbar-item>\r\n        <dxi-toolbar-item template=\"cancelButton\" toolbar=\"bottom\" location=\"after\">\r\n          </dxi-toolbar-item>\r\n        <dxi-toolbar-item template=\"addButton\" toolbar=\"bottom\" location=\"before\">\r\n          </dxi-toolbar-item>\r\n\r\n        <div *dxTemplate=\"let data of 'content'\">\r\n          <dx-scroll-view width=\"100%\" height=\"100%\">\r\n            ${words}\r\n          </dx-scroll-view>\r\n        </div>\r\n        \r\n        <div *dxTemplate=\"let data of 'overflowButton'\">\r\n        <dx-button meButton iconOnly=\"overflow\" stylingMode=\"text\" iconSize=\"12px\">\r\n          </dx-button>\r\n        </div>\r\n        <div *dxTemplate=\"let data of 'confirmButton'\">\r\n          <dx-button meButton text=\"Принять\" type=\"default\"></dx-button>\r\n        </div>\r\n        <div *dxTemplate=\"let data of 'cancelButton'\">\r\n          <dx-button meButton text=\"Отмена\"></dx-button>\r\n        </div>\r\n        <div *dxTemplate=\"let data of 'addButton'\">\r\n          <dx-button meButton text=\"Добавить\"></dx-button>\r\n        </div>\r\n      </dx-popup>\r\n    </div>`,\r\n  }),\r\n}"
        },
        {
          "name": "words",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "string",
          "defaultValue": "'Lorem ipsum dolor sit amet consectetur adipisicing elit. Cum enim, quos qui temporibus repellat architecto, ratione deleniti culpa adipisci beatae perferendis illo eum minima modi libero. Deleniti harum cum accusantium similique obcaecati quae, maxime dignissimos iusto repellat qui temporibus? Culpa quod eius officia pariatur soluta, deleniti tempore atque repellendus, non, eveniet ex repudiandae rerum distinctio autem eligendi consectetur quasi quia impedit ipsum inventore alias! Unde commodi ipsa, excepturi quibusdam nisi, quia vero nemo repudiandae blanditiis repellendus minus porro quasi dolores reiciendis placeat? Itaque commodi enim consectetur, recusandae blanditiis incidunt illum dolor quaerat, eum architecto possimus obcaecati omnis, nulla dignissimos corrupti.'"
        }
      ],
      "projects/dx-monitel-components/.storybook/preview.ts": [
        {
          "name": "preview",
          "ctype": "miscellaneous",
          "subtype": "variable",
          "file": "projects/dx-monitel-components/.storybook/preview.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "type": "Preview",
          "defaultValue": "{\r\n  parameters: {\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
        }
      ]
    },
    "groupedFunctions": {},
    "groupedEnumerations": {},
    "groupedTypeAliases": {
      "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<MeAccordionProps>",
          "file": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<MeButtonDirective | DxButtonComponent>",
          "file": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<MeCalendarProps>",
          "file": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<MeLoadIndicatorDirective>",
          "file": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<LoadPanelDemoComponent>",
          "file": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<PopoverHostComponent>",
          "file": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<DxPopupModule | MePopupDirective>",
          "file": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<TabPanelHostComponent>",
          "file": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<MeTabsProps>",
          "file": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<ToastDemoComponent>",
          "file": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ],
      "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts": [
        {
          "name": "Story",
          "ctype": "miscellaneous",
          "subtype": "typealias",
          "rawtype": "StoryObj<TooltipDemoComponent>",
          "file": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
          "deprecated": false,
          "deprecationMessage": "",
          "description": "",
          "kind": 183
        }
      ]
    }
  },
  "routes": [],
  "coverage": {
    "count": 2,
    "status": "low",
    "files": [
      {
        "filePath": "projects/dx-monitel-components/.storybook/preview.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "preview",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "AccordionDemoComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "Company",
        "coveragePercent": 0,
        "coverageCount": "0/10",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "MeAccordionProps",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Collapsible",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomAnimation",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomClass",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "defaultCompanies",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Large",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Multiple",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-accordion/me-accordion.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Small",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 100,
        "coverageCount": "1/1",
        "status": "very-good"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-button/me-button.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Success",
        "coveragePercent": 100,
        "coverageCount": "1/1",
        "status": "very-good"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "CalendarDemoComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "MeCalendarProps",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomFirstDay",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomWeekNumberRule",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Disabled",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithoutWeekNumbers",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-calendar/me-calendar.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "YearZoomLevel",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Template",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithAccentColor",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-load-indicator/me-load-indicator.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithCustomImage",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "LoadPanelDemoComponent",
        "coveragePercent": 0,
        "coverageCount": "0/12",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomClass",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "HideOnOutsideClick",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Large",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-load-panel/me-load-panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Small",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "PopoverHostComponent",
        "coveragePercent": 0,
        "coverageCount": "0/14",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithAnimation",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithOverlay",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-popover/me-popover.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithTitle",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Scroll",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Size",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Toolbar",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-popup/me-popup.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "words",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "TabPanelHostComponent",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomHeight",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithCustomClass",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithoutAnimation",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tab-panel/me-tab-panel.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithoutSwipe",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "type": "interface",
        "linktype": "interface",
        "name": "MeTabsProps",
        "coveragePercent": 0,
        "coverageCount": "0/6",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "BottomPosition",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "defaultTabsData",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "InsideStylingMode",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LargeSize",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "SmallSize",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithCustomClass",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tabs/me-tabs.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "WithIcons",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "ToastDemoComponent",
        "coveragePercent": 0,
        "coverageCount": "0/8",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomAnimation",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomClass",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomPosition",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "LongDuration",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-toast/me-toast.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
        "type": "component",
        "linktype": "component",
        "name": "TooltipDemoComponent",
        "coveragePercent": 0,
        "coverageCount": "0/21",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomAnimations",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomContent",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "CustomPositions",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "Default",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      },
      {
        "filePath": "projects/dx-monitel-components/src/stories/me-tooltip/me-tooltip.stories.ts",
        "type": "variable",
        "linktype": "miscellaneous",
        "linksubtype": "variable",
        "name": "meta",
        "coveragePercent": 0,
        "coverageCount": "0/1",
        "status": "low"
      }
    ]
  }
}
